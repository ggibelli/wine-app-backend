{"version":3,"sources":["generated/graphql.tsx","cache.ts","utils/updateCache.ts","containers/LogoutButton.tsx","utils/styleHook.tsx","components/Navigation/Drawer.tsx","components/Notification.tsx","components/FormFields/TextField.tsx","components/FormFields/PasswordField.tsx","components/LoginModal/LoginForm.tsx","components/LoginModal/index.tsx","components/Navigation/AppBar.tsx","components/Navigation/index.tsx","components/UserForm/data.ts","utils/passwordValidator.ts","utils/pivaValidator.ts","utils/phoneNumberValidator.ts","utils/formHelper.ts","components/FormFields/SliderField.tsx","components/FormFields/ComboboxField.tsx","components/FormFields/ComboboxProvince.tsx","components/FormFields/ComboboxComuni.tsx","components/UserForm/index.tsx","pages/Signup.tsx","pages/Home.tsx","components/FormFields/TextFieldAdornment.tsx","components/FormFields/ComboboxFieldWines.tsx","components/WineForms/Search/WineFormQuery.tsx","components/FormFields/SelectField.tsx","components/AddressForm/index.tsx","components/WineForms/Post/WineFormMutation.tsx","components/BackButton.tsx","pages/BuySell.tsx","components/StyledBox.tsx","components/CardWine.tsx","components/FilterAds/index.tsx","utils/multiFilter.ts","components/Snackbar.tsx","components/FilterAds/Order.tsx","components/InfiniteScrollFetch.tsx","utils/useIntersectionHook.tsx","pages/Ads.tsx","containers/FavoriteButton.tsx","components/NegotiationModal/index.tsx","components/CardWineDetail.tsx","containers/CloseNegotiationButton.tsx","components/OpenNegotiations.tsx","pages/Ad.tsx","pages/MyAds.tsx","containers/CreateReview.tsx","components/CardNegotiation.tsx","pages/Negotiations.tsx","pages/Negotiation.tsx","components/MessageListEl.tsx","pages/Messages.tsx","components/Chat/MessageChat.tsx","components/Chat/index.tsx","pages/Message.tsx","pages/SavedAds.tsx","components/CardReview.tsx","pages/Reviews.tsx","pages/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Province","Regioni","TypeAd","TypeProduct","Menzione","MetodoProduttivo","Colore","EspressioneComunitaria","DenomZona","QueryOrderBy","AlertStatus","cache","InMemoryCache","typePolicies","Query","fields","ads","keyArgs","merge","existing","incoming","args","merged","slice","offset","i","length","push","apply","__typeName","pageCount","adsForUser","_","unionBy","messagesForNegotiation","messages","negotiations","isLoggedIn","read","isLoggedInVar","notification","searchedWine","myInfo","makeVar","localStorage","getItem","_id","undefined","gql","NegotiationDetailsFragmentDoc","MessageDetailsFragmentDoc","ReviewDetailsFragmentDoc","LoginDocument","CreateUserDocument","CreateAdWineDocument","SaveAdDocument","CreateNegotiationDocument","UpdateNegotiationDocument","CreateMessageDocument","CreateReviewDocument","FavoriteDocument","MeDocument","IsUserLoggedInDocument","useIsUserLoggedInQuery","baseOptions","Apollo","NotificationDocument","WineSearchedDocument","AdsWineDocument","AdDocument","WinesDocument","useWinesQuery","NegotiationsDocument","NegotiationDocument","MessagesDocument","MessagesNegotiationDocument","ReviewsDocument","NegotiationsForAdDocument","AdsForUserDocument","AdPostedFollowUpDocument","MessageSentDocument","NegotiationCreatedDocument","NegotiationClosedDocument","ReviewCreatedDocument","updateCacheNegotiations","client","negotiation","cachedDataMeLocal","cloneDeep","readQuery","query","variables","cachedDataNegotiationsLocal","me","writeQuery","data","LogoutButton","useApolloClient","onClick","gc","removeItem","Divider","ListItem","button","ListItemIcon","data-testid","ListItemText","primary","useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","paper","marginTop","spacing","display","flexDirection","alignItems","buyButton","palette","main","backgroundColor","grey","sellButton","dark","secondary","light","buyHome","sellHome","cruiseHome","index","useStylesForms","form","borderRadius","margin","padding","width","submit","formSell","borderColor","borderStyle","borderWidth","submitSell","input","inputSell","underline","borderBottom","disabled","focused","error","underlineSell","useStyleRating","root","list","bottomPush","position","bottom","textAlign","paddingBottom","StyledRating","withStyles","iconFilled","iconHover","Rating","Drawer","state","toggleDrawer","classes","SwipeableDrawer","anchor","open","onClose","onOpen","className","role","onKeyDown","Box","component","mb","pt","Avatar","Typography","name","Link","RouterLink","to","value","rating","readOnly","precision","List","React","forwardRef","itemProps","ref","Badge","badgeContent","numAds","numOpenNegs","savedAds","Notification","setIsVisible","loading","isVisible","timeoutId","clearTimeout","current","window","setTimeout","message","Alert","severity","type","TextField","props","useField","field","touched","fullWidth","InputLabelProps","style","labelTextColor","multiline","class","InputProps","inputTextColor","underlineColor","inputProps","min","max","step","placeholder","label","helperText","PasswordField","show","setShow","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","IconButton","aria-label","onMouseDown","event","preventDefault","FormHelperText","avatar","LoginForm","onSubmit","initialValues","password","email","validationSchema","Yup","required","isValid","dirty","Container","CssBaseline","variant","Button","Grid","container","item","xs","href","LoginModal","handleClose","Dialog","aria-labelledby","DialogContent","DialogActions","flexGrow","menuButton","marginRight","title","HeaderBar","meQueryResult","onSubmitLogin","setState","openModal","setOpenModal","badgeNumber","filter","isViewed","sentBy","handleClickOpen","a","loggedUser","myReviews","reviews","r","forUser","reducedReview","reduce","acc","val","drawerData","isLoading","neg","isConcluded","numClosedNegs","firstName","SigninButton","navigate","fontSize","AppBar","Toolbar","edge","textDecoration","Header","onCompleted","onError","lazyQuery","result","useLoginMutation","login","errors","setItem","response","token","user","address","loginMutation","useNegotiationCreatedSubscription","onSubscriptionData","subscriptionData","negotiationCreated","useNegotiationClosedSubscription","cachedDataMessagesLocal","content","sentTo","dateSent","Date","toISOString","indexNegToClose","findIndex","ad","updateCacheMessagesAdmin","negotiationClosed","wineName","__typename","useAdPostedFollowUpSubscription","useMessageSentSubscription","cachedMessagesLocal","id","cachedMessagesNegotiationsLocal","unshift","updateCacheMessages","messageSent","useReviewCreatedSubscription","review","reviewCreated","createdBy","updateCacheReview","optionsRegioni","Abruzzo","Basilicata","Calabria","Campania","Emilia","Friuli","Lazio","Liguria","Lombardia","Marche","Molise","Piemonte","Puglia","Sardegna","Sicilia","Toscana","Trentino","Umbria","Valdaosta","Veneto","schema","passwordValidator","is","has","uppercase","lowercase","digits","not","spaces","oneOf","arr","isPivaValid","ccNum","len","bit","sum","parseInt","charAt","Boolean","phoneNumberValidator","exec","lastName","reEmail","test","isValidPassword","validate","rePassword","phoneNumber","pIva","shape","via","CAP","toString","comune","provincia","regione","hideContact","provinceConRegione","TO","VC","NO","CN","AT","AL","BI","VB","AO","VA","CO","SO","MI","BG","BS","PV","CR","MN","LC","LO","MB","BZ","TN","VR","VI","BL","TV","VE","PD","RO","UD","GO","TS","PN","IM","SV","GE","SP","PC","PR","RE","MO","BO","FE","RA","FC","RN","MS","LU","PT","FI","LI","PI","AR","SI","GR","PO","PG","TR","PU","AN","MC","AP","FM","VT","RI","RM","LT","FR","AQ","TE","PE","CH","CB","IS","CE","BN","NA","AV","SA","FG","BA","TA","BR","LE","BT","PZ","MT","CS","CZ","RC","KR","VV","TP","PA","ME","AG","CL","EN","CT","RG","SR","SS","NU","CA","OR","SU","comuniConProvincia","SliderField","FormControlLabel","control","Switch","labelColor","ComboboxField","items","setFieldValue","Autocomplete","options","getOptionLabel","inputRoot","onChange","e","option","renderInput","params","autoComplete","ComboboxProvince","values","useFormikContext","map","getOptionSelected","ComboboxComuni","UserForm","sm","justify","SignUp","createUser","errorMessages","text","createUserMutation","userInputValues","userInput","maxWidth","Home","boxShadow","p","m","mt","px","bgcolor","TextFieldAdornment","adornment","groupLabel","Combobox","defaultWine","denominazioneVino","sort","b","localeCompare","groupBy","defaultValue","harvest","abv","price","liters","WineFormQuery","adType","wineOptions","wines","wine","year","getFullYear","Skeleton","height","positive","moreThan","lessThan","Buy","SelectField","Select","native","icon","textColor","AddressForm","isSameAddress","initialAddress","WineFormMutation","searchedWineCache","sottoZona","menzione","metodoProduttivo","needsFollowUp","Object","BackButton","pathname","useLocation","split","size","startIcon","typeAd","Sell","sameAddress","differentAddress","lazyWines","useCreateAdWineMutation","createAd","update","variablesCacheUpdate","typeProduct","cachedDataAdsLocal","updateCacheAd","createAdWineMutation","buyOrSellText","buyerSellerText","isPost","adInput","priceFrom","priceTo","litersFrom","litersTo","AdWine","StyledBox","sellColor","notActive","buyColor","children","CardWine","useTheme","useMediaQuery","breakpoints","up","isBuy","pointerEvent","isActive","pointerEvents","align","datePosted","PurpleCheckbox","deepPurple","checked","Checkbox","Filter","isShowAll","setIsShowAll","showFilter","setShowFilter","filterAds","setFilterAds","filtredAds","array","filters","filterKeys","keys","every","key","multiFilter","setFilteredList","Collapse","in","snackbarStyle","cursor","SnackbarAds","setOpen","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","reason","ContentProps","Order","order","setOrder","target","CreatedAtDesc","CreatedAtAsc","PriceDesc","PriceAsc","InfiniteScroll","rootMargin","threshold","entry","setEntry","node","setNode","observer","disconnect","IntersectionObserver","currentObserver","observe","useIntersect","isOk","setIsOk","intersectionRatio","fetchMore","setIsLoading","CircularProgress","Ads","setAds","adsFiltered","setAdsFiltered","limit","orderBy","catch","console","log","url","NoResults","handleFetchMore","setList","FavoriteButton","isFav","indexAd","adSaved","splice","saveAd","setIsFav","NegotiationModal","createNegotiation","CardWineDetail","ContactOrEdit","postedBy","find","adWine","denominazioneZona","numberViews","activeNegotiations","CloseNegotiationButton","closedNegotiation","updateNegotiation","closeNegotiation","handleCloseNegotiation","OpenNegotiations","showNegotiations","negotiationsForAd","dateCreated","dateConcluded","Ad","setAd","useParams","useCreateNegotiationMutation","createdNegotiation","useNegotiationsForAdLazyQuery","lazyNegotiations","lazyNegResult","buyerOrSeller","newNegotiation","forUserAd","Backdrop","MyAds","active","setActive","hideNotActive","setHideNotActive","labels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","CreateReview","idUser","idNegotiation","setValue","hover","setHover","setReview","useStylesHook","classesTextField","classesStars","createdReview","createReview","visibility","DialogTitle","newValue","onChangeActive","newHover","ml","rows","CardNegotiation","showCloseNeg","setShowCloseNeg","isReviewed","Negotiations","setNegotiations","negotiationsData","n","refetch","Negotiation","UserContact","MessageListEl","messagesForMe","messagesFromMe","unreadMessages","recipient","Messages","messagesResult","fetchPolicy","messagesForNegotiationObj","entries","el","MessageChat","isMyMessage","borderTopLeft","borderTopRight","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","Chat","propsMessage","messageContent","setMessageContent","isFirstRender","setIsFirstRender","divRef","scroll","top","document","body","offsetHeight","left","behavior","overflowY","paddingTop","rowsMax","newMessage","handleCreate","Message","sortedMessage","setSortedMessage","useCreateMessageMutation","createdMessage","createMessage","reverse","format","now","SavedAds","CardReview","isMyReview","Reviews","setReviews","Pages","path","createMuiTheme","typography","fontFamily","join","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","typeDefs","authLink","setContext","headers","authorization","httpLink","HttpLink","uri","wsLink","WebSocketLink","reconnect","connectionParams","authToken","splitLink","definition","getMainDefinition","kind","operation","concat","ApolloClient","link","resolvers","ReactDOM","render","getElementById"],"mappings":"mLAyqBYA,EA8GAC,EAuBAC,EAKAC,EAKAC,EAOAC,EAQAC,EAKAC,EAMAC,EAQAC,EAaAC,E,iICh2BCC,EAAuB,IAAIC,gBAAc,CACpDC,aAAc,CACZC,MAAO,CACLC,OAAQ,CACNC,IAAK,CAGHC,QAAS,CAAC,WAAY,cAAe,UACrCC,MAJG,SAIGC,EAAUC,EAJb,GAIkC,IAATC,EAAQ,EAARA,KACpBC,EAASH,EAAWA,EAASH,IAAIO,MAAM,GAAK,GAClD,GAAIF,EAGF,IAHQ,MAEeA,EAAfG,cAFA,MAES,EAFT,EAGCC,EAAI,EAAGA,EAAIL,EAASJ,IAAIU,SAAUD,EACzCH,EAAQE,EAAoBC,GAAKL,EAASJ,IAAIS,QAQhDH,EAAOK,KAAKC,MAAMN,EAAQF,EAASJ,KAGrC,MAAO,CACLa,WAAY,YACZb,IAAKM,EACLQ,UAAWV,EAASU,aAI1BC,WAAY,CACVd,QAAS,CAAC,QACVC,MAFU,WAEsB,IAA1BC,EAAyB,uDAAd,GAAIC,EAAU,uCAiB7B,MAAO,CACLS,WAAY,YACZb,IAAKgB,IAAEC,QAAQd,EAASH,IAAKI,EAASJ,IAAK,SAC3Cc,UAAWV,EAASU,aAI1BI,uBAAwB,CACtBjB,QAAS,CAAC,eACVC,MAFsB,SAEhBC,EAAUC,EAFM,GAEe,IAATC,EAAQ,EAARA,KACpBC,EAASH,EAAWA,EAASgB,SAASZ,MAAM,GAAK,GACvD,GAAIF,EAGF,IAHQ,MAEeA,EAAfG,cAFA,MAES,EAFT,EAGCC,EAAI,EAAGA,EAAIL,EAASe,SAAST,SAAUD,EAC9CH,EAAQE,EAAoBC,GAAKL,EAASe,SAASV,QAQrDH,EAAOK,KAAKC,MAAMN,EAAQF,EAASe,UAGrC,MAAO,CACLN,WAAY,gBACZM,SAAUb,EACVQ,UAAWV,EAASU,aAI1BM,aAAc,CACZnB,SAAS,EAGTC,MAJY,WAIoB,IAA1BC,EAAyB,uDAAd,GAAIC,EAAU,uCAoB7B,MAAO,CACLS,WAAY,oBACZO,aAAcJ,IAAEC,QACdd,EAASiB,aACThB,EAASgB,aACT,SAEFN,UAAWV,EAASU,aAI1BO,WAAY,CACVC,KADU,WAER,OAAOC,MAGXC,aAAc,CACZF,KADY,WAEV,OAAOE,MAGXC,aAAc,CACZH,KADY,WAEV,OAAOG,MAGXC,OAAQ,CACNJ,KADM,WAEJ,OAAOI,WAQNH,EAAgBI,oBACzBC,aAAaC,QAAQ,uBAKZH,EAASC,kBAIZ,CAAEG,IAAKF,aAAaC,QAAQ,qBAezBJ,EAAeE,uBAAkCI,GAOjDP,EAAeG,uBAAkCI,G,22fDkflcA8GAC,K,kBAAAA,E,wBAAAA,E,oBAAAA,E,oBAAAA,E,gBAAAA,E,gBAAAA,E,cAAAA,E,kBAAAA,E,sBAAAA,E,gBAAAA,E,gBAAAA,E,oBAAAA,E,gBAAAA,E,oBAAAA,E,kBAAAA,E,kBAAAA,E,oBAAAA,E,gBAAAA,E,sBAAAA,E,iBAAAA,M,cAuBAC,K,YAAAA,E,WAAAA,M,cAKAC,K,gBAAAA,E,mBAAAA,M,cAKAC,K,oBAAAA,E,kBAAAA,E,sBAAAA,E,eAAAA,M,cAOAC,K,8BAAAA,E,sBAAAA,E,0BAAAA,E,oBAAAA,E,iBAAAA,M,cAQAC,K,gBAAAA,E,eAAAA,M,cAKAC,K,UAAAA,E,UAAAA,E,SAAAA,M,cAMAC,K,UAAAA,E,YAAAA,E,UAAAA,E,sBAAAA,E,aAAAA,M,cAQAC,K,6BAAAA,E,+BAAAA,E,qBAAAA,E,wBAAAA,M,cAaAC,K,kBAAAA,E,kBAAAA,E,YAAAA,E,eAAAA,M,KA6oCwBsC,cAAH,MAA1B,IAiCMC,GAAgCD,cAAH,MAkC7BE,GAA4BF,cAAH,MA6BzBG,GAA2BH,cAAH,MA4BxBI,GAAgBJ,cAAH,MA8DnB,IAAMK,GAAqBL,cAAH,MA0DGA,cAAH,MAuDGA,cAAH,MAuDxB,IAAMM,GAAuBN,cAAH,MAgFGA,cAAH,MAsD1B,IAAMO,GAAiBP,cAAH,MAiEKA,cAAH,MAoDtB,IAAMQ,GAA4BR,cAAH,KAYlCC,IA2CG,IAAMQ,GAA4BT,cAAH,KAYlCC,IA2CqCD,cAAH,MAsD/B,IAAMU,GAAwBV,cAAH,KAY9BE,IA2CG,IAAMS,GAAuBX,cAAH,KAY7BG,IA2CG,IAAMS,GAAmBZ,cAAH,MA+EEA,cAAH,MAmDrB,IAAMa,GAAab,cAAH,MA6EhB,IAAMc,GAAyBd,cAAH,MAqB5B,SAASe,GACdC,GAKA,OAAOC,WACLH,GACAE,GAwBG,IAAME,GAAuBlB,cAAH,MAwDHA,cAAH,KAgFpB,IAAMmB,GAAuBnB,cAAH,KA8D1B,IAAMoB,GAAkBpB,cAAH,KA+FrB,IAAMqB,GAAarB,cAAH,KAkFhB,IAAMsB,GAAgBtB,cAAH,KA2BnB,SAASuB,GACdP,GAEA,OAAOC,WACLK,GACAN,GAiBG,IAAMQ,GAAuBxB,cAAH,IAmB7BC,IAsDG,IAAMwB,GAAsBzB,cAAH,IAkB5BC,IAiDG,IAAMyB,GAAmB1B,cAAH,IAMzBE,IA6CG,IAAMyB,GAA8B3B,cAAH,IASpCE,IAqDG,IAAM0B,GAAkB5B,cAAH,IASxBG,IA2C0BH,cAAH,IAMvBG,IAyCG,IAAM0B,GAA4B7B,cAAH,KAgE/B,IAAM8B,GAAqB9B,cAAH,KAwGxB,IAAM+B,GAA2B/B,cAAH,KAgEJA,cAAH,KAsCvB,IAAMgC,GAAsBhC,cAAH,IAM5BE,IAiCG,IAAM+B,GAA6BjC,cAAH,IAMnCC,IAiCG,IAAMiC,GAA4BlC,cAAH,KAgE/B,IAAMmC,GAAwBnC,cAAH,IAM9BG,IE1tIG,IAAMiC,GAA0B,SACrCC,EACAC,GAMU,IAAD,EACHC,EAAsCvD,IAAEwD,UAE5CH,EAAOI,UAAU,CACfC,MAAO7B,GACP8B,UAAW,MAGTC,EAA8D5D,IAAEwD,UAEpEH,EAAOI,UAAU,CACfC,MAAOlB,GACPmB,UAAW,MAIE,OAAjBJ,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBM,GAAGzD,oBAAtB,SAAoCT,KAAK2D,GAGzCD,EAAOS,WAAW,CAChBJ,MAAO7B,GACP8B,UAAW,GACXI,KAAMR,IAGHK,IACLA,EAA4BxD,aAAaA,aAAaT,KACpD2D,GAEFM,EAA4BxD,aAAaN,WAAa,EAEtDuD,EAAOS,WAAW,CAChBJ,MAAOlB,GACPmB,UAAW,GACXI,KAAMH,M,6RCzFGI,GAAyB,WACpC,IAAMX,EAASY,4BAef,OACE,sBAAKC,QAfa,WAClBb,EAAO1E,MAAMwF,KAGbvD,aAAawD,WAAW,sBACxBxD,aAAawD,WAAW,mBAMxB7D,GAAc,GACdG,EAAO,OAGP,UACE,cAAC2D,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,GAAA,EAAD,CAAcC,cAAY,gBAA1B,SACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,gB,4BC3BjBC,GAAYC,cACvB,SAACC,GAAD,OACEC,aAAa,CACXC,SAAU,CACRC,OAAQH,EAAMG,OAAOC,OAAS,EAC9BC,MAAO,QAETC,MAAO,CACLC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,cAEdC,UAAW,CACTP,MAAOL,EAAMa,QAAQhB,QAAQiB,KAC7BC,gBAAiBC,KAAK,IACtB,UAAW,CACTD,gBAAiBC,KAAK,OAG1BC,WAAY,CACVZ,MAAO,OACPU,gBAAiBf,EAAMa,QAAQhB,QAAQiB,KACvC,UAAW,CACTC,gBAAiBf,EAAMa,QAAQhB,QAAQqB,MAEzC,aAAc,CACZb,MAAO,UACPU,gBAAiBf,EAAMa,QAAQM,UAAUC,QAG7CC,QAAS,CACP,UAAW,CACTN,gBAAiB,qBAGrBO,SAAU,CACR,UAAW,CACTP,gBAAiB,uBAGrBQ,WAAY,CACV,UAAW,CACTR,gBAAiB,2BAIzB,CAAES,MAAO,IAGEC,GAAiB1B,cAC5B,SAACC,GAAD,MAAmB,CACjBM,MAAO,CACLC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEde,KAAM,CACJC,aAAc,GACdtB,MAAO,OACPuB,OAAQ,EACRC,QAAS,EACTd,gBAAiB,UACjBe,MAAO,OACPvB,UAAWP,EAAMQ,QAAQ,IAE3BuB,OAAQ,CACN1B,MAAOL,EAAMa,QAAQhB,QAAQiB,KAC7BC,gBAAiBC,KAAK,IACtB,UAAW,CACTD,gBAAiBC,KAAK,MAExBY,OAAQ5B,EAAMQ,QAAQ,EAAG,EAAG,GAC5BC,QAAS,OACTE,WAAY,UAEdqB,SAAU,CACRL,aAAc,GACdM,YAAa,UACbC,YAAa,QACbC,YAAa,MACb9B,MAAO,UACPuB,OAAQ,EACRC,QAAS,EACTd,gBAAiB,OACjBe,MAAO,OACPvB,UAAWP,EAAMQ,QAAQ,IAE3B4B,WAAY,CACV/B,MAAO,OACPU,gBAAiBf,EAAMa,QAAQhB,QAAQiB,KACvC,UAAW,CACTC,gBAAiBf,EAAMa,QAAQhB,QAAQqB,MAEzC,aAAc,CACZb,MAAO,UACPU,gBAAiBf,EAAMa,QAAQM,UAAUC,OAE3CQ,OAAQ5B,EAAMQ,QAAQ,EAAG,EAAG,GAC5BC,QAAS,OACTE,WAAY,UAGd0B,MAAO,CACLhC,MAAO,SAETiC,UAAW,CACTjC,MAAO,WAETkC,UAAW,CACTlC,MAAO,QACP,WAAY,CACVmC,aAAc,mBAEhB,oBAAqB,CACnBA,aAAc,mBAEhB,UAAW,CACTA,aAAc,mBAEhBC,SAAU,GACVC,QAAS,GACTC,MAAO,IAETC,cAAe,CACbvC,MAAO,UACP,WAAY,CACVmC,aAAc,qBAEhB,oBAAqB,CACnBA,aAAc,qBAEhB,UAAW,CACTA,aAAc,qBAEhBC,SAAU,GACVC,QAAS,GACTC,MAAO,OAGX,CAAEnB,MAAO,IAGEqB,GAAiB9C,cAC5B,iBAAO,CACL+C,KAAM,CACJhB,MAAO,IACPrB,QAAS,OACTE,WAAY,UAEdoC,KAAM,CACJjB,MAAO,KAETkB,WAAY,CACVlB,MAAO,IACPmB,SAAU,QACVC,OAAQ,EACRC,UAAW,SACXC,cAAe,OAGnB,CAAE5B,MAAO,IAGE6B,GAAeC,aAAW,CACrCC,WAAY,CACVlD,MAAO,WAETmD,UAAW,CACTnD,MAAO,YALiBiD,CAOzBG,M,UC9IUC,GAIR,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,aAAc3E,EAAW,EAAXA,KACrB4E,EAAUhB,KAwFhB,OACE,8BACE,cAACiB,GAAA,EAAD,CACEC,OAAO,OACPC,KAAML,EACNM,QAASL,EACTM,OAAQN,EAJV,SAzFS,oCACX,sBACEO,UAAWN,EAAQd,KACnBqB,KAAK,eACLhF,QAASwE,EACTS,UAAWT,EAJb,UAME,eAACU,GAAA,EAAD,CAAKC,UAAU,WAAWC,GAAI,EAAGC,GAAI,EAAGxC,YAAY,cAApD,UACE,cAACyC,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAYtE,MAAM,UAAUkE,UAAU,KAAtC,mBACGtF,EAAKA,YADR,aACG,EAAW2F,OAEd,cAACC,GAAA,EAAD,CAAMN,UAAWO,IAAYC,GAAG,cAAhC,SACE,sBAAKZ,UAAWN,EAAQf,KAAxB,UACE,cAACO,GAAD,CACEuB,KAAK,YACLI,MAAK,OAAE/F,QAAF,IAAEA,GAAF,UAAEA,EAAMA,YAAR,aAAE,EAAYgG,OACnBC,UAAQ,EACRC,UAAW,KAEb,cAACb,GAAA,EAAD,WAAU,OAAJrF,QAAI,IAAJA,GAAA,UAAAA,EAAMA,YAAN,eAAYgG,QAAZ,kBAAyBhG,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAMA,YAA/B,aAAyB,EAAYgG,OAArC,KAAiD,eAI7D,cAAC1F,GAAA,EAAD,IACA,eAAC6F,GAAA,EAAD,WACE,eAAC5F,GAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACE,GAAA,EAAD,CAAcC,QAAQ,eAExB,eAACL,GAAA,EAAD,CACEC,QAAM,EAEN8E,UAAWc,IAAMC,YAAW,SAACC,EAAWC,GAAZ,OAE1B,aADA,CACC,IAAD,aAAYT,GAAI,UAAWS,IAAKA,GAASD,OAL7C,UAQE,cAAC7F,GAAA,EAAD,UACE,cAAC+F,GAAA,EAAD,CAAOC,aAAY,UAAEzG,EAAKA,YAAP,aAAE,EAAW0G,OAAQtF,MAAM,UAA9C,SACE,cAAC,KAAD,QAGJ,cAACT,GAAA,EAAD,CAAcC,QAAQ,0BAExB,eAACL,GAAA,EAAD,CACEC,QAAM,EAEN8E,UAAWc,IAAMC,YAAW,SAACC,EAAWC,GAAZ,OAE1B,aADA,CACC,IAAD,aAAYT,GAAI,cAAeS,IAAKA,GAASD,OALjD,UAQE,cAAC7F,GAAA,EAAD,UACE,cAAC+F,GAAA,EAAD,CAAOC,aAAY,UAAEzG,EAAKA,YAAP,aAAE,EAAW2G,YAAavF,MAAM,UAAnD,SACE,cAAC,KAAD,QAGJ,cAACT,GAAA,EAAD,CAAcC,QAAQ,2BAExB,eAACL,GAAA,EAAD,CACEC,QAAM,EAEN8E,UAAWc,IAAMC,YAAW,SAACC,EAAWC,GAAZ,OAE1B,aADA,CACC,IAAD,aAAYT,GAAI,WAAYS,IAAKA,GAASD,OAL9C,UAQE,cAAC7F,GAAA,EAAD,UACE,cAAC+F,GAAA,EAAD,CAAOC,aAAY,UAAEzG,EAAKA,YAAP,aAAE,EAAW4G,SAAUxF,MAAM,UAAhD,SACE,cAAC,KAAD,QAGJ,cAACT,GAAA,EAAD,CAAcC,QAAQ,uBAExB,cAACN,GAAA,EAAD,IACA,qBAAK4E,UAAWN,EAAQb,WAAxB,SACE,cAAC,GAAD,YAcDD,Q,UChII+C,GAAyB,WAAO,IAAD,MNynG1C5I,EMxnGMqB,EAASY,4BACT8E,EAAU,WACdvI,OAAaO,GACb8J,GAAa,GACbxH,EAAO1E,MAAMwF,MAL2B,EN8nGnClC,WACLC,GACAF,GMznGM+B,EAPkC,EAOlCA,KAAM+G,EAP4B,EAO5BA,QAASrD,EAPmB,EAOnBA,MAPmB,EAQR0C,YAAe,GARP,mBAQnCY,EARmC,KAQxBF,EARwB,KASpCG,EAAYb,cAAiCpJ,GAgBnD,OAfAoJ,aAAgB,WACVpG,IAAS+G,GACXD,GAAa,GAEfI,aAAaD,EAAUE,WACtB,CAACnH,EAAM+G,IAEVX,aAAgB,WACVY,IACFC,EAAUE,QAAUC,OAAOC,YAAW,WACpCrC,MACC,QAEJ,CAACgC,EAAD,OAAYhH,QAAZ,IAAYA,GAAZ,UAAYA,EAAMvD,oBAAlB,aAAY,EAAoB6K,WAE9BN,GAAatD,EACT,KAGP,cAAC6D,GAAA,EAAD,CAAOC,SAAQ,OAAExH,QAAF,IAAEA,GAAF,UAAEA,EAAMvD,oBAAR,aAAE,EAAoBgL,KAAMzC,QAASA,EAApD,gBACGhF,QADH,IACGA,GADH,UACGA,EAAMvD,oBADT,aACG,EAAoB6K,W,sECnBdI,GAA6B,SAACC,GAAW,IAAD,EACfC,aAAS,CAC3CjC,KAAMgC,EAAMhC,KACZ8B,KAAME,EAAMF,OAHqC,mBAC5CI,EAD4C,YACnCnE,EADmC,EACnCA,MAAOoE,EAD4B,EAC5BA,QAIvB,OACE,cAAC,KAAD,2BACMD,GADN,IAEEE,WAAS,EACTC,gBAAiB,CACfC,MAAO,CAAE7G,MAAOuG,EAAMO,iBAExBC,UAAWR,EAAMQ,UACjBV,KAAME,EAAMF,KAEZvC,UAAWyC,EAAMS,MACjBC,WAAY,CACVnD,UAAWyC,EAAMW,eACjB1D,QAAS,CACPtB,UAAWqE,EAAMY,iBAGrBC,WAAY,CACV,aAAcb,EAAMhC,KACpB8C,IAAKd,EAAMc,IACXC,IAAKf,EAAMe,IACXC,KAAMhB,EAAMgB,MAEdjF,WAAiB1G,IAAV0G,GAAuBoE,EAC9BpH,cAAaiH,EAAMhC,KACnBiD,YAAajB,EAAMiB,YACnBC,MAAOlB,EAAMkB,MACbC,WAAYpF,M,4FCvCLqF,GAGR,SAAC,GAA8B,IAA5BpD,EAA2B,EAA3BA,KAAM4C,EAAqB,EAArBA,eAAqB,EACTnC,YAAwB,GADf,mBAC1B4C,EAD0B,KACpBC,EADoB,OAGGrB,aAAS,CAC3CjC,KAAMA,EACN8B,KAAMuB,EAAO,OAAS,aALS,mBAG1BnB,EAH0B,YAGjBnE,EAHiB,EAGjBA,MAAOoE,EAHU,EAGVA,QASvB,OACE,eAACoB,GAAA,EAAD,CAAaxF,MAAOoE,QAAqB9K,IAAV0G,EAAqBqE,WAAS,EAA7D,UACE,cAACoB,GAAA,EAAD,CACElB,MAAO,CAAE7G,MAAO,WAChBgI,QAAQ,8BAFV,sBAMA,cAACC,GAAA,EAAD,2BACMxB,GADN,IAEEW,WAAY,CAAE,aAAc7C,EAAM,cAAeA,GACjD8B,KAAMuB,EAAO,OAAS,WACtBf,MAAO,CAAE7G,MAAO,WAChBwD,QAAS,CACPtB,UAAWiF,GAEbe,aACE,cAACC,GAAA,EAAD,CAAgBvF,SAAS,MAAzB,SACE,cAACwF,GAAA,EAAD,CACEC,aAAW,6BACXtJ,QA9BQ,kBAAY8I,GAASD,IA+B7BU,YA1BoB,SAC9BC,GAEAA,EAAMC,kBAoBE,SAKGZ,EAAO,cAAC,KAAD,IAAiB,cAAC,KAAD,WAKjC,cAACa,GAAA,EAAD,UAAiBnG,Q,4DCjCjB7C,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CM,MAAO,CACLC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdoI,OAAQ,CACNnH,OAAQ5B,EAAMQ,QAAQ,GACtBO,gBAAiBf,EAAMa,QAAQM,UAAUL,MAE3CY,KAAM,CACJI,MAAO,OACPvB,UAAWP,EAAMQ,QAAQ,IAE3B6B,MAAO,CACLhC,MAAO,WAETkC,UAAW,CACT,WAAY,CACVC,aAAc,qBAEhB,oBAAqB,CACnBA,aAAc,qBAEhB,UAAW,CACTA,aAAc,qBAEhBC,SAAU,GACVC,QAAS,GACTC,MAAO,IAETZ,OAAQ,CACNH,OAAQ5B,EAAMQ,QAAQ,EAAG,EAAG,QAInBwI,GAGR,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUhF,EAAc,EAAdA,QAEhB,OACE,cAAC,KAAD,CACEgF,SAAUA,EACVC,cAJkB,CAAEC,SAAU,GAAIC,MAAO,IAKzCC,iBAAkBC,KAAW,CAC3BF,MAAOE,OAAaF,MAAM,yBAAyBG,SAAS,YAC5DJ,SAAUG,OAAaC,SAAS,cALpC,SAQG,YAAyB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACL5F,EAAU/D,KAChB,OACE,eAAC4J,GAAA,EAAD,CAAWnF,UAAU,OAArB,UACE,cAACoF,GAAA,EAAD,IACA,sBAAKxF,UAAWN,EAAQvD,MAAxB,UACE,cAACoE,GAAA,EAAD,CAAQP,UAAWN,EAAQkF,OAA3B,SACE,cAAC,KAAD,MAEF,cAACpE,GAAA,EAAD,CAAYJ,UAAU,KAAKqF,QAAQ,KAAnC,qBAGA,eAAC,KAAD,CAAMzF,UAAWN,EAAQnC,KAAzB,UACE,cAAC,GAAD,CACEkD,KAAK,QACL8B,KAAK,QACLoB,MAAM,QACND,YAAY,gBACZL,eAAgB3D,EAAQtB,UACxB4E,eAAgB,UAChBI,eAAgB1D,EAAQxB,QAG1B,cAAC,GAAD,CACEuC,KAAK,WACL4C,eAAgB3D,EAAQtB,YAE1B,cAACsH,GAAA,EAAD,CAEEnD,KAAK,SACLjE,UAAWgH,IAAUD,EACrBxC,WAAS,EACT4C,QAAQ,YACRvJ,MAAM,UACN8D,UAAWN,EAAQ9B,OAPrB,oBAWA,eAAC+H,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,GAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACE,cAACpF,GAAA,EAAD,CAASqF,KAAK,IAAIN,QAAQ,QAA1B,gCAIF,cAACE,GAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACnF,GAAA,EAAD,CACEN,UAAWM,IACXE,GAAG,UACH6E,QAAQ,QACRxK,QAAS6E,EAJX,SAMG,qDCjHVkG,GAIR,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAapG,EAAqB,EAArBA,KAAMiF,EAAe,EAAfA,SACzB,OACE,eAACoB,GAAA,EAAD,CACErG,KAAMA,EACNC,QAASmG,EACTE,kBAAgB,oBAHlB,UAKE,cAACC,GAAA,EAAD,UACE,cAAC,GAAD,CAAWtB,SAAUA,EAAUhF,QAASmG,MAE1C,cAACI,GAAA,EAAD,UACE,cAACX,GAAA,EAAD,CAAQzK,QAASgL,EAAa/J,MAAM,UAApC,0BCFFP,GAAYC,cAAW,SAACC,GAAD,OAC3BC,aAAa,CACX6C,KAAM,CACJ2H,SAAU,GAEZC,WAAY,CACVC,YAAa3K,EAAMQ,QAAQ,IAE7BoK,MAAO,CACLH,SAAU,QAKHI,GAcR,SAAC,GAAsC,IAAD,sDAAnCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACflH,EAAU/D,KADyB,EAEfuF,YAAe,GAFA,mBAElC1B,EAFkC,KAE3BqH,EAF2B,KAGnCpH,EAAe,WACnBoH,GAAUrH,IAJ6B,EAMP0B,YAAe,GANR,mBAMlC4F,EANkC,KAMvBC,EANuB,KAOnCC,GAAc,UAAAL,EAAc7L,YAAd,mBAAoBF,UAApB,mBAAwB1D,gBAAxB,eAAkCT,QAAlC,UAChBkQ,EAAc7L,YADE,iBAChB,EAAoBF,UADJ,iBAChB,EAAwB1D,gBADR,aAChB,EAAkC+P,QAChC,SAAC7E,GAAD,eACGA,EAAQ8E,UACT9E,EAAQ+E,OAAOtP,OAAf,UAAuB8O,EAAc7L,YAArC,iBAAuB,EAAoBF,UAA3C,aAAuB,EAAwB/C,QACjDpB,OACF,EACE2Q,EAAkB,WACtBL,GAAa,IAGTd,EAAc,WAClBc,GAAa,IAETjC,EAAQ,uCAAG,+BAAAuC,EAAA,6DACfpC,EADe,EACfA,MACAD,EAFe,EAEfA,SAFe,SAOT4B,EAAc,CAClB3B,MAAOA,EACPD,SAAUA,IATG,OAWfiB,IAXe,2CAAH,sDAaRqB,EAAaxO,KACbyO,GAAY,UAAAZ,EAAc7L,YAAd,mBAAoBF,UAApB,mBAAwB4M,eAAxB,eAAiC/Q,QAAjC,UACdkQ,EAAc7L,YADA,iBACd,EAAoBF,UADN,iBACd,EAAwB4M,eADV,aACd,EAAiCP,QAC/B,SAACQ,GAAD,eAAOA,EAAEC,QAAQ7P,OAAV,UAAkB8O,EAAc7L,YAAhC,iBAAkB,EAAoBF,UAAtC,aAAkB,EAAwB/C,QAEnD,KACE8P,GAAyB,OAATJ,QAAS,IAATA,OAAA,EAAAA,EAAW9Q,QAE7B8Q,EAAUK,QAAO,SAACC,EAAKC,GAAN,MAAe,CAC9BhH,OAAQgH,EAAIhH,OAAS+G,EAAI/G,WAE3B,KAEEA,EAAS6G,EACXA,EAAc7G,QAAd,OAAwByG,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAW9Q,QACnC,KACEsR,GAAyB,CAC7BC,UAAWrB,EAAc9E,QACzBrD,MAAOmI,EAAcnI,MACrB1D,KAAM,CACJ0G,OAAM,UAAEmF,EAAc7L,YAAhB,iBAAE,EAAoBF,UAAtB,iBAAE,EAAwB7E,WAA1B,aAAE,EAA6BU,OACrCgL,YAAW,UAAEkF,EAAc7L,YAAhB,iBAAE,EAAoBF,UAAtB,iBAAE,EAAwBzD,oBAA1B,aAAE,EAAsC8P,QACjD,SAACgB,GAAD,OAASA,IAAQA,EAAIC,eACrBzR,OACF0R,cAAa,UAAExB,EAAc7L,YAAhB,iBAAE,EAAoBF,UAAtB,iBAAE,EAAwBzD,oBAA1B,aAAE,EAAsC8P,QACnD,SAACgB,GAAD,OAASA,GAAOA,EAAIC,eACpBzR,OACFiL,SAAQ,UAAEiF,EAAc7L,YAAhB,iBAAE,EAAoBF,UAAtB,iBAAE,EAAwB8G,gBAA1B,aAAE,EAAkCjL,OAC5CgK,KAAI,UAAEkG,EAAc7L,YAAhB,iBAAE,EAAoBF,UAAtB,aAAE,EAAwBwN,UAI9BtH,WAIEuH,GAAe,WAAO,IAAD,EACzB,iBAAIf,EAAWxM,YAAf,aAAI,EAAiB1D,YAEjB,cAACkN,GAAA,EAAD,CAAYrJ,QAAS,kBAAMqN,YAAS,cAApC,SACE,cAAChH,GAAA,EAAD,CAAOC,aAAcyF,EAAa9K,MAAM,YAAxC,SACE,cAAC,KAAD,CAAkBqM,SAAS,QAAQxF,MAAO,CAAE7G,MAAO,cAKpD,cAACwJ,GAAA,EAAD,CAAQzK,QAASmM,EAAjB,qBAcT,OACE,sBAAKpH,UAAWN,EAAQf,KAAxB,UACE,cAAC6J,GAAA,EAAD,CAAQ1J,SAAS,SAAjB,SACE,eAAC2J,GAAA,EAAD,YACG,UAAAnB,EAAWxM,YAAX,eAAiB1D,YAdxB,cAACkN,GAAA,EAAD,CACEoE,KAAK,QACL1I,UAAWN,EAAQ6G,WACnBrK,MAAM,UACNqI,aAAW,OACXtJ,QAASwE,EALX,SAOE,cAAC,KAAD,MAOkD,KAC9C,cAAC,GAAD,CAAQD,MAAOA,EAAOC,aAAcA,EAAc3E,KAAMiN,KACxD,cAACrH,GAAA,EAAD,CACEV,UAAWN,EAAQ+G,MACnBrG,UAAWO,IACXC,GAAG,IACHmC,MAAO,CAAE4F,eAAgB,QAJ3B,SAME,cAACxI,GAAA,EAAD,UACE,cAACK,GAAA,EAAD,CAAYtE,MAAM,gBAAgBuJ,QAAQ,KAA1C,sBAKJ,cAAC4C,GAAD,SAGJ,cAAC,GAAD,IACA,cAAC,GAAD,CACEpC,YAAaA,EACbpG,KAAMiH,EACNhC,SAAUA,QCpJL8D,GAAmB,WAAO,IAAD,EZkhGpC7P,EYjhGMuO,EAAaxO,KACbsB,EAASY,4BAFqB,GZkhGpCjC,EY/gG2C,CACzC8P,YAAa,SAAC/N,GACRA,EAAKF,IACPnD,EAAO,eACFqD,EAAKF,MAIdkO,QAAS,SAACtK,GACRjH,EAAa,CACXgL,KAAM,QACNH,QAAS5D,EAAM4D,YZsgGdpJ,eACLJ,GACAG,IYthGkC,mBAG7BgQ,EAH6B,KAGlBC,EAHkB,KAkBpC9H,aAAgB,WAAO,IAAD,GACpB,UAAIoG,EAAWxM,YAAf,aAAI,EAAiB1D,aACnB2R,MAED,WAACzB,EAAWxM,YAAZ,aAAC,EAAiB1D,aAtBe,MZuoE/B,SACL2B,GAKA,OAAOC,cACLb,GACAY,GYvnEsBkQ,CAAiB,CACvCH,QAAS,SAACtK,GAAD,OACPjH,EAAa,CACXgL,KAAM,QACNH,QAAS5D,EAAM4D,WAEnByG,YAAa,YAAgB,IAAD,IACO,UADnBK,EAAY,EAAZA,MACgB,KAArB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,cAAP,eAAe1S,UACjBkB,aAAayR,QACX,qBADF,OAEEF,QAFF,IAEEA,GAFF,UAEEA,EAAOG,gBAFT,aAEE,EAAiBC,OAEnB3R,aAAayR,QACX,kBADF,OAEEF,QAFF,IAEEA,GAFF,UAEEA,EAAOG,gBAFT,aAEE,EAAiBE,KAAK1R,KAExBP,GAAc,GACdC,EAAa,CACXgL,KAAM,UACNH,QAAS,iBAEX3K,EAAO,CACLI,IAAG,UAAEqR,EAAMG,gBAAR,aAAE,EAAgBE,KAAK1R,IAC1BuQ,UAAS,UAAEc,EAAMG,gBAAR,aAAE,EAAgBE,KAAKnB,UAChCoB,QAAO,UAAEN,EAAMG,gBAAR,aAAE,EAAgBE,KAAKC,YAGlC,OAAIN,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,cAAX,aAAI,EAAe1S,SACjBc,EAAa,CACXgL,KAAM,QACNH,QAAS,cA9BVqH,EAxB6B,oBA2D9B7C,EAAa,uCAAG,+BAAAS,EAAA,6DACpBpC,EADoB,EACpBA,MACAD,EAFoB,EAEpBA,SAFoB,SAOdyE,EAAc,CAClB/O,UAAW,CACTuK,MAAOA,EACPD,SAAUA,KAVM,2CAAH,sDAmEnB,OZwiIK,SACLjM,GAKOC,kBAGLgB,GAA4BjB,GYtmI9B2Q,CAAkC,CAChCC,mBAAoB,YAA2B,IAAD,EAAvBC,EAAuB,EAAvBA,iBACrBrS,EAAa,CACXgL,KAAM,UACNH,QAAS,6CAGXjI,GACEC,EADqB,UAErBwP,EAAiB9O,YAFI,aAErB,EAAuB+O,uBZopIxB,SACL9Q,GAKOC,kBAGLiB,GAA2BlB,GYzpI7B+Q,CAAiC,CAC/BH,mBAAoB,YAA2B,IAAD,MAAvBC,EAAuB,EAAvBA,kBVRa,SACtCxP,EACAC,GAGU,IAAD,EACH0P,EAAkDhT,IAAEwD,UACxDH,EAAOI,UAAU,CACfC,MAAOhB,MAGLmB,EAAKnD,IACY,OAAvBsS,QAAuB,IAAvBA,KAAyB7S,SAASR,KAAK,CACrCwQ,UAAU,EACV8C,QAAS,cACT3P,YAAa,CAAExC,IAAK,4BACpBA,IAAK,cACLoS,OAAQ,CAAEpS,IAAG,OAAE+C,QAAF,IAAEA,OAAF,EAAEA,EAAI/C,KACnBsP,OAAQ,CAAEiB,UAAW,kBACrB8B,UAAU,IAAIC,MAAOC,gBAEvBhQ,EAAOS,WAAW,CAChBJ,MAAOhB,GACPqB,KAAMiP,IAGR,IAAMzP,EAAsCvD,IAAEwD,UAC5CH,EAAOI,UAAU,CACfC,MAAO7B,MAGLyR,EAAe,OAAG/P,QAAH,IAAGA,GAAH,UAAGA,EAAmBM,GAAGzD,oBAAzB,aAAG,EAAoCmT,WAC1D,SAACrC,GAAD,OAASA,EAAIsC,GAAG1S,OAAP,OAAewC,QAAf,IAAeA,OAAf,EAAeA,EAAaxC,QAGrCwS,GACAA,GAAmB,IADnB,OAEA/P,QAFA,IAEAA,OAFA,EAEAA,EAAmBM,GAAGzD,gBAEtBmD,EAAkBM,GAAGzD,aAAakT,GAAiBnC,aAAc,GAEnE9N,EAAOS,WAAW,CAChBJ,MAAO7B,GACPkC,KAAMR,IAER,IAAMK,EAA8D5D,IAAEwD,UACpEH,EAAOI,UAAU,CACfC,MAAOlB,MAGNoB,IACsB,OAA3BA,QAA2B,IAA3BA,KAA6BxD,aAAaA,aAAa8P,QACrD,SAACgB,GAAD,OAASA,EAAIsC,GAAG1S,OAAP,OAAewC,QAAf,IAAeA,OAAf,EAAeA,EAAaxC,QAEvCuC,EAAOS,WAAW,CAChBJ,MAAOlB,GACPuB,KAAMH,KU/CJ6P,CACEpQ,EADsB,UAEtBwP,EAAiB9O,YAFK,aAEtB,EAAuB2P,mBAEzB,IAAMC,EACoD,YAAxD,UAAAd,EAAiB9O,YAAjB,eAAuB2P,kBAAkBE,cAAzC,UACAf,EAAiB9O,YADjB,aACA,EAAuB2P,kBAAkBC,UAC3CnT,EAAa,CACXgL,KAAM,OAENH,QAAQ,0DAAD,OAA4DsI,QZg9HpE,SACL3R,GAKOC,kBAGLc,GAA0Bf,GYr9H5B6R,CAAgC,CAC9BjB,mBAAoB,WAClBpS,EAAa,CACXgL,KAAM,OACNH,QAAS,2DZqhIV,SACLrJ,GAKOC,kBAGLe,GAAqBhB,GY1hIvB8R,CAA2B,CACzBlB,mBAAoB,YAA2B,IAAD,EAAvBC,EAAuB,EAAvBA,kBVqEQ,SACjCxP,EACAgI,GAGU,IAAD,EACH9H,EAAsCvD,IAAEwD,UAC5CH,EAAOI,UAAU,CACfC,MAAO7B,MAGM,OAAjB0B,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBM,GAAG1D,gBAAtB,SAAgCR,KAAK0L,GACrChI,EAAOS,WAAW,CAChBJ,MAAO7B,GACPkC,KAAMR,IAER,IAAMwQ,EAA8C/T,IAAEwD,UACpDH,EAAOI,UAAU,CACfC,MAAOhB,MAGQ,OAAnBqR,QAAmB,IAAnBA,KAAqB5T,SAASR,KAAK0L,GACnChI,EAAOS,WAAW,CAChBJ,MAAOhB,GACPiB,UAAW,CAAEqQ,GAAE,OAAE3I,QAAF,IAAEA,OAAF,EAAEA,EAAS/H,YAAYxC,KACtCiD,KAAMgQ,IAER,IAAME,EAA8DjU,IAAEwD,UACpEH,EAAOI,UAAU,CACfC,MAAOf,GACPgB,UAAW,CAAEqQ,GAAE,OAAE3I,QAAF,IAAEA,OAAF,EAAEA,EAAS/H,YAAYxC,QAGX,OAA/BmT,QAA+B,IAA/BA,KAAiC/T,uBAAuBC,SAAS+T,QAC/D7I,GAEFhI,EAAOS,WAAW,CAChBJ,MAAOf,GACPgB,UAAW,CAAEqQ,GAAE,OAAE3I,QAAF,IAAEA,OAAF,EAAEA,EAAS/H,YAAYxC,KACtCiD,KAAMkQ,IU3GJE,CAAoB9Q,EAAD,UAASwP,EAAiB9O,YAA1B,aAAS,EAAuBqQ,gBZ6pIlD,SACLpS,GAKOC,kBAGLkB,GAAuBnB,GYnqIzBqS,CAA6B,CAC3BzB,mBAAoB,YAA2B,IAAD,EACtC0B,GAAS,UAD6B,EAAvBzB,iBACW9O,YAAjB,eAAuBwQ,gBAAiB,KAClDD,IACL9T,EAAa,CACXgL,KAAM,OACNH,QAAQ,cAAD,OAAgBiJ,EAAOE,UAAUnD,UAAjC,oCVsGkB,SAC/BhO,EACAiR,GAGI,IAAD,EACG/Q,EAAsCvD,IAAEwD,UAC5CH,EAAOI,UAAU,CACfC,MAAO7B,MAGM,OAAjB0B,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBM,GAAG4M,eAAtB,SAA+B9Q,KAAK2U,GACpCjR,EAAOS,WAAW,CAChBJ,MAAO7B,GACPkC,KAAMR,IUlHJkR,CAAkBpR,EAAQiR,OAGvB,cAAC,GAAD,CAAW1E,cAAeqC,EAAQpC,cAAeA,KClJ7C6E,GAAiB,CAC5B,CACE5K,MAAO7L,EAAQ0W,QACf/H,MAAO,WAET,CACE9C,MAAO7L,EAAQ2W,WACfhI,MAAO,cAET,CACE9C,MAAO7L,EAAQ4W,SACfjI,MAAO,YAET,CACE9C,MAAO7L,EAAQ6W,SACflI,MAAO,YAET,CACE9C,MAAO7L,EAAQ8W,OACfnI,MAAO,kBAET,CACE9C,MAAO7L,EAAQ+W,OACfpI,MAAO,yBAET,CACE9C,MAAO7L,EAAQgX,MACfrI,MAAO,SAET,CACE9C,MAAO7L,EAAQiX,QACftI,MAAO,WAET,CACE9C,MAAO7L,EAAQkX,UACfvI,MAAO,aAET,CACE9C,MAAO7L,EAAQmX,OACfxI,MAAO,UAET,CACE9C,MAAO7L,EAAQoX,OACfzI,MAAO,UAET,CACE9C,MAAO7L,EAAQqX,SACf1I,MAAO,YAET,CACE9C,MAAO7L,EAAQsX,OACf3I,MAAO,UAET,CACE9C,MAAO7L,EAAQuX,SACf5I,MAAO,YAET,CACE9C,MAAO7L,EAAQwX,QACf7I,MAAO,WAET,CACE9C,MAAO7L,EAAQyX,QACf9I,MAAO,WAET,CACE9C,MAAO7L,EAAQ0X,SACf/I,MAAO,uBAET,CACE9C,MAAO7L,EAAQ2X,OACfhJ,MAAO,UAET,CACE9C,MAAO7L,EAAQ4X,UACfjJ,MAAO,iBAET,CACE9C,MAAO7L,EAAQ6X,OACflJ,MAAO,W,UC/ELmJ,GAAS,I,QAAIC,GAEnBD,GACGE,KACAzJ,IAAI,GACJyJ,KACAxJ,IAAI,KACJyJ,MACAC,YACAD,MACAE,YACAF,MACAG,OAAO,GACPH,MACAI,MACAC,SACAN,KACAK,MACAE,MAAM,CAAC,WAAY,gBAEPT,ICtBgBU,GDsBhBV,MCLAW,IAjBgBD,GAe5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAdtB,SAAUE,GAMf,IALA,IAGE5F,EAHE6F,EAAMD,EAAMjX,OACdmX,EAAM,EACNC,EAAM,EAGDF,GACL7F,EAAMgG,SAASJ,EAAMK,SAASJ,GAAM,IAEpCE,IAAQD,GAAO,GAAKJ,GAAI1F,GAAOA,EAGjC,OAAOkG,QAAQH,GAAOA,EAAM,KAAO,KCNxBI,GAPc,SAACpN,GAG5B,QAFc,wCACOqN,KAAKrN,ICIfqE,GAAmBC,KAAW,CACzCiD,UAAWjD,OACR3B,IAAI,GAAI,iCACR4B,SAAS,YACZ+I,SAAUhJ,OACP3B,IAAI,GAAI,iCACR4B,SAAS,YACZH,MAAOE,OAAaF,MAAM,yBAAyBG,SAAS,YAC5DgJ,QAASjJ,OACNoI,MAAM,CAACpI,KAAQ,UAAW,wBAC1BC,SAAS,YACZJ,SAAUG,OACPC,SAAS,YACTiJ,KAAK,iBAAkB,qBAAqB,SAACxN,GAC5C,QAAKA,GACEyN,GAAgBC,SAAS1N,MAEpC2N,WAAYrJ,OACToI,MAAM,CAACpI,KAAQ,aAAc,2BAC7BC,SAAS,YACZqJ,YAAatJ,OACVC,SAAS,YACTiJ,KAAK,qBAAsB,sCAAsC,SAACxN,GAAD,OAChEoN,GAAqBpN,MAEzB6N,KAAMvJ,OACHC,SAAS,YACTiJ,KAAK,WAAY,+BAA+B,SAACxN,GAChD,QAAKA,GACE4M,GAAY5M,MAEvB2I,QAASrE,OAAawJ,MAAM,CAC1BC,IAAKzJ,OAAaC,SAAS,YAC3ByJ,IAAK1J,OAAakJ,KAAK,MAAO,gCAAgC,SAACxN,GAC7D,QAAKA,GAC8B,IAA5BA,EAAMiO,WAAWrY,UAE1BsY,OAAQ5J,OAAaC,SAAS,YAC9B4J,UAAW7J,OAAaC,SAAS,YACjC6J,QAAS9J,OAAaC,SAAS,cAEjC8J,YAAa/J,OAAWC,SAAS,cAGtB+J,GAAqB,CAChC,CACEH,UAAWja,EAASqa,GACpBH,QAASja,EAAQqX,UAEnB,CACE2C,UAAWja,EAASsa,GACpBJ,QAASja,EAAQqX,UAEnB,CACE2C,UAAWja,EAASua,GACpBL,QAASja,EAAQqX,UAEnB,CACE2C,UAAWja,EAASwa,GACpBN,QAASja,EAAQqX,UAEnB,CACE2C,UAAWja,EAASya,GACpBP,QAASja,EAAQqX,UAEnB,CACE2C,UAAWja,EAAS0a,GACpBR,QAASja,EAAQqX,UAEnB,CACE2C,UAAWja,EAAS2a,GACpBT,QAASja,EAAQqX,UAEnB,CACE2C,UAAWja,EAAS4a,GACpBV,QAASja,EAAQqX,UAEnB,CACE2C,UAAWja,EAAS6a,GACpBX,QAASja,EAAQ4X,WAEnB,CACEoC,UAAWja,EAAS8a,GACpBZ,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAAS+a,GACpBb,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASgb,GACpBd,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASib,GACpBf,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASkb,GACpBhB,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASmb,GACpBjB,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASob,GACpBlB,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASqb,GACpBnB,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASsb,GACpBpB,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASub,GACpBrB,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASwb,GACpBtB,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAASyb,GACpBvB,QAASja,EAAQkX,WAEnB,CACE8C,UAAWja,EAAS0b,GACpBxB,QAASja,EAAQ0X,UAEnB,CACEsC,UAAWja,EAAS2b,GACpBzB,QAASja,EAAQ0X,UAEnB,CACEsC,UAAWja,EAAS4b,GACpB1B,QAASja,EAAQ6X,QAEnB,CACEmC,UAAWja,EAAS6b,GACpB3B,QAASja,EAAQ6X,QAEnB,CACEmC,UAAWja,EAAS8b,GACpB5B,QAASja,EAAQ6X,QAEnB,CACEmC,UAAWja,EAAS+b,GACpB7B,QAASja,EAAQ6X,QAEnB,CACEmC,UAAWja,EAASgc,GACpB9B,QAASja,EAAQ6X,QAEnB,CACEmC,UAAWja,EAASic,GACpB/B,QAASja,EAAQ6X,QAEnB,CACEmC,UAAWja,EAASkc,GACpBhC,QAASja,EAAQ6X,QAEnB,CACEmC,UAAWja,EAASmc,GACpBjC,QAASja,EAAQ+W,QAEnB,CACEiD,UAAWja,EAASoc,GACpBlC,QAASja,EAAQ+W,QAEnB,CACEiD,UAAWja,EAASqc,GACpBnC,QAASja,EAAQ+W,QAEnB,CACEiD,UAAWja,EAASsc,GACpBpC,QAASja,EAAQ+W,QAEnB,CACEiD,UAAWja,EAASuc,GACpBrC,QAASja,EAAQiX,SAEnB,CACE+C,UAAWja,EAASwc,GACpBtC,QAASja,EAAQiX,SAEnB,CACE+C,UAAWja,EAASyc,GACpBvC,QAASja,EAAQiX,SAEnB,CACE+C,UAAWja,EAAS0c,GACpBxC,QAASja,EAAQiX,SAEnB,CACE+C,UAAWja,EAAS2c,GACpBzC,QAASja,EAAQ8W,QAEnB,CACEkD,UAAWja,EAAS4c,GACpB1C,QAASja,EAAQ8W,QAEnB,CACEkD,UAAWja,EAAS6c,GACpB3C,QAASja,EAAQ8W,QAEnB,CACEkD,UAAWja,EAAS8c,GACpB5C,QAASja,EAAQ8W,QAEnB,CACEkD,UAAWja,EAAS+c,GACpB7C,QAASja,EAAQ8W,QAEnB,CACEkD,UAAWja,EAASgd,GACpB9C,QAASja,EAAQ8W,QAEnB,CACEkD,UAAWja,EAASid,GACpB/C,QAASja,EAAQ8W,QAEnB,CACEkD,UAAWja,EAASkd,GACpBhD,QAASja,EAAQ8W,QAEnB,CACEkD,UAAWja,EAASmd,GACpBjD,QAASja,EAAQ8W,QAEnB,CACEkD,UAAWja,EAASod,GACpBlD,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAASqd,GACpBnD,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAASsd,GACpBpD,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAASud,GACpBrD,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAASwd,GACpBtD,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAASyd,GACpBvD,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAAS0d,GACpBxD,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAAS2d,GACpBzD,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAAS4d,GACpB1D,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAAS6d,GACpB3D,QAASja,EAAQyX,SAEnB,CACEuC,UAAWja,EAAS8d,GACpB5D,QAASja,EAAQ2X,QAEnB,CACEqC,UAAWja,EAAS+d,GACpB7D,QAASja,EAAQ2X,QAEnB,CACEqC,UAAWja,EAASge,GACpB9D,QAASja,EAAQmX,QAEnB,CACE6C,UAAWja,EAASie,GACpB/D,QAASja,EAAQmX,QAEnB,CACE6C,UAAWja,EAASke,GACpBhE,QAASja,EAAQmX,QAEnB,CACE6C,UAAWja,EAASme,GACpBjE,QAASja,EAAQmX,QAEnB,CACE6C,UAAWja,EAASoe,GACpBlE,QAASja,EAAQmX,QAEnB,CACE6C,UAAWja,EAASqe,GACpBnE,QAASja,EAAQgX,OAEnB,CACEgD,UAAWja,EAASse,GACpBpE,QAASja,EAAQgX,OAEnB,CACEgD,UAAWja,EAASue,GACpBrE,QAASja,EAAQgX,OAEnB,CACEgD,UAAWja,EAASwe,GACpBtE,QAASja,EAAQgX,OAEnB,CACEgD,UAAWja,EAASye,GACpBvE,QAASja,EAAQgX,OAEnB,CACEgD,UAAWja,EAAS0e,GACpBxE,QAASja,EAAQ0W,SAEnB,CACEsD,UAAWja,EAAS2e,GACpBzE,QAASja,EAAQ0W,SAEnB,CACEsD,UAAWja,EAAS4e,GACpB1E,QAASja,EAAQ0W,SAEnB,CACEsD,UAAWja,EAAS6e,GACpB3E,QAASja,EAAQ0W,SAEnB,CACEsD,UAAWja,EAAS8e,GACpB5E,QAASja,EAAQoX,QAEnB,CACE4C,UAAWja,EAAS+e,GACpB7E,QAASja,EAAQoX,QAEnB,CACE4C,UAAWja,EAASgf,GACpB9E,QAASja,EAAQ6W,UAEnB,CACEmD,UAAWja,EAASif,GACpB/E,QAASja,EAAQ6W,UAEnB,CACEmD,UAAWja,EAASkf,GACpBhF,QAASja,EAAQ6W,UAEnB,CACEmD,UAAWja,EAASmf,GACpBjF,QAASja,EAAQ6W,UAEnB,CACEmD,UAAWja,EAASof,GACpBlF,QAASja,EAAQ6W,UAEnB,CACEmD,UAAWja,EAASqf,GACpBnF,QAASja,EAAQsX,QAEnB,CACE0C,UAAWja,EAASsf,GACpBpF,QAASja,EAAQsX,QAEnB,CACE0C,UAAWja,EAASuf,GACpBrF,QAASja,EAAQsX,QAEnB,CACE0C,UAAWja,EAASwf,GACpBtF,QAASja,EAAQsX,QAEnB,CACE0C,UAAWja,EAASyf,GACpBvF,QAASja,EAAQsX,QAEnB,CACE0C,UAAWja,EAAS0f,GACpBxF,QAASja,EAAQsX,QAEnB,CACE0C,UAAWja,EAAS2f,GACpBzF,QAASja,EAAQ2W,YAEnB,CACEqD,UAAWja,EAAS4f,GACpB1F,QAASja,EAAQ2W,YAEnB,CACEqD,UAAWja,EAAS6f,GACpB3F,QAASja,EAAQ4W,UAEnB,CACEoD,UAAWja,EAAS8f,GACpB5F,QAASja,EAAQ4W,UAEnB,CACEoD,UAAWja,EAAS+f,GACpB7F,QAASja,EAAQ4W,UAEnB,CACEoD,UAAWja,EAASggB,GACpB9F,QAASja,EAAQ4W,UAEnB,CACEoD,UAAWja,EAASigB,GACpB/F,QAASja,EAAQ4W,UAEnB,CACEoD,UAAWja,EAASkgB,GACpBhG,QAASja,EAAQwX,SAEnB,CACEwC,UAAWja,EAASmgB,GACpBjG,QAASja,EAAQwX,SAEnB,CACEwC,UAAWja,EAASogB,GACpBlG,QAASja,EAAQwX,SAEnB,CACEwC,UAAWja,EAASqgB,GACpBnG,QAASja,EAAQwX,SAEnB,CACEwC,UAAWja,EAASsgB,GACpBpG,QAASja,EAAQwX,SAEnB,CACEwC,UAAWja,EAASugB,GACpBrG,QAASja,EAAQwX,SAEnB,CACEwC,UAAWja,EAASwgB,GACpBtG,QAASja,EAAQwX,SAEnB,CACEwC,UAAWja,EAASygB,GACpBvG,QAASja,EAAQwX,SAEnB,CACEwC,UAAWja,EAAS0gB,GACpBxG,QAASja,EAAQwX,SAEnB,CACEwC,UAAWja,EAAS2gB,GACpBzG,QAASja,EAAQuX,UAEnB,CACEyC,UAAWja,EAAS4gB,GACpB1G,QAASja,EAAQuX,UAEnB,CACEyC,UAAWja,EAAS6gB,GACpB3G,QAASja,EAAQuX,UAEnB,CACEyC,UAAWja,EAAS8gB,G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EtB,CACEN,OAAQ,QACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,sBACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,YACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,UACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,WACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,aACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,UACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,QACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,gBACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,mBACRC,UAAWja,EAASsa,IAEtB,CACEN,OAAQ,mBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,QACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,QACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,sBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,YACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,OACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,mBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,iBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,cACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,eACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,iBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,aACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,mBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,gBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,oBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,WACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,cACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,uBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,2BACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,cACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,oBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,aACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,YACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,WACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,YACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,cACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,gBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,qBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,WACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,oBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,WACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,0BACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,YACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,WACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,OACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,WACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,iBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,gBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,mBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,QACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,cACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,OACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,WACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,WACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,mBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,kBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,YACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,QACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,aACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,QACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,cACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,kBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,YACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,yBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,oBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,qBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,aACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,SACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,OACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,cACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,UACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,kBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,iBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,YACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,YACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,YACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,iBACRC,UAAWja,EAASua,IAEtB,CACEP,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,OACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,wBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,OACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,mBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,mBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,qBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,MACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,qBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,cACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,qBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,uBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,cACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,sBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,uBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,sBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,mBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,iBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,OACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,sBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,eACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,OACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,mBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,cACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,qBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,sBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,4BACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,yBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,iBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,mBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,qBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,mBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,eACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,cACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,eACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,uBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,eACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,iBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,wBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,sBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,yBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,wBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,sBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,sBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,sBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,kBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,mBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,oBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,SACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,iBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,aACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,WACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,eACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,YACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,uBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,mBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,sBACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,UACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,QACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,cACRC,UAAWja,EAASwa,IAEtB,CACER,OAAQ,gBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,YACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,YACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,OACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,gBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,YACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,wBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,QACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,SACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,eACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,mBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,YACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,YACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,yBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,wBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,kBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,iBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,oBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,wBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,kBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,iBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,iBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,eACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,kBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,kBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,YACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,cACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,cACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,SACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,YACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,SACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,QACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,oBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,oBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,eACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,YACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,SACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,cACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,SACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,oBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,oBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,YACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,oBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,mBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,eACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,sBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,OACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,cACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,mBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,cACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,aACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,SACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,iBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,cACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,oBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,mBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,uBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,sBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,sBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,qBACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,cACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,SACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,UACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,SACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,WACRC,UAAWja,EAASya,IAEtB,CACET,OAAQ,QACRC,UAAWja,EAASya,IAEtB,C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B,CACEhB,OAAQ,SACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,SACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,uBACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,qBACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,SACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,WACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,cACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,aACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,WACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,aACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,UACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,SACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,qBACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,kBACRC,UAAWja,EAASgb,IAEtB,CACEhB,OAAQ,gBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,QACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,sBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,iBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,yBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,aACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,gBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,cACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,iBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,qBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,0BACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,gBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,wBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,kBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,iBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,iBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,oBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,kBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,kBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,sBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,aACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,gBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,eACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,oBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,sBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,QACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,iBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,kBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,QACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,kBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,cACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,OACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,qBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,sBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,iBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,oBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,eACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,qBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,oBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,aACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,MACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,yBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,uBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,0BACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,sBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,yBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,wBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,uBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,oBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,uBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,qBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,mBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,SACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,gBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,wBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,mBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,cACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,gBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,UACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,WACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,qBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,qBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,gBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,cACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,YACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,oBACRC,UAAWja,EAASib,IAEtB,CACEjB,OAAQ,qBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,yBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,yBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,wBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,eACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,eACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,oBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,uBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,oBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,wBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,qBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,wBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,2BACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,sBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,eACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,eACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,OACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,oBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,oBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,cACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,eACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,qBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,OACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,wBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,uBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,wBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,qBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,OACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,wBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,2BACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,OACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,cACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,cACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,cACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,QACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,sBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,sBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,oBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,uBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gCACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,uBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,gBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,iBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,mBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,oBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,qBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,cACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,aACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,WACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,UACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,YACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,qBACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,SACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,eACRC,UAAWja,EAASkb,IAEtB,CACElB,OAAQ,kBACRC,UAAWj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OAAQ,SACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,qBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,eACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,cACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,eACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,qBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,eACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,mBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,sBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,kBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,eACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,2BACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,gBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,cACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,SACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,mBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,cACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,SACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,sBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,mBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,kBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,wBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,mBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,OACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,gBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,kBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,6BACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,cACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,cACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,SACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,kBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,kBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,qBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,cACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,cACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,MACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,SACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,mBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,gBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,kBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,2BACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,yBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,0BACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,2BACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,2BACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,+BACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,0BACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,wBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,mBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,sBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,SACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,SACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,6BACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,gBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,kBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,gBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,mBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,qBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,wBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,eACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,kBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,kBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,mBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,WACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,iBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,cACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,eACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,OACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,YACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,QACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,aACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,UACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,oBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,cACRC,UAAWja,EAASob,IAEtB,CACEpB,OAAQ,uBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,mBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,WACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,sBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,eACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,mBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,yBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,WACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,wBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,4BACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,qBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,qBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,mBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,gBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,cACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,eACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,kBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,cACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,cACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,iBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,aACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,SACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,mBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,gCACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,kBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,mBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,QACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,gBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,yBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,WACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,SACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,SACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,uBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,wBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,qBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,8BACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,iBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,QACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,mBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,iBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,aACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,gBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,WACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,qBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,kBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,iBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,qBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,oBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,WACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,eACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,oBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,gBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,qBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,WACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,iBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,mBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,kBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,2BACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,iBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,kBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,cACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,iBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,wBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,uBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,oBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,0BACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,WACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,iBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,oBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,WACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,aACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,eACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,kBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,oBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,sBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,uBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,oBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,kBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,YACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,UACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,mBACRC,UAAWja,EAASqb,IAEtB,CACErB,OAAQ,wBACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,QACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,mBACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,UACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,qBACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,YACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,YACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,cACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,iBACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,gBACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,kBACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,gBACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,6BACRC,UAAWja,EAASsb,IAEtB,CACEtB,OAAQ,WAC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CEvB,OAAQ,gBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,aACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,kBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,qBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,sBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,sBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,iBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,gBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,YACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,gBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,sBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,WACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,QACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,OACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,OACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,cACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,WACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,uBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,YACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,WACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,QACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,WACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,qBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,YACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,gBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,eACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,qBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,YACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,WACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,kBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,WACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,gBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,iBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,WACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,YACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,WACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,qBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,SACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,iBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,aACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,UACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,YACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,YACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,WACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,sBACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,aACRC,UAAWja,EAASub,IAEtB,CACEvB,OAAQ,kBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,YACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,mBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,sBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,qBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,UACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,sBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,eACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,mBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,gBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,iBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,2BACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,qBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,oBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,kBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,oBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,UACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,UACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,uBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,gBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,eACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,gBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,cACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,SACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,aACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,cACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,eACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,UACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,OACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,eACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,cACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,UACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,QACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,SACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,aACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,SACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,UACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,qBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,YACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,aACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,wBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,mBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,kBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,sBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,cACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,wBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,qBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,wBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,0BACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,YACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,kBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,WACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,SACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,2BACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,0BACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,mBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,gBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,wBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,oBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,gBACRC,UAAWja,EAASwb,IAEtB,CACExB,OAAQ,iBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,UACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,SACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,aACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,cACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,oBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,mBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,UACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,YACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,oBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,YACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,iBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,UACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,sBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,mBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,iBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,aACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,aACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,QACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,UACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,QACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,UACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,OACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,UACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,UACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,QACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,YACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,gBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,SACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,SACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,kBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,UACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,SACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,SACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,gBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,SACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,mBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,uBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,iBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,aACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,YACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,UACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,iBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,qBACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,WACRC,UAAWja,EAASyb,IAEtB,CACEzB,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,gCACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,aACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,gCACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,iBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,cACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,sBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,cACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,qBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,kCACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,gCACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,mBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,gBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,OACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,sBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,OACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,aACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,OACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,OACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,iCACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,iBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,mBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,mBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,cACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,eACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,eACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,MACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,gBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,qBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,mBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,kBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,gCACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,cACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,sBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,2BACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,wBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,uBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,0BACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,gBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,4BACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,YACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,mBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,uBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,UACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,gCACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,6BACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,eACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,eACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,kBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,QACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,SACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,aACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,YACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,WACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,oBACRC,UAAWja,EAAS0b,IAEtB,CACE1B,OAAQ,MACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,qBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,YACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,oBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,kBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,kBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,sBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,sBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,iBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,iBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,4BACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,kBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,cACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,YACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,eACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,MACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,YACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,eACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,MACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,sBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,cACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,gBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,eACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,YACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,cACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,gBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,eACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,cACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,sBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,gBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,oBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,eACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,iBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,iBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,mBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,uBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,oBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,wBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,oBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,YACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,YACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,kBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,eACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,iBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,kBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,MACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,cACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,YACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,mBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,iBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,SACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,kBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,eACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,QACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,sBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,mBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,uBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,YACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,2BACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,eACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,cACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,eACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,mBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,WACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,mBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,oCACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,mBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,YACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,aACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,kBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,wBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,gBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,kBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,UACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,kBACRC,UAAWja,EAAS2b,IAEtB,CACE3B,OAAQ,OACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,mBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,SACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,iBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,YACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,aACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,mBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,oBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,mBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,qBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,aACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,cACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,mBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,YACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,aACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,kBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,wBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,mBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,sBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,QACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,iBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,iBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,qBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,cACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,uBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,yBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,SACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,QACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,iBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,SACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,oBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,cACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,SACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,YACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,yBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,mBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,wBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,sBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,YACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,yBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,SACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,iBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,YACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,aACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,sBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,sBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,kBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,kBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,cACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,qBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,qBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,YACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,gBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,wBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,wBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,cACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,2BACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,sBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,wBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,wBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,gCACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,sBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,uBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,kBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,QACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,gBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,OACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,mBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,WACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,cACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,sBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,gBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,SACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,YACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,cACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,mBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,wBACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,QACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,UACRC,UAAWja,EAAS4b,IAEtB,CACE5B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,SACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,sBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,SACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,mBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,qBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,oBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,cACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,qBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,uBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,cACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,iBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,qBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,oBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,eACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,QACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,iBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,OACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,SACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,cACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,sBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,0BACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,kBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,QACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,SACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,kBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,OACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,mBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,uBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,sBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,wBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,gBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,gBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,wBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,qBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,QACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,qBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,OACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,oBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,oBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,kBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,SACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,kBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,mBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,gBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,QACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,oBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,iBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,QACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,uBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,wBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,SACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,QACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,mBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,SACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,qBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,iBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,sBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,oBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,gBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,UACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,aACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,WACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,oBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,YACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,gBACRC,UAAWja,EAAS6b,IAEtB,CACE7B,OAAQ,SACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,iBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,UACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,WACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,oBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,UACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,kBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,oBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,sBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,gBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,iBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,oBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,oBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,qBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,oBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,kBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,oBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,UACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,SACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,UACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,kBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,UACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,QACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,oBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,SACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,+BACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,sBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,kBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,qBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,WACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,qBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,kBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,mBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,qBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,gBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,0BACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,4BACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,uBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,iBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,sBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,0BACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,qBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,SACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,kBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,mBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,YACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,YACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,aACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,kBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,SACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,mBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,kBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,iBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,cACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,mBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,qBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,YACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,YACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,SACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,eACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,mBACRC,UAAWja,EAAS8b,IAEtB,CACE9B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,SACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,QACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,mBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,iBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,uBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,oBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,YACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,kBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,SACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,cACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,sBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,qBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,mBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,YACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,qBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,aACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,gBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,aACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,aACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,wBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,kBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,aACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,QACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,uBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,wBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,qBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,QACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,YACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,kBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,QACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,qBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,oBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,QACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,kBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,uBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,eACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,0BACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,mBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,0BACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,SACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,SACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,QACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,YACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,kBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,iBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,iBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,kBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,aACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,aACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,oBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,aACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,SACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,cACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,cACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,YACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,yBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,wBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,oBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,uBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,iBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,4BACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,4BACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,QACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,YACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,QACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,aACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,gBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,UACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,QACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,WACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,kBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,uBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,kBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,cACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,mBACRC,UAAWja,EAAS+b,IAEtB,CACE/B,OAAQ,gBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,iBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,sBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,cACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,SACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,YACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,SACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,WACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,oBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,OACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,uBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,OACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,UACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,kBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,oBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,0BACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,WACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,SACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,SACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,SACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,aACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,QACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,OACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,SACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,kBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,QACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,mBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,UACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,cACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,cACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,kBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,UACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,uBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,6BACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,sBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,uBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,YACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,SACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,OACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,gBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,iBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,UACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,WACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,qBACRC,UAAWja,EAASgc,IAEtB,CACEhC,OAAQ,cACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,OACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,cACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,oBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,oBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,OACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,cACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,mBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,QACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,kBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,eACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,aACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,eACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,gBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,oBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,WACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,uBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,qBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,cACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,cACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,wBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,gBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,aACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,WACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,WACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,aACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,OACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,kBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,mBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,QACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,SACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,SACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,WACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,iBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,sBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,OACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,aACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,wBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,WACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,aACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,oBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,mBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,sBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,SACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,WACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,mBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,sBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,gBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,iBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,QACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,aACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,sBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,SACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,aACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,6BACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,uBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,wBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,mBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,uBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,0BACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,gCACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,aACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,cACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,oBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,WACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,aACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,QACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,oBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,eACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,SACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,WACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,YACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,oBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,cACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,UACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,kBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,gBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,uBACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,6BACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,MACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,cACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,eACRC,UAAWja,EAASic,IAEtB,CACEjC,OAAQ,QACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,sBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,oBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,iBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,gBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,aACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,SACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,QACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,SACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,QACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,kBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,cACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,qBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,YACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,YACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,UACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,kBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,WACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,WACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,oBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,uBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,kBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,QACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,UACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,2BACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,gBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,YACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,QACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,QACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,SACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,cACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,UACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,qBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,UACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,YACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,sBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,cACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,WACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,SACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,SACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,cACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,yBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,UACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,eACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,WACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,YACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,eACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,uBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,uBACRC,UAAWja,EAASkc,IAEtB,CACElC,OAAQ,aACRC,UAAWja,EAASkc,IAEtB,CACE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wc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,mBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,qBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,SACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,SACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,aACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,YACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,0BACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,iBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,mBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,gBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,YACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,mBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,eACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,iCACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,eACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,SACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,kBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,OACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,OACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,gBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,aACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,YACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,aACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,QACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,YACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,YACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,SACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,OACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,OACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,eACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,eACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,gBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,SACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,aACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,SACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,eACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,SACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,SACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,cACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,mBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,OACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,cACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,UACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,eACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,sBACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,aACRC,UAAWja,EAASwc,IAEtB,CACExC,OAAQ,WACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,SACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,WACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,YACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,aACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,eACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,cACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,iBACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,yBACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,WACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,WACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,WACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,kBACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,eACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,SACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,oBACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,eACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,SACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,oBACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,QACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,SACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,OACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,YACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,YACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,WACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,WACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,aACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,YACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,KACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,QACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,eACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,YACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,QACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,aACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,gBACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,YACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,cACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,0BACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,0BACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,cACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,wBACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,YACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,iBACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,iBACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,OACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,WACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,YACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,WACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,QACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,cACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,SACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,SACRC,UAAWja,EAASyc,IAEtB,CACEzC,OAAQ,UACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,SACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,WACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,SACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,YACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,oBACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,WACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,wBACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,QACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,YACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,oBACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,eACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,QACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,UACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,YACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,SACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,UACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,WACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,qBACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,OACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,UACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,cACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,+BACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,cACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,oBACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,yBACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,UACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,eACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,gBACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,WACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,iBACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,UACRC,UAAWja,EAAS0c,IAEtB,CACE1C,OAAQ,WACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,SACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,YACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,UACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,SACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,uBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,QACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,aACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,SACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,uBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,kBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,sBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,yBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,YACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,OACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,oBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,gBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,SACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,WACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,qBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,UACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,aACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,sBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,cACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,uBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,sBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,WACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,SACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,WACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,sBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,WACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,YACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,kBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,YACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,YACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,aACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,yBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,sBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,UACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,QACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,WACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,YACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,sBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,QACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,mBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,kBACRC,UAAWja,EAAS2c,IAEtB,CACE3C,OAAQ,WACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,QACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,OACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,oBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,YACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,aACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,WACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,YACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,SACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,eACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,YACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,kBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,aACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,sBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,WACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,sBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,kBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,wBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,SACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,YACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,QACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,sBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,cACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,eACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,sBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,uBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,YACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,oBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,eACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,aACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,sBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,QACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,kBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,mBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,kBACRC,UAAWja,EAAS4c,IAEtB,CACE5C,OAAQ,UACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,mBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,QACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,WACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,UACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,sBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,oBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,cACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,SACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,eACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,sBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,uBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,WACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,UACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,WACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,UACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,oBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,WACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,mBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,WACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,qBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,eACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,OACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,UACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,qBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,kBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,qBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,QACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,QACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,uBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,QACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,gBACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,WACRC,UAAWja,EAAS6c,IAEtB,CACE7C,OAAQ,YACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,WACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,gBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,aACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,QACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,sBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,sBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,wBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,UACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,0BACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,SACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,gBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,mBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,WACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,YACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,aACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,UACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,eACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,YACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,oBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,UACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,YACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,SACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,aACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,eACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,UACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,YACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,iBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,WACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,uBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,cACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,WACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,yBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,WACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,YACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,yBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,wBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,iBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,eACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,WACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,uBACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,eACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,UACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,UACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,cACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,UACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,QACRC,UAAWja,EAAS8c,IAEtB,CACE9C,OAAQ,qBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,WACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,YACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,cACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,UACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,mBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,SACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,oBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,YACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,sBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,iBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,iBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,iBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,kBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,2BACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,oBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,kBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,0BACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,YACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,yBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,aACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,QACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,cACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,iBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,WACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,wBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,mBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,QACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,uBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,SACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,aACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,aACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,WACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,WACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,YACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,aACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,cACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,mBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,UACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,UACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,qBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,UACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,iBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,iBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,8BACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,uBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,4BACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,wBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,uBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,uBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,gBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,UACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,eACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,cACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,kBACRC,UAAWja,EAAS+c,IAEtB,CACE/C,OAAQ,UACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,UACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,QACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,WACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,YACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,UACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,UACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,oBACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,YACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,eACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,SACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,YACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,kBACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,gBACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,oBACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,WACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,OACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,YACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,iBACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,cACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,aACRC,UAAWja,EAASgd,IAEtB,CACEhD,OAAQ,YACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,eACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,qBACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,cACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,kBACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,mBACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,SACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,YACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,YACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,SACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,YACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,OACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,iBACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,UACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,cACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,QACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,0BACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,WACRC,UAAWja,EAASid,IAEtB,CACEjD,OAAQ,mBACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,YACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,SACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,oCACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,SACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,aACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,uBACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,WACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,WACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,eACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,UACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,aACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,SACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,WACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,UACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,mBACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,aACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,WACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,0BACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,YACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,cACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,qBACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,cACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,oBACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,cACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,UACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,yBACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,uBACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,WACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,aACRC,UAAWja,EAASkd,IAEtB,CACElD,OAAQ,uBACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,YACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,UACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,UACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,mBACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,WACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,mBACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,gBACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,sBACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,WACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,SACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,YACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,eACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,4BACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,2BACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,YACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,cACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,SACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,cACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,aACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,UACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,qBACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,YACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,kBACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,2BACRC,UAAWja,EAASmd,IAEtB,CACEnD,OAAQ,QACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,UACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,UACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,sBACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,SACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,aACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,YACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,YACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,iBACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,QACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,aACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,UACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,YACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,aACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,UACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,2BACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,OACRC,UAAWja,EAASod,IAEtB,CACEpD,OAAQ,aACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,iBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,QACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,kBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,WACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,cACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,YACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,YACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,4BACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,4BACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,wBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,kBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,cACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,YACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,QACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,YACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,aACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,YACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,aACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,YACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,oBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,cACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,iBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,UACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,2BACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,YACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,WACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,cACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,YACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,iBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,qBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,yBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,sBACRC,UAAWja,EAASqd,IAEtB,CACErD,OAAQ,UACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,WACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,eACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,WACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,WACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,kBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,mBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,UACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,oBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,SACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,kBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,UACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,mBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,WACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,oBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,uBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,SACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,oBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,qBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,wBACRC,UAAWja,EAASsd,IAEtB,CACEtD,OAAQ,iBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,uBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,oBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,YACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,iBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,mBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,mBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,gBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,WACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,WACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,SACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,UACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,UACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,aACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,YACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,iBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,mBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,YACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,iBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,QACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,UACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,YACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,uBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,gBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,uBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,SACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,cACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,WACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,oBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,SACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,8BACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,cACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,YACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,mBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,QACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,SACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,UACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,QACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,4BACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,wBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,uBACRC,UAAWja,EAASud,IAEtB,CACEvD,OAAQ,UACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,sBACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,kBACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,aACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,gBACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,sBACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,SACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,gBACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,UACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,WACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,kBACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,WACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,gBACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,eACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,sBACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,eACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,WACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,WACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,MACRC,UAAWja,EAASwd,IAEtB,CACExD,OAAQ,WACRC,UAAWja,EAASyd,IAEtB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AAQ,kBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,SACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,mBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,yBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,kBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,cACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,WACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,WACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,uBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,kBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,eACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,eACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,sBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,eACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,eACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,SACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,UACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,SACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,WACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,eACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,eACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,WACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,eACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,uBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,sBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,gBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,eACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,sBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,WACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,WACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,UACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,SACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,cACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,mBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,mBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,wBACRC,UAAWja,EAASge,IAEtB,CACEhE,OAAQ,YACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,SACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,UACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,UACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,qBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,WACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,kBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,gBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,gBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,uBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,eACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,gBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,cACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,YACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,eACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,WACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,sBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,aACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,QACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,OACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,SACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,oBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,QACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,UACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,eACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,gBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,gBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,iBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,eACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,SACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,UACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,QACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,QACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,eACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,sBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,YACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,SACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,eACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,oBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,oBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,eACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,aACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,kBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,oBACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,SACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,WACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,cACRC,UAAWja,EAASie,IAEtB,CACEjE,OAAQ,QACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,YACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,uBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,YACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,YACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,WACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,4BACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,iBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,4BACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,eACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,UACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,oBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,YACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,aACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,cACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,UACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,YACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,WACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,SACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,cACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,WACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,WACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,WACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,gBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,gBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,cACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,YACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,cACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,mBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,oBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,aACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,SACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,qBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,WACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,eACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,UACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,oBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,WACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,iBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,iBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,WACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,mBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,cACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,sBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,yBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,UACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,QACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,eACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,wBACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,YACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,QACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,aACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,SACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,QACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,aACRC,UAAWja,EAASke,IAEtB,CACElE,OAAQ,mBACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,mBACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,uBACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,qBACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,gBACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,WACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,iBACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,aACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,YACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,mBACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,YACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,aACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,kBACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,YACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,QACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,cACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,aACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,aACRC,UAAWja,EAASme,IAEtB,CACEnE,OAAQ,wBACRC,UAAWja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CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,WACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,SACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,cACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,YACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,YACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,aACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,mBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,0BACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,oBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,sBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,YACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,kBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,cACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,mBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,mBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,SACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,WACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,QACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,qBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,gBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,eACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,YACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,OACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,QACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,gBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,OACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,WACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,cACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,+BACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,oBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,qBACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,QACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,YACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,aACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,WACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,YACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,YACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,YACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,SACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,WACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,aACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,UACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,cACRC,UAAWja,EAASqe,IAEtB,CACErE,OAAQ,WACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,WACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,YACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,SACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,qBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,UACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,YACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,eACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,YACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,sBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,YACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,WACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,iBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,uBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,qBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,cACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,aACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,kBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,gBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,aACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,eACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,mBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,cACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,WACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,cACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,aACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,iBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,aACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,SACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,gBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,UACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,QACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,WACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,iBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,kBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,aACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,aACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,SACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,YACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,aACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,oBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,mBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,+BACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,sBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,gBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,UACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,UACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,kBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,iBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,iBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,iBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,gBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,iBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,gBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,gBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,qBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,QACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,mBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,QACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,YACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,aACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,kBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,WACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,cACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,QACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,cACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,SACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,SACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,uBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,kBACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,UACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,SACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,eACRC,UAAWja,EAASse,IAEtB,CACEtE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,iBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,qBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,mBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,QACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,mBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,WACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,iBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,qBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,mBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,uBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,mBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,kBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,gBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,uBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,2BACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,OACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,kBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,kBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,gBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,gBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,sBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,aACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,eACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,aACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,WACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,WACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,sBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,kBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,QACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,gBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,sBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,QACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,kBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,WACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,cACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,aACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,iBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,iBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,cACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,cACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,gBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,sBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,eACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,kBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,WACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,OACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,iBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,aACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,mBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,OACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,iBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,QACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,mBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,kBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,gBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,gBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,eACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,eACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,sBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,OACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,0BACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,yBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,kBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,qBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,cACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,kBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,cACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,QACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,SACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,QACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,mBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,oBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,cACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,cACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,aACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,WACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,WACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,gBACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,WACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,QACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,WACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,cACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,YACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,cACRC,UAAWja,EAASue,IAEtB,CACEvE,OAAQ,UACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,WACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,cACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,cACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,qBACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,OACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,QACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,SACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,QACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,OACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,SACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,SACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,SACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,WACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,mBACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,QACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,WACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,QACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,WACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,WACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,aACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,gBACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,wBACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,WACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,oBACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,wBACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,YACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,QACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,UACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,YACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,kBACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,YACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,YACRC,UAAWja,EAASwe,IAEtB,CACExE,OAAQ,eACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,QACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,OACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,QACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,oBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,iBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,eACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,oBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,cACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,aACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,aACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,qBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,cACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,oBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,YACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,aACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,kBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,iBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,aACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,YACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,YACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,eACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,cACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,YACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,YACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,mBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,WACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,iBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,6BACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,cACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,YACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,OACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,yBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,sBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,OACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,aACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,gBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,OACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,eACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,aACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,yBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,2BACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,qBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,wBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,+BACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,6BACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,kBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,wBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,aACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,wBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,aACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,WACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,OACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,iBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,iBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,kBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,cACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,aACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,YACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,eACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,SACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,iBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,eACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,oBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,sBACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,WACRC,UAAWja,EAASye,IAEtB,CACEzE,OAAQ,UACRC,UAAWja,EAAS0e,IAEtB,CACE1E,OAAQ,SACRC,UAAWja,EAAS0e,IAEtB,CACE1E,OAAQ,WACRC,UAAWja,EAAS0e,IAEtB,CACE1E,OAAQ,wBACRC,UAAWja,EAAS0e,IAEtB,CACE1E,OAAQ,UACRC,UAAWja,EAAS0e,IAEtB,CACE1E,OAAQ,WACRC,UAAWja,EA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EtB,CACEhF,OAAQ,qBACRC,UAAWja,EAASgf,IAEtB,CACEhF,OAAQ,kBACRC,UAAWja,EAASgf,IAEtB,CACEhF,OAAQ,gBACRC,UAAWja,EAASgf,IAEtB,CACEhF,OAAQ,YACRC,UAAWja,EAASgf,IAEtB,CACEhF,OAAQ,uBACRC,UAAWja,EAASgf,IAEtB,CACEhF,OAAQ,UACRC,UAAWja,EAASgf,IAEtB,CACEhF,OAAQ,cACRC,UAAWja,EAASgf,IAEtB,CACEhF,OAAQ,wBACRC,UAAWja,EAASgf,IAEtB,CACEhF,OAAQ,SACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,UACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,QACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,SACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,UACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,YACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,QACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,cACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,QACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,eACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,4BACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,YACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,0BACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,eACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,aACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,eACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,8BACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,UACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,YACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,kBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,gBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,eACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,UACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,YACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,aACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,wBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,UACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,mBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,oBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,kBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,2BACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,sBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,YACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,SACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,8BACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,eACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,UACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,SACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,cACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,YACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,UACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,UACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,gBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,aACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,cACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,QACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,gBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,cACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,QACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,0BACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,yBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,wBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,wBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,iBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,uBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,uBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,sBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,cACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,sBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,yBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,yBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,sBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,uBACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,YACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,eACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,eACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,YACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,WACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,0BACRC,UAAWja,EAASif,IAEtB,CACEjF,OAAQ,SACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,SACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,SACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,kBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,aACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,eACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,YACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,aACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,YACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,QACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,oBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,uBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,eACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,qBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,aACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,aACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,mBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,0BACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,uBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,YACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,QACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,iBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,eACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,wBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,eACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,SACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,cACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,SACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,mBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,gBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,aACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,iBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,mBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,OACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,mBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,oBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,SACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,OACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,YACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,iBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,oBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,eACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,mBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,oBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,SACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,SACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,eACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,wBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,wBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,yBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,qBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,4BACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,eACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,iBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,cACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,qBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,gBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,YACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,kBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,kBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,mBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,kBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,SACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,eACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,aACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,WACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,QACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,2BACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,UACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,iBACRC,UAAWja,EAASkf,IAEtB,CACElF,OAAQ,oBACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,mBACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,WACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,YACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,gBACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,YACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,SACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,WACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,iBACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,SACRC,UA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AQ,UACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,QACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,uBACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,mBACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,WACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,UACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,OACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,UACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,gBACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,YACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,aACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,yBACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,mBACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,UACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,UACRC,UAAWja,EAASmf,IAEtB,CACEnF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,YACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,sBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,YACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,cACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,cACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,gBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,YACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,mBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,sBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,uBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,2BACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,mBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,mBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,iBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,mBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,iBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,sBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,OACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,mBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,kBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,uBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,uBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,kBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,cACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,wBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,uBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,oBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,6BACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,mBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,mBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,oBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,uBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,gBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,YACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,YACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,YACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,sBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,cACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,mBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,gBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,gBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,SACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,iBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,yBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,sBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,wBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,oBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,qBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,wBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,0BACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,+BACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,sBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,gBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,0BACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,iBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,OACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,YACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,eACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,aACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,oBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,sBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,QACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,kBACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,WACRC,UAAWja,EAASof,IAEtB,CACEpF,OAAQ,UACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,WACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,mBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,WACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,kBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,UACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,SACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,iBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,UACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,YACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,aACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,UACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,yBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,yBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,yBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,2BACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,2BACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,qBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,oBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,YACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,UACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,WACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,QACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,SACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,aACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,gBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,SACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,SACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,cACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,YACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,uBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,oBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,qBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,mBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,YACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,QACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,WACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,qBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,mBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,oBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,yBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,iBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,oBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,uBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,qBACRC,UAAWja,EAASqf,IAEtB,CACErF,OAAQ,sBACRC,UAAWja,EAASqf,IAEtB,CA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AEtB,CACEhG,OAAQ,uBACRC,UAAWja,EAASggB,IAEtB,CACEhG,OAAQ,iBACRC,UAAWja,EAASggB,IAEtB,CACEhG,OAAQ,UACRC,UAAWja,EAASggB,IAEtB,CACEhG,OAAQ,WACRC,UAAWja,EAASggB,IAEtB,CACEhG,OAAQ,YACRC,UAAWja,EAASggB,IAEtB,CACEhG,OAAQ,aACRC,UAAWja,EAASggB,IAEtB,CACEhG,OAAQ,UACRC,UAAWja,EAASggB,IAEtB,CACEhG,OAAQ,UACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,QACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,aACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,aACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,YACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,UACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,SACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,SACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,aACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,YACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,uBACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,YACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,SACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,UACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,UACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,SACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,qBACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,cACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,YACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,QACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,UACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,QACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,SACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,eACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,yBACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,wBACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,uBACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,eACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,kBACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,aACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,kBACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,UACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,cACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,SACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,aACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,UACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,gBACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,cACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,WACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,SACRC,UAAWja,EAASigB,IAEtB,CACEjG,OAAQ,SACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,mBACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,qBACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,uBACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,0BACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,gBACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,YACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,QACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,YACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,YACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,UACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,mBACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,SACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,cACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,WACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,cACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,aACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,SACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,cACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,mBACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,UACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,YACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,OACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,YACRC,UAAWja,EAASkgB,IAEtB,CACElG,OAAQ,OACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,UACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,YACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,oBACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,YACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,WACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,aACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,UACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,oBACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,aACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,aACRC,UAAWja,EA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AASmgB,IAEtB,CACEnG,OAAQ,SACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,WACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,SACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,aACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,yBACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,SACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,YACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,aACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,WACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,QACRC,UAAWja,EAASmgB,IAEtB,CACEnG,OAAQ,iBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,SACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,eACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,4BACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,QACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,iBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,cACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,sBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,kBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,kBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,aACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,cACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,cACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,WACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,sBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,kBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,yBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,cACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,eACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,QACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,mBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,iBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,gBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,wBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,QACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,OACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,WACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,SACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,SACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,QACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,QACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,WACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,0BACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,sBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,QACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,iBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,uBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,kBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,gBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,qBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,iBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,kBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,OACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,mBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,oBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,gBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,WACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,QACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,WACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,eACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,cACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,eACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,qBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,iBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,uBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,eACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,sBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,kBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,kBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,2BACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,0BACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,0BACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,sBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,uBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,sBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,uBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,uBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,cACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,4BACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,WACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,SACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,mBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,WACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,cACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,QACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,OACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,QACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,UACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,WACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,sBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,mBACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,aACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASogB,IAEtB,CACEpG,OAAQ,YACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,0BACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,UACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,SACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,SACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,aACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,gBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,WACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,YACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,uBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,eACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,gBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,gBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,oBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,YACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,WACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,SACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,SACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,oBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,qBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,SACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,eACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,QACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,cACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,YACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,OACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,uBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,kBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,YACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,YACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,WACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,YACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,SACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,qBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,qBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,sBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,mBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,6BACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,qBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,0BACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,UACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,YACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,qBACRC,UAAWja,EAASqgB,IAEtB,CACErG,OAAQ,oBACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,cACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,SACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,gBACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,cACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,QACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,OACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,cACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,YACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,SACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,YACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,YACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,UACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,YACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,QACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,cACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,4BACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,eACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,YACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,SACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,uBACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,WACRC,UAAWja,EAASsgB,IAEtB,CACEtG,OAAQ,QACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,SACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,SACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,cACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,eACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,cACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,YACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,SACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,OACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,yBACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,YACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,UACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,WACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,kBACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,eACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,YACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,YACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,SACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,uBACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,YACRC,UAAWja,EAASugB,IAEtB,CACEvG,OAAQ,iBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,eACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,aACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,WACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,mBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,SACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,WACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,cACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,SACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,cACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,cACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,qBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,mBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,yBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,yBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,SACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,cACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,qBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,gBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,eACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,aACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,8BACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,OACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,QACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,sBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,eACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,uBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,WACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,YACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,aACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,SACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,mBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,WACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,WACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,wBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,0BACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,0BACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,sBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,yBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,aACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,yBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,iBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,cACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,oBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,WACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,YACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,kBACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,aACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,UACRC,UAAWja,EAASwgB,IAEtB,CACExG,OAAQ,QACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,oBACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,SACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,aACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,SACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,SACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,kBACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,WACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,SACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,uBACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,SACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,WACRC,UAAWja,EAASygB,IAEtB,CACEzG,OAAQ,UACRC,UAAWja,EAAS0gB,IAEtB,CACE1G,O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","file":"static/js/main.9c9c6de3.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = {\n  [K in keyof T]: T[K];\n};\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> &\n  { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> &\n  { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  Date: any;\n};\n\nexport type Address = {\n  __typename?: 'Address';\n  via?: Maybe<Scalars['String']>;\n  CAP?: Maybe<Scalars['String']>;\n  comune: Scalars['String'];\n  provincia: Province;\n  regione: Regioni;\n};\n\nexport type AddressInput = {\n  via?: Maybe<Scalars['String']>;\n  CAP?: Maybe<Scalars['String']>;\n  comune: Scalars['String'];\n  provincia: Province;\n  regione: Regioni;\n};\n\nexport type AdInput = {\n  typeAd: TypeAd;\n  typeProduct: TypeProduct;\n  content: Scalars['String'];\n  address: AddressInput;\n  harvest: Scalars['Int'];\n  abv: Scalars['Float'];\n  wine?: Maybe<Scalars['ID']>;\n  wineName?: Maybe<Scalars['String']>;\n  vineyard?: Maybe<Scalars['ID']>;\n  vineyardName?: Maybe<Scalars['String']>;\n  sottoZona?: Maybe<Scalars['String']>;\n  menzione?: Maybe<Menzione>;\n  metodoProduttivo?: Maybe<MetodoProduttivo>;\n  priceFrom: Scalars['Float'];\n  priceTo: Scalars['Float'];\n  litersFrom?: Maybe<Scalars['Int']>;\n  litersTo?: Maybe<Scalars['Int']>;\n  kgFrom?: Maybe<Scalars['Int']>;\n  kgTo?: Maybe<Scalars['Int']>;\n  needsFollowUp?: Maybe<Scalars['Boolean']>;\n};\n\nexport type AdInputUpdate = {\n  _id: Scalars['ID'];\n  wine?: Maybe<Scalars['ID']>;\n  wineName?: Maybe<Scalars['String']>;\n  vineyard?: Maybe<Scalars['ID']>;\n  vineyardName?: Maybe<Scalars['String']>;\n  sottoZona?: Maybe<Scalars['String']>;\n  menzione?: Maybe<Menzione>;\n  metodoProduttivo?: Maybe<MetodoProduttivo>;\n  harvest?: Maybe<Scalars['Int']>;\n  abv?: Maybe<Scalars['Float']>;\n  priceFrom?: Maybe<Scalars['Float']>;\n  priceTo?: Maybe<Scalars['Float']>;\n  litersFrom?: Maybe<Scalars['Int']>;\n  litersTo?: Maybe<Scalars['Int']>;\n  content?: Maybe<Scalars['String']>;\n  address?: Maybe<AddressInput>;\n  isActive?: Maybe<Scalars['Boolean']>;\n  needsFollowUp?: Maybe<Scalars['Boolean']>;\n};\n\nexport type Ad = {\n  _id: Scalars['ID'];\n  postedBy: User;\n  harvest: Scalars['Int'];\n  abv: Scalars['Float'];\n  priceFrom: Scalars['Float'];\n  priceTo: Scalars['Float'];\n  content: Scalars['String'];\n  address: Address;\n  negotiations?: Maybe<Array<Negotiation>>;\n  activeNegotiations?: Maybe<Scalars['Int']>;\n  /** viewedBy: [User] */\n  numberViews?: Maybe<Scalars['Int']>;\n  typeAd: TypeAd;\n  typeProduct: TypeProduct;\n  isActive: Scalars['Boolean'];\n  datePosted?: Maybe<Scalars['String']>;\n  needsFollowUp?: Maybe<Scalars['Boolean']>;\n};\n\nexport type AdDatePostedArgs = {\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type AdWine = Ad & {\n  __typename?: 'AdWine';\n  _id: Scalars['ID'];\n  postedBy: User;\n  wineName: Scalars['String'];\n  wine?: Maybe<Wine>;\n  sottoZona?: Maybe<Scalars['String']>;\n  menzione?: Maybe<Menzione>;\n  metodoProduttivo?: Maybe<MetodoProduttivo>;\n  harvest: Scalars['Int'];\n  abv: Scalars['Float'];\n  priceFrom: Scalars['Float'];\n  priceTo: Scalars['Float'];\n  litersFrom?: Maybe<Scalars['Int']>;\n  litersTo?: Maybe<Scalars['Int']>;\n  content: Scalars['String'];\n  address: Address;\n  negotiations?: Maybe<Array<Negotiation>>;\n  activeNegotiations?: Maybe<Scalars['Int']>;\n  /** viewedBy: [User] */\n  numberViews?: Maybe<Scalars['Int']>;\n  typeAd: TypeAd;\n  typeProduct: TypeProduct;\n  isActive: Scalars['Boolean'];\n  datePosted?: Maybe<Scalars['String']>;\n  needsFollowUp?: Maybe<Scalars['Boolean']>;\n};\n\nexport type AdWineDatePostedArgs = {\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type AdGrape = Ad & {\n  __typename?: 'AdGrape';\n  _id: Scalars['ID'];\n  postedBy: User;\n  vineyardName: Scalars['String'];\n  vineyard?: Maybe<Vineyard>;\n  harvest: Scalars['Int'];\n  abv: Scalars['Float'];\n  priceFrom: Scalars['Float'];\n  priceTo: Scalars['Float'];\n  kgFrom: Scalars['Int'];\n  kgTo: Scalars['Int'];\n  content: Scalars['String'];\n  address: Address;\n  negotiations?: Maybe<Array<Negotiation>>;\n  activeNegotiations?: Maybe<Scalars['Int']>;\n  /** viewedBy: [User] */\n  numberViews?: Maybe<Scalars['Int']>;\n  typeAd: TypeAd;\n  typeProduct: TypeProduct;\n  isActive: Scalars['Boolean'];\n  datePosted?: Maybe<Scalars['String']>;\n  needsFollowUp?: Maybe<Scalars['Boolean']>;\n};\n\nexport type AdGrapeDatePostedArgs = {\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type AdsResult = {\n  __typename?: 'AdsResult';\n  ads?: Maybe<Array<Maybe<Ad>>>;\n  pageCount?: Maybe<Scalars['Int']>;\n};\n\nexport type AdPayload = {\n  __typename?: 'AdPayload';\n  response?: Maybe<Ad>;\n  errors?: Maybe<Array<Maybe<Errors>>>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  ad?: Maybe<Ad>;\n  ads?: Maybe<AdsResult>;\n  adsForUser?: Maybe<AdsResult>;\n  isLoggedIn: Scalars['Boolean'];\n  me?: Maybe<User>;\n  message?: Maybe<Message>;\n  messages?: Maybe<Array<Message>>;\n  messagesForNegotiation?: Maybe<MessageResult>;\n  messagesToUser?: Maybe<Array<Message>>;\n  myInfo?: Maybe<User>;\n  negotiation?: Maybe<Negotiation>;\n  negotiations?: Maybe<NegotiationResult>;\n  negotiationsForAd?: Maybe<Array<Negotiation>>;\n  negotiationsWithUser?: Maybe<Array<Negotiation>>;\n  notification?: Maybe<Notification>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<ReviewResult>;\n  searchedWine?: Maybe<WineSearched>;\n  user?: Maybe<User>;\n  users?: Maybe<Array<User>>;\n  vineyard?: Maybe<Vineyard>;\n  vineyards?: Maybe<Array<Vineyard>>;\n  wine?: Maybe<Wine>;\n  wines?: Maybe<Array<Wine>>;\n};\n\nexport type QueryAdArgs = {\n  id: Scalars['ID'];\n};\n\nexport type QueryAdsArgs = {\n  typeAd: TypeAd;\n  typeProduct: TypeProduct;\n  wineName?: Maybe<Scalars['String']>;\n  vineyardName?: Maybe<Scalars['String']>;\n  offset?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<QueryOrderBy>;\n  limit?: Maybe<Scalars['Int']>;\n};\n\nexport type QueryAdsForUserArgs = {\n  offset?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<QueryOrderBy>;\n  limit?: Maybe<Scalars['Int']>;\n  isActive?: Maybe<Scalars['Boolean']>;\n  user: Scalars['ID'];\n};\n\nexport type QueryMessageArgs = {\n  id: Scalars['ID'];\n};\n\nexport type QueryMessagesForNegotiationArgs = {\n  negotiation: Scalars['ID'];\n  offset?: Maybe<Scalars['Int']>;\n  limit?: Maybe<Scalars['Int']>;\n};\n\nexport type QueryMessagesToUserArgs = {\n  sentTo: Scalars['ID'];\n};\n\nexport type QueryNegotiationArgs = {\n  id: Scalars['ID'];\n};\n\nexport type QueryNegotiationsArgs = {\n  offset?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<QueryOrderBy>;\n  limit?: Maybe<Scalars['Int']>;\n  isConcluded?: Maybe<Scalars['Boolean']>;\n};\n\nexport type QueryNegotiationsForAdArgs = {\n  ad: Scalars['ID'];\n};\n\nexport type QueryNegotiationsWithUserArgs = {\n  forUserAd: Scalars['ID'];\n};\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n};\n\nexport type QueryReviewsArgs = {\n  offset?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<QueryOrderBy>;\n  limit?: Maybe<Scalars['Int']>;\n};\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n};\n\nexport type QueryVineyardArgs = {\n  id: Scalars['ID'];\n};\n\nexport type QueryWineArgs = {\n  id: Scalars['ID'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createAd?: Maybe<AdPayload>;\n  updateAd?: Maybe<AdPayload>;\n  deleteAd?: Maybe<AdPayload>;\n  saveAd?: Maybe<AdPayload>;\n  createMessage?: Maybe<MessagePayload>;\n  createNegotiation?: Maybe<NegotiationPayload>;\n  updateNegotiation?: Maybe<NegotiationPayload>;\n  deleteNegotiation?: Maybe<NegotiationPayload>;\n  createReview?: Maybe<ReviewPayload>;\n  updateReview?: Maybe<ReviewPayload>;\n  deleteReview?: Maybe<ReviewPayload>;\n  createUser?: Maybe<AuthUserPayload>;\n  updateUser?: Maybe<UserPayload>;\n  deleteUser?: Maybe<UserPayload>;\n  login?: Maybe<AuthUserPayload>;\n  createWine?: Maybe<WinePayload>;\n  updateWine?: Maybe<WinePayload>;\n  deleteWine?: Maybe<WinePayload>;\n  createVineyard?: Maybe<VineyardPayload>;\n  updateVineyard?: Maybe<VineyardPayload>;\n  deleteVineyard?: Maybe<VineyardPayload>;\n};\n\nexport type MutationCreateAdArgs = {\n  input: AdInput;\n};\n\nexport type MutationUpdateAdArgs = {\n  input: AdInputUpdate;\n};\n\nexport type MutationDeleteAdArgs = {\n  id: Scalars['ID'];\n};\n\nexport type MutationSaveAdArgs = {\n  id: Scalars['ID'];\n};\n\nexport type MutationCreateMessageArgs = {\n  message: MessageInput;\n};\n\nexport type MutationCreateNegotiationArgs = {\n  negotiation: NegotiationInput;\n};\n\nexport type MutationUpdateNegotiationArgs = {\n  negotiation: NegotiationInputUpdate;\n};\n\nexport type MutationDeleteNegotiationArgs = {\n  id: Scalars['ID'];\n};\n\nexport type MutationCreateReviewArgs = {\n  review: ReviewInput;\n};\n\nexport type MutationUpdateReviewArgs = {\n  review: ReviewInputUpdate;\n};\n\nexport type MutationDeleteReviewArgs = {\n  id: Scalars['ID'];\n};\n\nexport type MutationCreateUserArgs = {\n  user: UserInput;\n};\n\nexport type MutationUpdateUserArgs = {\n  user: UserInputUpdate;\n};\n\nexport type MutationDeleteUserArgs = {\n  id: Scalars['ID'];\n};\n\nexport type MutationLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type MutationCreateWineArgs = {\n  wine: WineInput;\n};\n\nexport type MutationUpdateWineArgs = {\n  wine: WineInputUpdate;\n};\n\nexport type MutationDeleteWineArgs = {\n  id: Scalars['ID'];\n};\n\nexport type MutationCreateVineyardArgs = {\n  vineyard: VineyardInput;\n};\n\nexport type MutationUpdateVineyardArgs = {\n  vineyard: VineyardInputUpdate;\n};\n\nexport type MutationDeleteVineyardArgs = {\n  id: Scalars['ID'];\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  adPostedFollowUp: Ad;\n  adRemoved: Ad;\n  messageSent: Message;\n  negotiationCreated: Negotiation;\n  negotiationClosed: Ad;\n  reviewCreated: Review;\n};\n\nexport type MessageInput = {\n  content: Scalars['String'];\n  sentTo: Scalars['ID'];\n  negotiation: Scalars['ID'];\n};\n\nexport type Message = {\n  __typename?: 'Message';\n  _id: Scalars['ID'];\n  content: Scalars['String'];\n  sentBy: User;\n  sentTo: User;\n  negotiation: Negotiation;\n  dateSent?: Maybe<Scalars['String']>;\n  isViewed: Scalars['Boolean'];\n};\n\nexport type MessageDateSentArgs = {\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type MessagePayload = {\n  __typename?: 'MessagePayload';\n  response?: Maybe<Message>;\n  errors?: Maybe<Array<Maybe<Errors>>>;\n};\n\nexport type MessageResult = {\n  __typename?: 'MessageResult';\n  messages?: Maybe<Array<Maybe<Message>>>;\n  pageCount?: Maybe<Scalars['Int']>;\n};\n\nexport type NegotiationInput = {\n  ad: Scalars['ID'];\n  forUserAd: Scalars['ID'];\n  type: TypeAd;\n};\n\nexport type NegotiationInputUpdate = {\n  _id: Scalars['ID'];\n  isConcluded?: Maybe<Scalars['Boolean']>;\n};\n\nexport type Negotiation = {\n  __typename?: 'Negotiation';\n  _id: Scalars['ID'];\n  createdBy: User;\n  ad: Ad;\n  forUserAd: User;\n  messages?: Maybe<Array<Message>>;\n  isConcluded: Scalars['Boolean'];\n  dateCreated?: Maybe<Scalars['String']>;\n  dateConcluded?: Maybe<Scalars['String']>;\n  review?: Maybe<Array<Maybe<Review>>>;\n  type: TypeAd;\n};\n\nexport type NegotiationDateCreatedArgs = {\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type NegotiationDateConcludedArgs = {\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type NegotiationResult = {\n  __typename?: 'NegotiationResult';\n  negotiations?: Maybe<Array<Maybe<Negotiation>>>;\n  pageCount?: Maybe<Scalars['Int']>;\n};\n\nexport type NegotiationPayload = {\n  __typename?: 'NegotiationPayload';\n  response?: Maybe<Negotiation>;\n  errors?: Maybe<Array<Maybe<Errors>>>;\n};\n\nexport type ReviewInput = {\n  negotiation: Scalars['ID'];\n  forUser: Scalars['ID'];\n  rating: Scalars['Float'];\n  content: Scalars['String'];\n  type: TypeAd;\n};\n\nexport type ReviewInputUpdate = {\n  _id: Scalars['ID'];\n  rating?: Maybe<Scalars['Float']>;\n  content?: Maybe<Scalars['String']>;\n};\n\nexport type ReviewResult = {\n  __typename?: 'ReviewResult';\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  pageCount?: Maybe<Scalars['Int']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  _id: Scalars['ID'];\n  createdBy: User;\n  negotiation: Negotiation;\n  forUser: User;\n  rating: Scalars['Float'];\n  dateCreated?: Maybe<Scalars['String']>;\n  content: Scalars['String'];\n  type: TypeAd;\n};\n\nexport type ReviewDateCreatedArgs = {\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type ReviewPayload = {\n  __typename?: 'ReviewPayload';\n  response?: Maybe<Review>;\n  errors?: Maybe<Array<Maybe<Errors>>>;\n};\n\nexport type ProducedWines = {\n  __typename?: 'ProducedWines';\n  wine: Wine;\n  bottlesProduced: Scalars['Int'];\n  metodoProduttivo: MetodoProduttivo;\n};\n\nexport type OwnedVineyards = {\n  __typename?: 'OwnedVineyards';\n  vineyard: Vineyard;\n  tonsProduced: Scalars['Int'];\n  metodoProduttivo: MetodoProduttivo;\n};\n\nexport type ProducedWinesInput = {\n  wine: Scalars['ID'];\n  bottlesProduced?: Maybe<Scalars['Int']>;\n  metodoProduttivo?: Maybe<MetodoProduttivo>;\n};\n\nexport type OwnedVineyardsInput = {\n  vineyard: Scalars['ID'];\n  tonsProduced?: Maybe<Scalars['Int']>;\n  metodoProduttivo?: Maybe<MetodoProduttivo>;\n};\n\nexport type UserInput = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  pIva: Scalars['String'];\n  phoneNumber: Scalars['String'];\n  address: AddressInput;\n  hideContact: Scalars['Boolean'];\n  producedWines?: Maybe<ProducedWinesInput>;\n  ownedVineyards?: Maybe<OwnedVineyardsInput>;\n};\n\nexport type UserInputUpdate = {\n  _id: Scalars['ID'];\n  email?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  pIva?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  address?: Maybe<AddressInput>;\n  isVerified?: Maybe<Scalars['Boolean']>;\n  isPremium?: Maybe<Scalars['Boolean']>;\n  hideContact: Scalars['Boolean'];\n  producedWines?: Maybe<ProducedWinesInput>;\n  ownedVineyards?: Maybe<OwnedVineyardsInput>;\n};\n\nexport type User = {\n  __typename?: 'User';\n  _id: Scalars['ID'];\n  email: Scalars['String'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  pIva: Scalars['String'];\n  phoneNumber: Scalars['String'];\n  address: Address;\n  isVerified: Scalars['Boolean'];\n  isPremium?: Maybe<Scalars['Boolean']>;\n  isAdmin: Scalars['Boolean'];\n  hideContact: Scalars['Boolean'];\n  ads?: Maybe<Array<Ad>>;\n  savedAds?: Maybe<Array<Ad>>;\n  messages?: Maybe<Array<Message>>;\n  negotiations?: Maybe<Array<Negotiation>>;\n  reviews?: Maybe<Array<Review>>;\n  adsRemaining?: Maybe<Scalars['Int']>;\n  dateCreated?: Maybe<Scalars['String']>;\n  producedWines?: Maybe<ProducedWines>;\n  ownedVineyards?: Maybe<OwnedVineyards>;\n};\n\nexport type UserDateCreatedArgs = {\n  format?: Maybe<Scalars['String']>;\n};\n\nexport type AuthUser = {\n  __typename?: 'AuthUser';\n  token: Scalars['String'];\n  user: User;\n};\n\nexport type AuthUserPayload = {\n  __typename?: 'AuthUserPayload';\n  response?: Maybe<AuthUser>;\n  errors?: Maybe<Array<Maybe<Errors>>>;\n};\n\nexport type UserPayload = {\n  __typename?: 'UserPayload';\n  response?: Maybe<User>;\n  errors?: Maybe<Array<Maybe<Errors>>>;\n};\n\nexport type WineInput = {\n  denominazioneVino: Scalars['String'];\n  aka?: Maybe<Scalars['String']>;\n  espressioneComunitaria: EspressioneComunitaria;\n  denominazioneZona: DenomZona;\n  regione: Array<Regioni>;\n};\n\nexport type WineInputUpdate = {\n  _id: Scalars['ID'];\n  denominazioneVino?: Maybe<Scalars['String']>;\n  aka?: Maybe<Scalars['String']>;\n  espressioneComunitaria?: Maybe<EspressioneComunitaria>;\n  denominazioneZona?: Maybe<DenomZona>;\n  regione?: Maybe<Array<Maybe<Regioni>>>;\n};\n\nexport type Wine = {\n  __typename?: 'Wine';\n  _id: Scalars['ID'];\n  denominazioneVino: Scalars['String'];\n  aka?: Maybe<Scalars['String']>;\n  espressioneComunitaria: EspressioneComunitaria;\n  denominazioneZona: DenomZona;\n  regione: Array<Regioni>;\n};\n\nexport type WinePayload = {\n  __typename?: 'WinePayload';\n  response?: Maybe<Wine>;\n  errors?: Maybe<Array<Maybe<Errors>>>;\n};\n\nexport type Vineyard = {\n  __typename?: 'Vineyard';\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  colore?: Maybe<Colore>;\n};\n\nexport type VineyardInput = {\n  name: Scalars['String'];\n  colore?: Maybe<Colore>;\n};\n\nexport type VineyardInputUpdate = {\n  _id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  colore?: Maybe<Colore>;\n};\n\nexport type VineyardPayload = {\n  __typename?: 'VineyardPayload';\n  response?: Maybe<Vineyard>;\n  errors?: Maybe<Array<Maybe<Errors>>>;\n};\n\nexport enum Province {\n  AG = 'AG',\n  AL = 'AL',\n  AN = 'AN',\n  AO = 'AO',\n  AP = 'AP',\n  AQ = 'AQ',\n  AR = 'AR',\n  AT = 'AT',\n  AV = 'AV',\n  BA = 'BA',\n  BG = 'BG',\n  BI = 'BI',\n  BL = 'BL',\n  BN = 'BN',\n  BO = 'BO',\n  BR = 'BR',\n  BS = 'BS',\n  BT = 'BT',\n  BZ = 'BZ',\n  CA = 'CA',\n  CB = 'CB',\n  CE = 'CE',\n  CH = 'CH',\n  CL = 'CL',\n  CN = 'CN',\n  CO = 'CO',\n  CR = 'CR',\n  CS = 'CS',\n  CT = 'CT',\n  CZ = 'CZ',\n  EN = 'EN',\n  FC = 'FC',\n  FE = 'FE',\n  FG = 'FG',\n  FI = 'FI',\n  FM = 'FM',\n  FR = 'FR',\n  GE = 'GE',\n  GO = 'GO',\n  GR = 'GR',\n  IM = 'IM',\n  IS = 'IS',\n  KR = 'KR',\n  LC = 'LC',\n  LE = 'LE',\n  LI = 'LI',\n  LO = 'LO',\n  LT = 'LT',\n  LU = 'LU',\n  MB = 'MB',\n  MC = 'MC',\n  ME = 'ME',\n  MI = 'MI',\n  MN = 'MN',\n  MO = 'MO',\n  MS = 'MS',\n  MT = 'MT',\n  NA = 'NA',\n  NO = 'NO',\n  NU = 'NU',\n  OR = 'OR',\n  PA = 'PA',\n  PC = 'PC',\n  PD = 'PD',\n  PE = 'PE',\n  PG = 'PG',\n  PI = 'PI',\n  PN = 'PN',\n  PO = 'PO',\n  PR = 'PR',\n  PT = 'PT',\n  PU = 'PU',\n  PV = 'PV',\n  PZ = 'PZ',\n  RA = 'RA',\n  RC = 'RC',\n  RE = 'RE',\n  RG = 'RG',\n  RI = 'RI',\n  RM = 'RM',\n  RN = 'RN',\n  RO = 'RO',\n  SA = 'SA',\n  SI = 'SI',\n  SO = 'SO',\n  SP = 'SP',\n  SR = 'SR',\n  SS = 'SS',\n  SU = 'SU',\n  SV = 'SV',\n  TA = 'TA',\n  TE = 'TE',\n  TN = 'TN',\n  TO = 'TO',\n  TP = 'TP',\n  TR = 'TR',\n  TS = 'TS',\n  TV = 'TV',\n  UD = 'UD',\n  VA = 'VA',\n  VB = 'VB',\n  VC = 'VC',\n  VE = 'VE',\n  VI = 'VI',\n  VR = 'VR',\n  VT = 'VT',\n  VV = 'VV',\n}\n\nexport enum Regioni {\n  Abruzzo = 'ABRUZZO',\n  Basilicata = 'BASILICATA',\n  Calabria = 'CALABRIA',\n  Campania = 'CAMPANIA',\n  Emilia = 'EMILIA',\n  Friuli = 'FRIULI',\n  Lazio = 'LAZIO',\n  Liguria = 'LIGURIA',\n  Lombardia = 'LOMBARDIA',\n  Marche = 'MARCHE',\n  Molise = 'MOLISE',\n  Piemonte = 'PIEMONTE',\n  Puglia = 'PUGLIA',\n  Sardegna = 'SARDEGNA',\n  Sicilia = 'SICILIA',\n  Toscana = 'TOSCANA',\n  Trentino = 'TRENTINO',\n  Umbria = 'UMBRIA',\n  Valdaosta = 'VALDAOSTA',\n  Veneto = 'VENETO',\n}\n\nexport enum TypeAd {\n  Sell = 'SELL',\n  Buy = 'BUY',\n}\n\nexport enum TypeProduct {\n  AdWine = 'AdWine',\n  AdGrape = 'AdGrape',\n}\n\nexport enum Menzione {\n  Classico = 'CLASSICO',\n  Riserva = 'RISERVA',\n  Superiore = 'SUPERIORE',\n  Vigna = 'VIGNA',\n}\n\nexport enum MetodoProduttivo {\n  Convenzionale = 'CONVENZIONALE',\n  Biologico = 'BIOLOGICO',\n  Biodinamico = 'BIODINAMICO',\n  Naturale = 'NATURALE',\n  Vegano = 'VEGANO',\n}\n\nexport enum Colore {\n  Bianca = 'BIANCA',\n  Rossa = 'ROSSA',\n}\n\nexport enum EspressioneComunitaria {\n  Dop = 'DOP',\n  Igp = 'IGP',\n  Nd = 'ND',\n}\n\nexport enum DenomZona {\n  Doc = 'DOC',\n  Docg = 'DOCG',\n  Igt = 'IGT',\n  Varietale = 'VARIETALE',\n  Vino = 'VINO',\n}\n\nexport enum QueryOrderBy {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  PriceAsc = 'price_ASC',\n  PriceDesc = 'price_DESC',\n}\n\nexport type Errors = {\n  __typename?: 'Errors';\n  name?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n};\n\nexport enum AlertStatus {\n  Success = 'success',\n  Warning = 'warning',\n  Info = 'info',\n  Error = 'error',\n}\n\nexport type WineSearched = {\n  __typename?: 'WineSearched';\n  typeAd?: Maybe<TypeAd>;\n  typeProduct?: Maybe<TypeProduct>;\n  wineName?: Maybe<Scalars['String']>;\n  harvest?: Maybe<Scalars['Int']>;\n  abv?: Maybe<Scalars['Float']>;\n  price?: Maybe<Scalars['Float']>;\n  liters?: Maybe<Scalars['Int']>;\n  isPost?: Maybe<Scalars['Boolean']>;\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  type?: AlertStatus;\n  message?: Maybe<Scalars['String']>;\n};\n\nexport type LoginMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\nexport type LoginMutation = { __typename?: 'Mutation' } & {\n  login?: Maybe<\n    { __typename?: 'AuthUserPayload' } & {\n      response?: Maybe<\n        { __typename?: 'AuthUser' } & Pick<AuthUser, 'token'> & {\n            user: { __typename?: 'User' } & Pick<User, '_id' | 'firstName'> & {\n                address: { __typename?: 'Address' } & Pick<\n                  Address,\n                  'regione' | 'provincia' | 'comune'\n                >;\n              };\n          }\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type CreateUserMutationVariables = Exact<{\n  userInput: UserInput;\n}>;\n\nexport type CreateUserMutation = { __typename?: 'Mutation' } & {\n  createUser?: Maybe<\n    { __typename?: 'AuthUserPayload' } & {\n      response?: Maybe<\n        { __typename?: 'AuthUser' } & Pick<AuthUser, 'token'> & {\n            user: { __typename?: 'User' } & Pick<User, '_id' | 'firstName'>;\n          }\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type UpdateUserMutationVariables = Exact<{\n  user: UserInputUpdate;\n}>;\n\nexport type UpdateUserMutation = { __typename?: 'Mutation' } & {\n  updateUser?: Maybe<\n    { __typename?: 'UserPayload' } & {\n      response?: Maybe<\n        { __typename?: 'User' } & Pick<User, '_id' | 'firstName'>\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type DeleteUserMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\nexport type DeleteUserMutation = { __typename?: 'Mutation' } & {\n  deleteUser?: Maybe<\n    { __typename?: 'UserPayload' } & {\n      response?: Maybe<\n        { __typename?: 'User' } & Pick<User, '_id' | 'firstName'>\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type CreateAdWineMutationVariables = Exact<{\n  input: AdInput;\n}>;\n\nexport type CreateAdWineMutation = { __typename?: 'Mutation' } & {\n  createAd?: Maybe<\n    { __typename?: 'AdPayload' } & {\n      response?: Maybe<\n        | ({ __typename?: 'AdWine' } & Pick<\n            AdWine,\n            | 'wineName'\n            | 'litersFrom'\n            | 'litersTo'\n            | 'metodoProduttivo'\n            | '_id'\n            | 'harvest'\n            | 'abv'\n            | 'priceFrom'\n            | 'priceTo'\n            | 'typeAd'\n            | 'activeNegotiations'\n            | 'numberViews'\n            | 'datePosted'\n          > & {\n              wine?: Maybe<\n                { __typename?: 'Wine' } & Pick<\n                  Wine,\n                  'denominazioneZona' | 'regione'\n                >\n              >;\n              postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n              address: { __typename?: 'Address' } & Pick<\n                Address,\n                'regione' | 'provincia' | 'comune'\n              >;\n            })\n        | ({ __typename?: 'AdGrape' } & Pick<\n            AdGrape,\n            | '_id'\n            | 'harvest'\n            | 'abv'\n            | 'priceFrom'\n            | 'priceTo'\n            | 'typeAd'\n            | 'activeNegotiations'\n            | 'numberViews'\n            | 'datePosted'\n          > & {\n              postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n              address: { __typename?: 'Address' } & Pick<\n                Address,\n                'regione' | 'provincia' | 'comune'\n              >;\n            })\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type UpdateAdWineMutationVariables = Exact<{\n  input: AdInputUpdate;\n}>;\n\nexport type UpdateAdWineMutation = { __typename?: 'Mutation' } & {\n  updateAd?: Maybe<\n    { __typename?: 'AdPayload' } & {\n      response?: Maybe<\n        | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id'>)\n        | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>)\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type SaveAdMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\nexport type SaveAdMutation = { __typename?: 'Mutation' } & {\n  saveAd?: Maybe<\n    { __typename?: 'AdPayload' } & {\n      response?: Maybe<\n        | ({ __typename?: 'AdWine' } & Pick<\n            AdWine,\n            | 'wineName'\n            | 'litersFrom'\n            | 'litersTo'\n            | '_id'\n            | 'harvest'\n            | 'abv'\n            | 'priceFrom'\n            | 'priceTo'\n            | 'datePosted'\n          > & {\n              wine?: Maybe<\n                { __typename?: 'Wine' } & Pick<Wine, 'denominazioneZona'>\n              >;\n            })\n        | ({ __typename?: 'AdGrape' } & Pick<\n            AdGrape,\n            '_id' | 'harvest' | 'abv' | 'priceFrom' | 'priceTo' | 'datePosted'\n          >)\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type DeleteAdMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\nexport type DeleteAdMutation = { __typename?: 'Mutation' } & {\n  deleteAd?: Maybe<\n    { __typename?: 'AdPayload' } & {\n      response?: Maybe<\n        | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id'>)\n        | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>)\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type CreateNegotiationMutationVariables = Exact<{\n  negotiation: NegotiationInput;\n}>;\n\nexport type CreateNegotiationMutation = { __typename?: 'Mutation' } & {\n  createNegotiation?: Maybe<\n    { __typename?: 'NegotiationPayload' } & {\n      response?: Maybe<\n        { __typename?: 'Negotiation' } & NegotiationDetailsFragment\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type UpdateNegotiationMutationVariables = Exact<{\n  negotiation: NegotiationInputUpdate;\n}>;\n\nexport type UpdateNegotiationMutation = { __typename?: 'Mutation' } & {\n  updateNegotiation?: Maybe<\n    { __typename?: 'NegotiationPayload' } & {\n      response?: Maybe<\n        { __typename?: 'Negotiation' } & NegotiationDetailsFragment\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type DeleteNegotiationMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\nexport type DeleteNegotiationMutation = { __typename?: 'Mutation' } & {\n  deleteNegotiation?: Maybe<\n    { __typename?: 'NegotiationPayload' } & {\n      response?: Maybe<\n        { __typename?: 'Negotiation' } & Pick<Negotiation, '_id'>\n      >;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type CreateMessageMutationVariables = Exact<{\n  message: MessageInput;\n}>;\n\nexport type CreateMessageMutation = { __typename?: 'Mutation' } & {\n  createMessage?: Maybe<\n    { __typename?: 'MessagePayload' } & {\n      response?: Maybe<{ __typename?: 'Message' } & MessageDetailsFragment>;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\nexport type CreateReviewMutationVariables = Exact<{\n  review: ReviewInput;\n}>;\n\nexport type CreateReviewMutation = { __typename?: 'Mutation' } & {\n  createReview?: Maybe<\n    { __typename?: 'ReviewPayload' } & {\n      response?: Maybe<{ __typename?: 'Review' } & ReviewDetailsFragment>;\n      errors?: Maybe<\n        Array<Maybe<{ __typename?: 'Errors' } & Pick<Errors, 'name' | 'text'>>>\n      >;\n    }\n  >;\n};\n\ntype AdDetails_AdWine_Fragment = { __typename?: 'AdWine' } & Pick<\n  AdWine,\n  | 'wineName'\n  | 'litersFrom'\n  | 'litersTo'\n  | 'metodoProduttivo'\n  | '_id'\n  | 'needsFollowUp'\n  | 'harvest'\n  | 'abv'\n  | 'priceFrom'\n  | 'priceTo'\n  | 'typeAd'\n  | 'activeNegotiations'\n  | 'datePosted'\n> & {\n    wine?: Maybe<\n      { __typename?: 'Wine' } & Pick<Wine, 'denominazioneZona' | 'regione'>\n    >;\n    postedBy: { __typename?: 'User' } & Pick<\n      User,\n      '_id' | 'firstName' | 'lastName' | 'hideContact'\n    >;\n    address: { __typename?: 'Address' } & Pick<\n      Address,\n      'regione' | 'provincia'\n    >;\n  };\n\ntype AdDetails_AdGrape_Fragment = { __typename?: 'AdGrape' } & Pick<\n  AdGrape,\n  | '_id'\n  | 'needsFollowUp'\n  | 'harvest'\n  | 'abv'\n  | 'priceFrom'\n  | 'priceTo'\n  | 'typeAd'\n  | 'activeNegotiations'\n  | 'datePosted'\n> & {\n    postedBy: { __typename?: 'User' } & Pick<\n      User,\n      '_id' | 'firstName' | 'lastName' | 'hideContact'\n    >;\n    address: { __typename?: 'Address' } & Pick<\n      Address,\n      'regione' | 'provincia'\n    >;\n  };\n\nexport type AdDetailsFragment =\n  | AdDetails_AdWine_Fragment\n  | AdDetails_AdGrape_Fragment;\n\nexport type NegotiationDetailsFragment = { __typename?: 'Negotiation' } & Pick<\n  Negotiation,\n  '_id' | 'type' | 'dateCreated' | 'dateConcluded' | 'isConcluded'\n> & {\n    createdBy: { __typename?: 'User' } & Pick<User, '_id' | 'firstName'>;\n    ad:\n      | ({ __typename?: 'AdWine' } & Pick<AdWine, 'wineName' | '_id'> & {\n            postedBy: { __typename?: 'User' } & Pick<\n              User,\n              '_id' | 'firstName' | 'lastName'\n            >;\n          })\n      | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'> & {\n            postedBy: { __typename?: 'User' } & Pick<\n              User,\n              '_id' | 'firstName' | 'lastName'\n            >;\n          });\n    forUserAd: { __typename?: 'User' } & Pick<User, '_id' | 'firstName'>;\n    review?: Maybe<\n      Array<\n        Maybe<\n          { __typename?: 'Review' } & Pick<Review, '_id'> & {\n              createdBy: { __typename?: 'User' } & Pick<User, '_id'>;\n            }\n        >\n      >\n    >;\n  };\n\nexport type MessageDetailsFragment = { __typename?: 'Message' } & Pick<\n  Message,\n  '_id' | 'content' | 'isViewed' | 'dateSent'\n> & {\n    sentBy: { __typename?: 'User' } & Pick<\n      User,\n      '_id' | 'firstName' | 'lastName'\n    >;\n    sentTo: { __typename?: 'User' } & Pick<\n      User,\n      '_id' | 'firstName' | 'lastName'\n    >;\n    negotiation: { __typename?: 'Negotiation' } & Pick<\n      Negotiation,\n      '_id' | 'type' | 'isConcluded'\n    > & {\n        ad:\n          | ({ __typename?: 'AdWine' } & Pick<AdWine, 'wineName' | '_id'>)\n          | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>);\n      };\n  };\n\nexport type ReviewDetailsFragment = { __typename?: 'Review' } & Pick<\n  Review,\n  '_id' | 'rating' | 'dateCreated' | 'content' | 'type'\n> & {\n    createdBy: { __typename?: 'User' } & Pick<\n      User,\n      '_id' | 'firstName' | 'lastName'\n    >;\n    negotiation: { __typename?: 'Negotiation' } & Pick<Negotiation, '_id'> & {\n        ad:\n          | ({ __typename?: 'AdWine' } & Pick<AdWine, 'wineName' | '_id'>)\n          | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>);\n      };\n    forUser: { __typename?: 'User' } & Pick<\n      User,\n      '_id' | 'firstName' | 'lastName'\n    >;\n  };\n\nexport type FavoriteQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type FavoriteQuery = { __typename?: 'Query' } & {\n  me?: Maybe<\n    { __typename?: 'User' } & {\n      savedAds?: Maybe<\n        Array<\n          | ({ __typename?: 'AdWine' } & Pick<\n              AdWine,\n              | 'wineName'\n              | 'litersFrom'\n              | 'litersTo'\n              | 'metodoProduttivo'\n              | '_id'\n              | 'harvest'\n              | 'abv'\n              | 'priceFrom'\n              | 'priceTo'\n              | 'typeAd'\n              | 'activeNegotiations'\n              | 'numberViews'\n              | 'datePosted'\n              | 'isActive'\n            > & {\n                wine?: Maybe<\n                  { __typename?: 'Wine' } & Pick<\n                    Wine,\n                    'denominazioneZona' | 'regione'\n                  >\n                >;\n                postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n                address: { __typename?: 'Address' } & Pick<\n                  Address,\n                  'regione' | 'provincia' | 'comune'\n                >;\n              })\n          | ({ __typename?: 'AdGrape' } & Pick<\n              AdGrape,\n              | '_id'\n              | 'harvest'\n              | 'abv'\n              | 'priceFrom'\n              | 'priceTo'\n              | 'typeAd'\n              | 'activeNegotiations'\n              | 'numberViews'\n              | 'datePosted'\n            > & {\n                postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n                address: { __typename?: 'Address' } & Pick<\n                  Address,\n                  'regione' | 'provincia' | 'comune'\n                >;\n              })\n        >\n      >;\n    }\n  >;\n};\n\nexport type LightMeQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type LightMeQuery = { __typename?: 'Query' } & {\n  me?: Maybe<\n    { __typename?: 'User' } & Pick<User, '_id' | 'firstName'> & {\n        address: { __typename?: 'Address' } & Pick<\n          Address,\n          'regione' | 'provincia' | 'comune'\n        >;\n      }\n  >;\n};\n\nexport type MeQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type MeQuery = { __typename?: 'Query' } & {\n  me?: Maybe<\n    { __typename?: 'User' } & Pick<User, '_id' | 'firstName' | 'lastName'> & {\n        address: { __typename?: 'Address' } & Pick<\n          Address,\n          'regione' | 'provincia' | 'comune'\n        >;\n        ads?: Maybe<\n          Array<\n            | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id' | 'isActive'> & {\n                  postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n                })\n            | ({ __typename?: 'AdGrape' } & Pick<\n                AdGrape,\n                '_id' | 'isActive'\n              > & { postedBy: { __typename?: 'User' } & Pick<User, '_id'> })\n          >\n        >;\n        savedAds?: Maybe<\n          Array<\n            | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id'>)\n            | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>)\n          >\n        >;\n        messages?: Maybe<\n          Array<\n            { __typename?: 'Message' } & Pick<Message, '_id' | 'isViewed'> & {\n                sentBy: { __typename?: 'User' } & Pick<User, '_id'>;\n              }\n          >\n        >;\n        negotiations?: Maybe<\n          Array<\n            { __typename?: 'Negotiation' } & Pick<\n              Negotiation,\n              '_id' | 'isConcluded'\n            > & {\n                ad:\n                  | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id'>)\n                  | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>);\n              }\n          >\n        >;\n        reviews?: Maybe<\n          Array<\n            { __typename?: 'Review' } & Pick<Review, '_id' | 'rating'> & {\n                forUser: { __typename?: 'User' } & Pick<User, '_id'>;\n              }\n          >\n        >;\n      }\n  >;\n};\n\nexport type IsUserLoggedInQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type IsUserLoggedInQuery = { __typename?: 'Query' } & Pick<\n  Query,\n  'isLoggedIn'\n>;\n\nexport type NotificationQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type NotificationQuery = { __typename?: 'Query' } & {\n  notification?: Maybe<\n    { __typename?: 'Notification' } & Pick<Notification, 'type' | 'message'>\n  >;\n};\n\nexport type MyInfoQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type MyInfoQuery = { __typename?: 'Query' } & {\n  myInfo?: Maybe<\n    { __typename?: 'User' } & Pick<User, '_id' | 'firstName' | 'lastName'> & {\n        address: { __typename?: 'Address' } & Pick<\n          Address,\n          'regione' | 'provincia' | 'comune'\n        >;\n        ads?: Maybe<\n          Array<\n            | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id' | 'isActive'> & {\n                  postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n                })\n            | ({ __typename?: 'AdGrape' } & Pick<\n                AdGrape,\n                '_id' | 'isActive'\n              > & { postedBy: { __typename?: 'User' } & Pick<User, '_id'> })\n          >\n        >;\n        savedAds?: Maybe<\n          Array<\n            | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id'>)\n            | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>)\n          >\n        >;\n        messages?: Maybe<\n          Array<\n            { __typename?: 'Message' } & Pick<Message, '_id' | 'isViewed'> & {\n                sentBy: { __typename?: 'User' } & Pick<User, '_id'>;\n              }\n          >\n        >;\n        negotiations?: Maybe<\n          Array<\n            { __typename?: 'Negotiation' } & Pick<\n              Negotiation,\n              '_id' | 'isConcluded'\n            > & {\n                ad:\n                  | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id'>)\n                  | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>);\n              }\n          >\n        >;\n        reviews?: Maybe<\n          Array<{ __typename?: 'Review' } & Pick<Review, '_id' | 'rating'>>\n        >;\n      }\n  >;\n};\n\nexport type WineSearchedQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type WineSearchedQuery = { __typename?: 'Query' } & {\n  searchedWine?: Maybe<\n    { __typename?: 'WineSearched' } & Pick<\n      WineSearched,\n      | 'typeAd'\n      | 'typeProduct'\n      | 'wineName'\n      | 'harvest'\n      | 'abv'\n      | 'price'\n      | 'liters'\n      | 'isPost'\n    >\n  >;\n};\n\nexport type AdsWineQueryVariables = Exact<{\n  typeAd: TypeAd;\n  typeProduct: TypeProduct;\n  wineName?: Maybe<Scalars['String']>;\n  offset?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<QueryOrderBy>;\n  limit?: Maybe<Scalars['Int']>;\n}>;\n\nexport type AdsWineQuery = { __typename?: 'Query' } & {\n  ads?: Maybe<\n    { __typename?: 'AdsResult' } & Pick<AdsResult, 'pageCount'> & {\n        ads?: Maybe<\n          Array<\n            Maybe<\n              | ({ __typename?: 'AdWine' } & Pick<\n                  AdWine,\n                  | 'wineName'\n                  | 'litersFrom'\n                  | 'litersTo'\n                  | 'metodoProduttivo'\n                  | '_id'\n                  | 'harvest'\n                  | 'abv'\n                  | 'priceFrom'\n                  | 'priceTo'\n                  | 'typeAd'\n                  | 'activeNegotiations'\n                  | 'numberViews'\n                  | 'isActive'\n                  | 'datePosted'\n                > & {\n                    wine?: Maybe<\n                      { __typename?: 'Wine' } & Pick<\n                        Wine,\n                        'denominazioneZona' | 'regione'\n                      >\n                    >;\n                    postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n                    address: { __typename?: 'Address' } & Pick<\n                      Address,\n                      'regione' | 'provincia' | 'comune'\n                    >;\n                  })\n              | ({ __typename?: 'AdGrape' } & Pick<\n                  AdGrape,\n                  | '_id'\n                  | 'harvest'\n                  | 'abv'\n                  | 'priceFrom'\n                  | 'priceTo'\n                  | 'typeAd'\n                  | 'activeNegotiations'\n                  | 'numberViews'\n                  | 'isActive'\n                  | 'datePosted'\n                > & {\n                    postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n                    address: { __typename?: 'Address' } & Pick<\n                      Address,\n                      'regione' | 'provincia' | 'comune'\n                    >;\n                  })\n            >\n          >\n        >;\n      }\n  >;\n};\n\nexport type AdQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\nexport type AdQuery = { __typename?: 'Query' } & {\n  ad?: Maybe<\n    | ({ __typename?: 'AdWine' } & Pick<\n        AdWine,\n        | 'wineName'\n        | 'litersFrom'\n        | 'litersTo'\n        | 'metodoProduttivo'\n        | '_id'\n        | 'needsFollowUp'\n        | 'harvest'\n        | 'abv'\n        | 'priceFrom'\n        | 'priceTo'\n        | 'typeAd'\n        | 'activeNegotiations'\n        | 'numberViews'\n        | 'datePosted'\n        | 'isActive'\n      > & {\n          wine?: Maybe<\n            { __typename?: 'Wine' } & Pick<\n              Wine,\n              'denominazioneZona' | 'regione'\n            >\n          >;\n          postedBy: { __typename?: 'User' } & Pick<\n            User,\n            | '_id'\n            | 'firstName'\n            | 'lastName'\n            | 'hideContact'\n            | 'email'\n            | 'phoneNumber'\n          >;\n          address: { __typename?: 'Address' } & Pick<\n            Address,\n            'regione' | 'provincia' | 'comune'\n          >;\n        })\n    | ({ __typename?: 'AdGrape' } & Pick<\n        AdGrape,\n        | '_id'\n        | 'needsFollowUp'\n        | 'harvest'\n        | 'abv'\n        | 'priceFrom'\n        | 'priceTo'\n        | 'typeAd'\n        | 'activeNegotiations'\n        | 'numberViews'\n        | 'datePosted'\n        | 'isActive'\n      > & {\n          postedBy: { __typename?: 'User' } & Pick<\n            User,\n            | '_id'\n            | 'firstName'\n            | 'lastName'\n            | 'hideContact'\n            | 'email'\n            | 'phoneNumber'\n          >;\n          address: { __typename?: 'Address' } & Pick<\n            Address,\n            'regione' | 'provincia' | 'comune'\n          >;\n        })\n  >;\n  me?: Maybe<\n    { __typename?: 'User' } & Pick<User, '_id'> & {\n        negotiations?: Maybe<\n          Array<\n            { __typename?: 'Negotiation' } & Pick<Negotiation, '_id'> & {\n                ad:\n                  | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id'>)\n                  | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>);\n              }\n          >\n        >;\n      }\n  >;\n};\n\nexport type WinesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type WinesQuery = { __typename?: 'Query' } & {\n  wines?: Maybe<\n    Array<\n      { __typename?: 'Wine' } & Pick<\n        Wine,\n        | '_id'\n        | 'denominazioneVino'\n        | 'espressioneComunitaria'\n        | 'denominazioneZona'\n        | 'regione'\n      >\n    >\n  >;\n};\n\nexport type NegotiationsQueryVariables = Exact<{\n  offset?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<QueryOrderBy>;\n  limit?: Maybe<Scalars['Int']>;\n  isConcluded?: Maybe<Scalars['Boolean']>;\n}>;\n\nexport type NegotiationsQuery = { __typename?: 'Query' } & {\n  negotiations?: Maybe<\n    { __typename?: 'NegotiationResult' } & Pick<\n      NegotiationResult,\n      'pageCount'\n    > & {\n        negotiations?: Maybe<\n          Array<\n            Maybe<{ __typename?: 'Negotiation' } & NegotiationDetailsFragment>\n          >\n        >;\n      }\n  >;\n};\n\nexport type NegotiationQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\nexport type NegotiationQuery = { __typename?: 'Query' } & {\n  negotiation?: Maybe<\n    { __typename?: 'Negotiation' } & {\n      ad:\n        | ({ __typename?: 'AdWine' } & {\n            wine?: Maybe<\n              { __typename?: 'Wine' } & Pick<Wine, 'denominazioneZona'>\n            >;\n            postedBy: { __typename?: 'User' } & Pick<\n              User,\n              'hideContact' | 'phoneNumber' | 'email'\n            >;\n          })\n        | ({ __typename?: 'AdGrape' } & {\n            postedBy: { __typename?: 'User' } & Pick<\n              User,\n              'hideContact' | 'phoneNumber' | 'email'\n            >;\n          });\n    } & NegotiationDetailsFragment\n  >;\n};\n\nexport type MessagesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type MessagesQuery = { __typename?: 'Query' } & {\n  messages?: Maybe<Array<{ __typename?: 'Message' } & MessageDetailsFragment>>;\n};\n\nexport type MessagesNegotiationQueryVariables = Exact<{\n  id: Scalars['ID'];\n  offset?: Maybe<Scalars['Int']>;\n  limit?: Maybe<Scalars['Int']>;\n}>;\n\nexport type MessagesNegotiationQuery = { __typename?: 'Query' } & {\n  messagesForNegotiation?: Maybe<\n    { __typename?: 'MessageResult' } & Pick<MessageResult, 'pageCount'> & {\n        messages?: Maybe<\n          Array<Maybe<{ __typename?: 'Message' } & MessageDetailsFragment>>\n        >;\n      }\n  >;\n};\n\nexport type ReviewsQueryVariables = Exact<{\n  offset?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<QueryOrderBy>;\n  limit?: Maybe<Scalars['Int']>;\n}>;\n\nexport type ReviewsQuery = { __typename?: 'Query' } & {\n  reviews?: Maybe<\n    { __typename?: 'ReviewResult' } & Pick<ReviewResult, 'pageCount'> & {\n        reviews?: Maybe<\n          Array<Maybe<{ __typename?: 'Review' } & ReviewDetailsFragment>>\n        >;\n      }\n  >;\n};\n\nexport type ReviewQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\nexport type ReviewQuery = { __typename?: 'Query' } & {\n  review?: Maybe<{ __typename?: 'Review' } & ReviewDetailsFragment>;\n};\n\nexport type NegotiationsForAdQueryVariables = Exact<{\n  ad: Scalars['ID'];\n}>;\n\nexport type NegotiationsForAdQuery = { __typename?: 'Query' } & {\n  negotiationsForAd?: Maybe<\n    Array<\n      { __typename?: 'Negotiation' } & Pick<\n        Negotiation,\n        '_id' | 'isConcluded' | 'dateCreated' | 'dateConcluded'\n      > & {\n          createdBy: { __typename?: 'User' } & Pick<\n            User,\n            '_id' | 'firstName' | 'lastName'\n          >;\n        }\n    >\n  >;\n};\n\nexport type AdsForUserQueryVariables = Exact<{\n  offset?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<QueryOrderBy>;\n  limit?: Maybe<Scalars['Int']>;\n  isActive?: Maybe<Scalars['Boolean']>;\n  user: Scalars['ID'];\n}>;\n\nexport type AdsForUserQuery = { __typename?: 'Query' } & {\n  adsForUser?: Maybe<\n    { __typename?: 'AdsResult' } & Pick<AdsResult, 'pageCount'> & {\n        ads?: Maybe<\n          Array<\n            Maybe<\n              | ({ __typename?: 'AdWine' } & Pick<\n                  AdWine,\n                  | 'wineName'\n                  | 'litersFrom'\n                  | 'litersTo'\n                  | 'metodoProduttivo'\n                  | '_id'\n                  | 'needsFollowUp'\n                  | 'harvest'\n                  | 'abv'\n                  | 'priceFrom'\n                  | 'priceTo'\n                  | 'typeAd'\n                  | 'activeNegotiations'\n                  | 'numberViews'\n                  | 'datePosted'\n                  | 'isActive'\n                > & {\n                    wine?: Maybe<\n                      { __typename?: 'Wine' } & Pick<\n                        Wine,\n                        'denominazioneZona' | 'regione'\n                      >\n                    >;\n                    postedBy: { __typename?: 'User' } & Pick<\n                      User,\n                      '_id' | 'firstName' | 'lastName' | 'hideContact'\n                    >;\n                    address: { __typename?: 'Address' } & Pick<\n                      Address,\n                      'regione' | 'provincia' | 'comune'\n                    >;\n                  })\n              | ({ __typename?: 'AdGrape' } & Pick<\n                  AdGrape,\n                  | '_id'\n                  | 'needsFollowUp'\n                  | 'harvest'\n                  | 'abv'\n                  | 'priceFrom'\n                  | 'priceTo'\n                  | 'typeAd'\n                  | 'activeNegotiations'\n                  | 'numberViews'\n                  | 'datePosted'\n                  | 'isActive'\n                > & {\n                    postedBy: { __typename?: 'User' } & Pick<\n                      User,\n                      '_id' | 'firstName' | 'lastName' | 'hideContact'\n                    >;\n                    address: { __typename?: 'Address' } & Pick<\n                      Address,\n                      'regione' | 'provincia' | 'comune'\n                    >;\n                  })\n            >\n          >\n        >;\n      }\n  >;\n};\n\nexport type AdPostedFollowUpSubscriptionVariables = Exact<{\n  [key: string]: never;\n}>;\n\nexport type AdPostedFollowUpSubscription = { __typename?: 'Subscription' } & {\n  adPostedFollowUp:\n    | ({ __typename?: 'AdWine' } & Pick<\n        AdWine,\n        | 'wineName'\n        | 'litersFrom'\n        | 'litersTo'\n        | 'metodoProduttivo'\n        | '_id'\n        | 'harvest'\n        | 'abv'\n        | 'priceFrom'\n        | 'priceTo'\n        | 'typeAd'\n        | 'activeNegotiations'\n        | 'numberViews'\n        | 'datePosted'\n      > & {\n          wine?: Maybe<\n            { __typename?: 'Wine' } & Pick<\n              Wine,\n              'denominazioneZona' | 'regione'\n            >\n          >;\n          postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n          address: { __typename?: 'Address' } & Pick<\n            Address,\n            'regione' | 'provincia' | 'comune'\n          >;\n        })\n    | ({ __typename?: 'AdGrape' } & Pick<\n        AdGrape,\n        | '_id'\n        | 'harvest'\n        | 'abv'\n        | 'priceFrom'\n        | 'priceTo'\n        | 'typeAd'\n        | 'activeNegotiations'\n        | 'numberViews'\n        | 'datePosted'\n      > & {\n          postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n          address: { __typename?: 'Address' } & Pick<\n            Address,\n            'regione' | 'provincia' | 'comune'\n          >;\n        });\n};\n\nexport type AdRemovedSubscriptionVariables = Exact<{ [key: string]: never }>;\n\nexport type AdRemovedSubscription = { __typename?: 'Subscription' } & {\n  adRemoved:\n    | ({ __typename?: 'AdWine' } & Pick<AdWine, '_id'>)\n    | ({ __typename?: 'AdGrape' } & Pick<AdGrape, '_id'>);\n};\n\nexport type MessageSentSubscriptionVariables = Exact<{ [key: string]: never }>;\n\nexport type MessageSentSubscription = { __typename?: 'Subscription' } & {\n  messageSent: { __typename?: 'Message' } & MessageDetailsFragment;\n};\n\nexport type NegotiationCreatedSubscriptionVariables = Exact<{\n  [key: string]: never;\n}>;\n\nexport type NegotiationCreatedSubscription = { __typename?: 'Subscription' } & {\n  negotiationCreated: {\n    __typename?: 'Negotiation';\n  } & NegotiationDetailsFragment;\n};\n\nexport type NegotiationClosedSubscriptionVariables = Exact<{\n  [key: string]: never;\n}>;\n\nexport type NegotiationClosedSubscription = { __typename?: 'Subscription' } & {\n  negotiationClosed:\n    | ({ __typename?: 'AdWine' } & Pick<\n        AdWine,\n        | 'wineName'\n        | 'litersFrom'\n        | 'litersTo'\n        | 'metodoProduttivo'\n        | '_id'\n        | 'harvest'\n        | 'abv'\n        | 'priceFrom'\n        | 'priceTo'\n        | 'typeAd'\n        | 'activeNegotiations'\n        | 'numberViews'\n        | 'datePosted'\n      > & {\n          wine?: Maybe<\n            { __typename?: 'Wine' } & Pick<\n              Wine,\n              'denominazioneZona' | 'regione'\n            >\n          >;\n          postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n          address: { __typename?: 'Address' } & Pick<\n            Address,\n            'regione' | 'provincia' | 'comune'\n          >;\n        })\n    | ({ __typename?: 'AdGrape' } & Pick<\n        AdGrape,\n        | '_id'\n        | 'harvest'\n        | 'abv'\n        | 'priceFrom'\n        | 'priceTo'\n        | 'typeAd'\n        | 'activeNegotiations'\n        | 'numberViews'\n        | 'datePosted'\n      > & {\n          postedBy: { __typename?: 'User' } & Pick<User, '_id'>;\n          address: { __typename?: 'Address' } & Pick<\n            Address,\n            'regione' | 'provincia' | 'comune'\n          >;\n        });\n};\n\nexport type ReviewCreatedSubscriptionVariables = Exact<{\n  [key: string]: never;\n}>;\n\nexport type ReviewCreatedSubscription = { __typename?: 'Subscription' } & {\n  reviewCreated: { __typename?: 'Review' } & ReviewDetailsFragment;\n};\n\nexport const AdDetailsFragmentDoc = gql`\n  fragment AdDetails on Ad {\n    _id\n    postedBy {\n      _id\n      firstName\n      lastName\n      hideContact\n    }\n    needsFollowUp\n    harvest\n    abv\n    priceFrom\n    priceTo\n    ... on AdWine {\n      wineName\n      litersFrom\n      litersTo\n      metodoProduttivo\n      wine {\n        denominazioneZona\n        regione\n      }\n    }\n    typeAd\n    address {\n      regione\n      provincia\n    }\n    activeNegotiations\n    datePosted\n  }\n`;\nexport const NegotiationDetailsFragmentDoc = gql`\n  fragment NegotiationDetails on Negotiation {\n    _id\n    createdBy {\n      _id\n      firstName\n    }\n    ad {\n      _id\n      postedBy {\n        _id\n        firstName\n        lastName\n      }\n      ... on AdWine {\n        wineName\n      }\n    }\n    forUserAd {\n      _id\n      firstName\n    }\n    type\n    review {\n      _id\n      createdBy {\n        _id\n      }\n    }\n    dateCreated\n    dateConcluded\n    isConcluded\n  }\n`;\nexport const MessageDetailsFragmentDoc = gql`\n  fragment MessageDetails on Message {\n    _id\n    content\n    isViewed\n    sentBy {\n      _id\n      firstName\n      lastName\n    }\n    sentTo {\n      _id\n      firstName\n      lastName\n    }\n    negotiation {\n      _id\n      ad {\n        _id\n        ... on AdWine {\n          wineName\n        }\n      }\n      type\n      isConcluded\n    }\n    dateSent\n  }\n`;\nexport const ReviewDetailsFragmentDoc = gql`\n  fragment ReviewDetails on Review {\n    _id\n    createdBy {\n      _id\n      firstName\n      lastName\n    }\n    negotiation {\n      _id\n      ad {\n        _id\n        ... on AdWine {\n          wineName\n        }\n      }\n    }\n    forUser {\n      _id\n      firstName\n      lastName\n    }\n    rating\n    dateCreated\n    content\n    type\n  }\n`;\nexport const LoginDocument = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      response {\n        token\n        user {\n          _id\n          firstName\n          address {\n            regione\n            provincia\n            comune\n          }\n        }\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n`;\nexport type LoginMutationFn = Apollo.MutationFunction<\n  LoginMutation,\n  LoginMutationVariables\n>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    LoginMutation,\n    LoginMutationVariables\n  >\n) {\n  return Apollo.useMutation<LoginMutation, LoginMutationVariables>(\n    LoginDocument,\n    baseOptions\n  );\n}\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<\n  LoginMutation,\n  LoginMutationVariables\n>;\nexport const CreateUserDocument = gql`\n  mutation CreateUser($userInput: UserInput!) {\n    createUser(user: $userInput) {\n      response {\n        token\n        user {\n          _id\n          firstName\n        }\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n`;\nexport type CreateUserMutationFn = Apollo.MutationFunction<\n  CreateUserMutation,\n  CreateUserMutationVariables\n>;\n\n/**\n * __useCreateUserMutation__\n *\n * To run a mutation, you first call `useCreateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createUserMutation, { data, loading, error }] = useCreateUserMutation({\n *   variables: {\n *      userInput: // value for 'userInput'\n *   },\n * });\n */\nexport function useCreateUserMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    CreateUserMutation,\n    CreateUserMutationVariables\n  >\n) {\n  return Apollo.useMutation<CreateUserMutation, CreateUserMutationVariables>(\n    CreateUserDocument,\n    baseOptions\n  );\n}\nexport type CreateUserMutationHookResult = ReturnType<\n  typeof useCreateUserMutation\n>;\nexport type CreateUserMutationResult = Apollo.MutationResult<CreateUserMutation>;\nexport type CreateUserMutationOptions = Apollo.BaseMutationOptions<\n  CreateUserMutation,\n  CreateUserMutationVariables\n>;\nexport const UpdateUserDocument = gql`\n  mutation UpdateUser($user: UserInputUpdate!) {\n    updateUser(user: $user) {\n      response {\n        _id\n        firstName\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n`;\nexport type UpdateUserMutationFn = Apollo.MutationFunction<\n  UpdateUserMutation,\n  UpdateUserMutationVariables\n>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      user: // value for 'user'\n *   },\n * });\n */\nexport function useUpdateUserMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UpdateUserMutation,\n    UpdateUserMutationVariables\n  >\n) {\n  return Apollo.useMutation<UpdateUserMutation, UpdateUserMutationVariables>(\n    UpdateUserDocument,\n    baseOptions\n  );\n}\nexport type UpdateUserMutationHookResult = ReturnType<\n  typeof useUpdateUserMutation\n>;\nexport type UpdateUserMutationResult = Apollo.MutationResult<UpdateUserMutation>;\nexport type UpdateUserMutationOptions = Apollo.BaseMutationOptions<\n  UpdateUserMutation,\n  UpdateUserMutationVariables\n>;\nexport const DeleteUserDocument = gql`\n  mutation DeleteUser($id: ID!) {\n    deleteUser(id: $id) {\n      response {\n        _id\n        firstName\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n`;\nexport type DeleteUserMutationFn = Apollo.MutationFunction<\n  DeleteUserMutation,\n  DeleteUserMutationVariables\n>;\n\n/**\n * __useDeleteUserMutation__\n *\n * To run a mutation, you first call `useDeleteUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteUserMutation, { data, loading, error }] = useDeleteUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteUserMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    DeleteUserMutation,\n    DeleteUserMutationVariables\n  >\n) {\n  return Apollo.useMutation<DeleteUserMutation, DeleteUserMutationVariables>(\n    DeleteUserDocument,\n    baseOptions\n  );\n}\nexport type DeleteUserMutationHookResult = ReturnType<\n  typeof useDeleteUserMutation\n>;\nexport type DeleteUserMutationResult = Apollo.MutationResult<DeleteUserMutation>;\nexport type DeleteUserMutationOptions = Apollo.BaseMutationOptions<\n  DeleteUserMutation,\n  DeleteUserMutationVariables\n>;\nexport const CreateAdWineDocument = gql`\n  mutation CreateAdWine($input: AdInput!) {\n    createAd(input: $input) {\n      response {\n        _id\n        postedBy {\n          _id\n        }\n        harvest\n        abv\n        priceFrom\n        priceTo\n        ... on AdWine {\n          wineName\n          litersFrom\n          litersTo\n          metodoProduttivo\n          wine {\n            denominazioneZona\n            regione\n          }\n        }\n        typeAd\n        address {\n          regione\n          provincia\n          comune\n        }\n        activeNegotiations\n        numberViews\n        datePosted\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n`;\nexport type CreateAdWineMutationFn = Apollo.MutationFunction<\n  CreateAdWineMutation,\n  CreateAdWineMutationVariables\n>;\n\n/**\n * __useCreateAdWineMutation__\n *\n * To run a mutation, you first call `useCreateAdWineMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateAdWineMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createAdWineMutation, { data, loading, error }] = useCreateAdWineMutation({\n *   variables: {\n *      input: // value for 'input'\n *   },\n * });\n */\nexport function useCreateAdWineMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    CreateAdWineMutation,\n    CreateAdWineMutationVariables\n  >\n) {\n  return Apollo.useMutation<\n    CreateAdWineMutation,\n    CreateAdWineMutationVariables\n  >(CreateAdWineDocument, baseOptions);\n}\nexport type CreateAdWineMutationHookResult = ReturnType<\n  typeof useCreateAdWineMutation\n>;\nexport type CreateAdWineMutationResult = Apollo.MutationResult<CreateAdWineMutation>;\nexport type CreateAdWineMutationOptions = Apollo.BaseMutationOptions<\n  CreateAdWineMutation,\n  CreateAdWineMutationVariables\n>;\nexport const UpdateAdWineDocument = gql`\n  mutation UpdateAdWine($input: AdInputUpdate!) {\n    updateAd(input: $input) {\n      response {\n        _id\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n`;\nexport type UpdateAdWineMutationFn = Apollo.MutationFunction<\n  UpdateAdWineMutation,\n  UpdateAdWineMutationVariables\n>;\n\n/**\n * __useUpdateAdWineMutation__\n *\n * To run a mutation, you first call `useUpdateAdWineMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateAdWineMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateAdWineMutation, { data, loading, error }] = useUpdateAdWineMutation({\n *   variables: {\n *      input: // value for 'input'\n *   },\n * });\n */\nexport function useUpdateAdWineMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UpdateAdWineMutation,\n    UpdateAdWineMutationVariables\n  >\n) {\n  return Apollo.useMutation<\n    UpdateAdWineMutation,\n    UpdateAdWineMutationVariables\n  >(UpdateAdWineDocument, baseOptions);\n}\nexport type UpdateAdWineMutationHookResult = ReturnType<\n  typeof useUpdateAdWineMutation\n>;\nexport type UpdateAdWineMutationResult = Apollo.MutationResult<UpdateAdWineMutation>;\nexport type UpdateAdWineMutationOptions = Apollo.BaseMutationOptions<\n  UpdateAdWineMutation,\n  UpdateAdWineMutationVariables\n>;\nexport const SaveAdDocument = gql`\n  mutation SaveAd($id: ID!) {\n    saveAd(id: $id) {\n      response {\n        _id\n        harvest\n        abv\n        priceFrom\n        priceTo\n        ... on AdWine {\n          wineName\n          litersFrom\n          litersTo\n          wine {\n            denominazioneZona\n          }\n        }\n        datePosted\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n`;\nexport type SaveAdMutationFn = Apollo.MutationFunction<\n  SaveAdMutation,\n  SaveAdMutationVariables\n>;\n\n/**\n * __useSaveAdMutation__\n *\n * To run a mutation, you first call `useSaveAdMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSaveAdMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [saveAdMutation, { data, loading, error }] = useSaveAdMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useSaveAdMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    SaveAdMutation,\n    SaveAdMutationVariables\n  >\n) {\n  return Apollo.useMutation<SaveAdMutation, SaveAdMutationVariables>(\n    SaveAdDocument,\n    baseOptions\n  );\n}\nexport type SaveAdMutationHookResult = ReturnType<typeof useSaveAdMutation>;\nexport type SaveAdMutationResult = Apollo.MutationResult<SaveAdMutation>;\nexport type SaveAdMutationOptions = Apollo.BaseMutationOptions<\n  SaveAdMutation,\n  SaveAdMutationVariables\n>;\nexport const DeleteAdDocument = gql`\n  mutation DeleteAd($id: ID!) {\n    deleteAd(id: $id) {\n      response {\n        _id\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n`;\nexport type DeleteAdMutationFn = Apollo.MutationFunction<\n  DeleteAdMutation,\n  DeleteAdMutationVariables\n>;\n\n/**\n * __useDeleteAdMutation__\n *\n * To run a mutation, you first call `useDeleteAdMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteAdMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteAdMutation, { data, loading, error }] = useDeleteAdMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteAdMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    DeleteAdMutation,\n    DeleteAdMutationVariables\n  >\n) {\n  return Apollo.useMutation<DeleteAdMutation, DeleteAdMutationVariables>(\n    DeleteAdDocument,\n    baseOptions\n  );\n}\nexport type DeleteAdMutationHookResult = ReturnType<typeof useDeleteAdMutation>;\nexport type DeleteAdMutationResult = Apollo.MutationResult<DeleteAdMutation>;\nexport type DeleteAdMutationOptions = Apollo.BaseMutationOptions<\n  DeleteAdMutation,\n  DeleteAdMutationVariables\n>;\nexport const CreateNegotiationDocument = gql`\n  mutation CreateNegotiation($negotiation: NegotiationInput!) {\n    createNegotiation(negotiation: $negotiation) {\n      response {\n        ...NegotiationDetails\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n  ${NegotiationDetailsFragmentDoc}\n`;\nexport type CreateNegotiationMutationFn = Apollo.MutationFunction<\n  CreateNegotiationMutation,\n  CreateNegotiationMutationVariables\n>;\n\n/**\n * __useCreateNegotiationMutation__\n *\n * To run a mutation, you first call `useCreateNegotiationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateNegotiationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createNegotiationMutation, { data, loading, error }] = useCreateNegotiationMutation({\n *   variables: {\n *      negotiation: // value for 'negotiation'\n *   },\n * });\n */\nexport function useCreateNegotiationMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    CreateNegotiationMutation,\n    CreateNegotiationMutationVariables\n  >\n) {\n  return Apollo.useMutation<\n    CreateNegotiationMutation,\n    CreateNegotiationMutationVariables\n  >(CreateNegotiationDocument, baseOptions);\n}\nexport type CreateNegotiationMutationHookResult = ReturnType<\n  typeof useCreateNegotiationMutation\n>;\nexport type CreateNegotiationMutationResult = Apollo.MutationResult<CreateNegotiationMutation>;\nexport type CreateNegotiationMutationOptions = Apollo.BaseMutationOptions<\n  CreateNegotiationMutation,\n  CreateNegotiationMutationVariables\n>;\nexport const UpdateNegotiationDocument = gql`\n  mutation UpdateNegotiation($negotiation: NegotiationInputUpdate!) {\n    updateNegotiation(negotiation: $negotiation) {\n      response {\n        ...NegotiationDetails\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n  ${NegotiationDetailsFragmentDoc}\n`;\nexport type UpdateNegotiationMutationFn = Apollo.MutationFunction<\n  UpdateNegotiationMutation,\n  UpdateNegotiationMutationVariables\n>;\n\n/**\n * __useUpdateNegotiationMutation__\n *\n * To run a mutation, you first call `useUpdateNegotiationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateNegotiationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateNegotiationMutation, { data, loading, error }] = useUpdateNegotiationMutation({\n *   variables: {\n *      negotiation: // value for 'negotiation'\n *   },\n * });\n */\nexport function useUpdateNegotiationMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    UpdateNegotiationMutation,\n    UpdateNegotiationMutationVariables\n  >\n) {\n  return Apollo.useMutation<\n    UpdateNegotiationMutation,\n    UpdateNegotiationMutationVariables\n  >(UpdateNegotiationDocument, baseOptions);\n}\nexport type UpdateNegotiationMutationHookResult = ReturnType<\n  typeof useUpdateNegotiationMutation\n>;\nexport type UpdateNegotiationMutationResult = Apollo.MutationResult<UpdateNegotiationMutation>;\nexport type UpdateNegotiationMutationOptions = Apollo.BaseMutationOptions<\n  UpdateNegotiationMutation,\n  UpdateNegotiationMutationVariables\n>;\nexport const DeleteNegotiationDocument = gql`\n  mutation DeleteNegotiation($id: ID!) {\n    deleteNegotiation(id: $id) {\n      response {\n        _id\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n`;\nexport type DeleteNegotiationMutationFn = Apollo.MutationFunction<\n  DeleteNegotiationMutation,\n  DeleteNegotiationMutationVariables\n>;\n\n/**\n * __useDeleteNegotiationMutation__\n *\n * To run a mutation, you first call `useDeleteNegotiationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteNegotiationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteNegotiationMutation, { data, loading, error }] = useDeleteNegotiationMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteNegotiationMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    DeleteNegotiationMutation,\n    DeleteNegotiationMutationVariables\n  >\n) {\n  return Apollo.useMutation<\n    DeleteNegotiationMutation,\n    DeleteNegotiationMutationVariables\n  >(DeleteNegotiationDocument, baseOptions);\n}\nexport type DeleteNegotiationMutationHookResult = ReturnType<\n  typeof useDeleteNegotiationMutation\n>;\nexport type DeleteNegotiationMutationResult = Apollo.MutationResult<DeleteNegotiationMutation>;\nexport type DeleteNegotiationMutationOptions = Apollo.BaseMutationOptions<\n  DeleteNegotiationMutation,\n  DeleteNegotiationMutationVariables\n>;\nexport const CreateMessageDocument = gql`\n  mutation CreateMessage($message: MessageInput!) {\n    createMessage(message: $message) {\n      response {\n        ...MessageDetails\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n  ${MessageDetailsFragmentDoc}\n`;\nexport type CreateMessageMutationFn = Apollo.MutationFunction<\n  CreateMessageMutation,\n  CreateMessageMutationVariables\n>;\n\n/**\n * __useCreateMessageMutation__\n *\n * To run a mutation, you first call `useCreateMessageMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateMessageMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createMessageMutation, { data, loading, error }] = useCreateMessageMutation({\n *   variables: {\n *      message: // value for 'message'\n *   },\n * });\n */\nexport function useCreateMessageMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    CreateMessageMutation,\n    CreateMessageMutationVariables\n  >\n) {\n  return Apollo.useMutation<\n    CreateMessageMutation,\n    CreateMessageMutationVariables\n  >(CreateMessageDocument, baseOptions);\n}\nexport type CreateMessageMutationHookResult = ReturnType<\n  typeof useCreateMessageMutation\n>;\nexport type CreateMessageMutationResult = Apollo.MutationResult<CreateMessageMutation>;\nexport type CreateMessageMutationOptions = Apollo.BaseMutationOptions<\n  CreateMessageMutation,\n  CreateMessageMutationVariables\n>;\nexport const CreateReviewDocument = gql`\n  mutation CreateReview($review: ReviewInput!) {\n    createReview(review: $review) {\n      response {\n        ...ReviewDetails\n      }\n      errors {\n        name\n        text\n      }\n    }\n  }\n  ${ReviewDetailsFragmentDoc}\n`;\nexport type CreateReviewMutationFn = Apollo.MutationFunction<\n  CreateReviewMutation,\n  CreateReviewMutationVariables\n>;\n\n/**\n * __useCreateReviewMutation__\n *\n * To run a mutation, you first call `useCreateReviewMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateReviewMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createReviewMutation, { data, loading, error }] = useCreateReviewMutation({\n *   variables: {\n *      review: // value for 'review'\n *   },\n * });\n */\nexport function useCreateReviewMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    CreateReviewMutation,\n    CreateReviewMutationVariables\n  >\n) {\n  return Apollo.useMutation<\n    CreateReviewMutation,\n    CreateReviewMutationVariables\n  >(CreateReviewDocument, baseOptions);\n}\nexport type CreateReviewMutationHookResult = ReturnType<\n  typeof useCreateReviewMutation\n>;\nexport type CreateReviewMutationResult = Apollo.MutationResult<CreateReviewMutation>;\nexport type CreateReviewMutationOptions = Apollo.BaseMutationOptions<\n  CreateReviewMutation,\n  CreateReviewMutationVariables\n>;\nexport const FavoriteDocument = gql`\n  query Favorite {\n    me {\n      savedAds {\n        _id\n        postedBy {\n          _id\n        }\n        harvest\n        abv\n        priceFrom\n        priceTo\n        ... on AdWine {\n          wineName\n          litersFrom\n          litersTo\n          metodoProduttivo\n          wine {\n            denominazioneZona\n            regione\n          }\n        }\n        typeAd\n        address {\n          regione\n          provincia\n          comune\n        }\n        activeNegotiations\n        numberViews\n        datePosted\n        isActive\n      }\n    }\n  }\n`;\n\n/**\n * __useFavoriteQuery__\n *\n * To run a query within a React component, call `useFavoriteQuery` and pass it any options that fit your needs.\n * When your component renders, `useFavoriteQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFavoriteQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useFavoriteQuery(\n  baseOptions?: Apollo.QueryHookOptions<FavoriteQuery, FavoriteQueryVariables>\n) {\n  return Apollo.useQuery<FavoriteQuery, FavoriteQueryVariables>(\n    FavoriteDocument,\n    baseOptions\n  );\n}\nexport function useFavoriteLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    FavoriteQuery,\n    FavoriteQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<FavoriteQuery, FavoriteQueryVariables>(\n    FavoriteDocument,\n    baseOptions\n  );\n}\nexport type FavoriteQueryHookResult = ReturnType<typeof useFavoriteQuery>;\nexport type FavoriteLazyQueryHookResult = ReturnType<\n  typeof useFavoriteLazyQuery\n>;\nexport type FavoriteQueryResult = Apollo.QueryResult<\n  FavoriteQuery,\n  FavoriteQueryVariables\n>;\nexport const LightMeDocument = gql`\n  query LightMe {\n    me {\n      _id\n      firstName\n      address {\n        regione\n        provincia\n        comune\n      }\n    }\n  }\n`;\n\n/**\n * __useLightMeQuery__\n *\n * To run a query within a React component, call `useLightMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useLightMeQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLightMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useLightMeQuery(\n  baseOptions?: Apollo.QueryHookOptions<LightMeQuery, LightMeQueryVariables>\n) {\n  return Apollo.useQuery<LightMeQuery, LightMeQueryVariables>(\n    LightMeDocument,\n    baseOptions\n  );\n}\nexport function useLightMeLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<LightMeQuery, LightMeQueryVariables>\n) {\n  return Apollo.useLazyQuery<LightMeQuery, LightMeQueryVariables>(\n    LightMeDocument,\n    baseOptions\n  );\n}\nexport type LightMeQueryHookResult = ReturnType<typeof useLightMeQuery>;\nexport type LightMeLazyQueryHookResult = ReturnType<typeof useLightMeLazyQuery>;\nexport type LightMeQueryResult = Apollo.QueryResult<\n  LightMeQuery,\n  LightMeQueryVariables\n>;\nexport const MeDocument = gql`\n  query Me {\n    me {\n      _id\n      firstName\n      lastName\n      address {\n        regione\n        provincia\n        comune\n      }\n      ads {\n        _id\n        postedBy {\n          _id\n        }\n        isActive\n      }\n      savedAds {\n        _id\n      }\n      messages {\n        _id\n        isViewed\n        sentBy {\n          _id\n        }\n      }\n      negotiations {\n        _id\n        isConcluded\n        ad {\n          _id\n        }\n      }\n      reviews {\n        _id\n        forUser {\n          _id\n        }\n        rating\n      }\n    }\n  }\n`;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(\n  baseOptions?: Apollo.QueryHookOptions<MeQuery, MeQueryVariables>\n) {\n  return Apollo.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n}\nexport function useMeLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<MeQuery, MeQueryVariables>\n) {\n  return Apollo.useLazyQuery<MeQuery, MeQueryVariables>(\n    MeDocument,\n    baseOptions\n  );\n}\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = Apollo.QueryResult<MeQuery, MeQueryVariables>;\nexport const IsUserLoggedInDocument = gql`\n  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n`;\n\n/**\n * __useIsUserLoggedInQuery__\n *\n * To run a query within a React component, call `useIsUserLoggedInQuery` and pass it any options that fit your needs.\n * When your component renders, `useIsUserLoggedInQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useIsUserLoggedInQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useIsUserLoggedInQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    IsUserLoggedInQuery,\n    IsUserLoggedInQueryVariables\n  >\n) {\n  return Apollo.useQuery<IsUserLoggedInQuery, IsUserLoggedInQueryVariables>(\n    IsUserLoggedInDocument,\n    baseOptions\n  );\n}\nexport function useIsUserLoggedInLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    IsUserLoggedInQuery,\n    IsUserLoggedInQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<IsUserLoggedInQuery, IsUserLoggedInQueryVariables>(\n    IsUserLoggedInDocument,\n    baseOptions\n  );\n}\nexport type IsUserLoggedInQueryHookResult = ReturnType<\n  typeof useIsUserLoggedInQuery\n>;\nexport type IsUserLoggedInLazyQueryHookResult = ReturnType<\n  typeof useIsUserLoggedInLazyQuery\n>;\nexport type IsUserLoggedInQueryResult = Apollo.QueryResult<\n  IsUserLoggedInQuery,\n  IsUserLoggedInQueryVariables\n>;\nexport const NotificationDocument = gql`\n  query Notification {\n    notification @client {\n      type @client\n      message @client\n    }\n  }\n`;\n\n/**\n * __useNotificationQuery__\n *\n * To run a query within a React component, call `useNotificationQuery` and pass it any options that fit your needs.\n * When your component renders, `useNotificationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNotificationQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useNotificationQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    NotificationQuery,\n    NotificationQueryVariables\n  >\n) {\n  return Apollo.useQuery<NotificationQuery, NotificationQueryVariables>(\n    NotificationDocument,\n    baseOptions\n  );\n}\nexport function useNotificationLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    NotificationQuery,\n    NotificationQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<NotificationQuery, NotificationQueryVariables>(\n    NotificationDocument,\n    baseOptions\n  );\n}\nexport type NotificationQueryHookResult = ReturnType<\n  typeof useNotificationQuery\n>;\nexport type NotificationLazyQueryHookResult = ReturnType<\n  typeof useNotificationLazyQuery\n>;\nexport type NotificationQueryResult = Apollo.QueryResult<\n  NotificationQuery,\n  NotificationQueryVariables\n>;\nexport const MyInfoDocument = gql`\n  query MyInfo {\n    myInfo @client {\n      _id\n      firstName\n      lastName\n      address {\n        regione\n        provincia\n        comune\n      }\n      ads {\n        _id\n        postedBy {\n          _id\n        }\n        isActive\n      }\n      savedAds {\n        _id\n      }\n      messages {\n        _id\n        isViewed\n        sentBy {\n          _id\n        }\n      }\n      negotiations {\n        _id\n        isConcluded\n        ad {\n          _id\n        }\n      }\n      reviews {\n        _id\n        rating\n      }\n    }\n  }\n`;\n\n/**\n * __useMyInfoQuery__\n *\n * To run a query within a React component, call `useMyInfoQuery` and pass it any options that fit your needs.\n * When your component renders, `useMyInfoQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMyInfoQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMyInfoQuery(\n  baseOptions?: Apollo.QueryHookOptions<MyInfoQuery, MyInfoQueryVariables>\n) {\n  return Apollo.useQuery<MyInfoQuery, MyInfoQueryVariables>(\n    MyInfoDocument,\n    baseOptions\n  );\n}\nexport function useMyInfoLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<MyInfoQuery, MyInfoQueryVariables>\n) {\n  return Apollo.useLazyQuery<MyInfoQuery, MyInfoQueryVariables>(\n    MyInfoDocument,\n    baseOptions\n  );\n}\nexport type MyInfoQueryHookResult = ReturnType<typeof useMyInfoQuery>;\nexport type MyInfoLazyQueryHookResult = ReturnType<typeof useMyInfoLazyQuery>;\nexport type MyInfoQueryResult = Apollo.QueryResult<\n  MyInfoQuery,\n  MyInfoQueryVariables\n>;\nexport const WineSearchedDocument = gql`\n  query WineSearched {\n    searchedWine @client {\n      typeAd @client\n      typeProduct @client\n      wineName @client\n      harvest @client\n      abv @client\n      price @client\n      liters @client\n      isPost @client\n    }\n  }\n`;\n\n/**\n * __useWineSearchedQuery__\n *\n * To run a query within a React component, call `useWineSearchedQuery` and pass it any options that fit your needs.\n * When your component renders, `useWineSearchedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useWineSearchedQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useWineSearchedQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    WineSearchedQuery,\n    WineSearchedQueryVariables\n  >\n) {\n  return Apollo.useQuery<WineSearchedQuery, WineSearchedQueryVariables>(\n    WineSearchedDocument,\n    baseOptions\n  );\n}\nexport function useWineSearchedLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    WineSearchedQuery,\n    WineSearchedQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<WineSearchedQuery, WineSearchedQueryVariables>(\n    WineSearchedDocument,\n    baseOptions\n  );\n}\nexport type WineSearchedQueryHookResult = ReturnType<\n  typeof useWineSearchedQuery\n>;\nexport type WineSearchedLazyQueryHookResult = ReturnType<\n  typeof useWineSearchedLazyQuery\n>;\nexport type WineSearchedQueryResult = Apollo.QueryResult<\n  WineSearchedQuery,\n  WineSearchedQueryVariables\n>;\nexport const AdsWineDocument = gql`\n  query AdsWine(\n    $typeAd: TypeAd!\n    $typeProduct: TypeProduct!\n    $wineName: String\n    $offset: Int\n    $orderBy: QueryOrderBy\n    $limit: Int\n  ) {\n    ads(\n      typeAd: $typeAd\n      typeProduct: $typeProduct\n      wineName: $wineName\n      offset: $offset\n      orderBy: $orderBy\n      limit: $limit\n    ) {\n      ads {\n        _id\n        postedBy {\n          _id\n        }\n        harvest\n        abv\n        priceFrom\n        priceTo\n        ... on AdWine {\n          wineName\n          litersFrom\n          litersTo\n          metodoProduttivo\n          wine {\n            denominazioneZona\n            regione\n          }\n        }\n        typeAd\n        address {\n          regione\n          provincia\n          comune\n        }\n        activeNegotiations\n        numberViews\n        isActive\n        datePosted\n      }\n      pageCount\n    }\n  }\n`;\n\n/**\n * __useAdsWineQuery__\n *\n * To run a query within a React component, call `useAdsWineQuery` and pass it any options that fit your needs.\n * When your component renders, `useAdsWineQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAdsWineQuery({\n *   variables: {\n *      typeAd: // value for 'typeAd'\n *      typeProduct: // value for 'typeProduct'\n *      wineName: // value for 'wineName'\n *      offset: // value for 'offset'\n *      orderBy: // value for 'orderBy'\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useAdsWineQuery(\n  baseOptions: Apollo.QueryHookOptions<AdsWineQuery, AdsWineQueryVariables>\n) {\n  return Apollo.useQuery<AdsWineQuery, AdsWineQueryVariables>(\n    AdsWineDocument,\n    baseOptions\n  );\n}\nexport function useAdsWineLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<AdsWineQuery, AdsWineQueryVariables>\n) {\n  return Apollo.useLazyQuery<AdsWineQuery, AdsWineQueryVariables>(\n    AdsWineDocument,\n    baseOptions\n  );\n}\nexport type AdsWineQueryHookResult = ReturnType<typeof useAdsWineQuery>;\nexport type AdsWineLazyQueryHookResult = ReturnType<typeof useAdsWineLazyQuery>;\nexport type AdsWineQueryResult = Apollo.QueryResult<\n  AdsWineQuery,\n  AdsWineQueryVariables\n>;\nexport const AdDocument = gql`\n  query Ad($id: ID!) {\n    ad(id: $id) {\n      _id\n      postedBy {\n        _id\n        firstName\n        lastName\n        hideContact\n        email\n        phoneNumber\n      }\n      needsFollowUp\n      harvest\n      abv\n      priceFrom\n      priceTo\n      ... on AdWine {\n        wineName\n        litersFrom\n        litersTo\n        metodoProduttivo\n        wine {\n          denominazioneZona\n          regione\n        }\n      }\n      typeAd\n      address {\n        regione\n        provincia\n        comune\n      }\n      activeNegotiations\n      numberViews\n      datePosted\n      isActive\n    }\n    me {\n      _id\n      negotiations {\n        _id\n        ad {\n          _id\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __useAdQuery__\n *\n * To run a query within a React component, call `useAdQuery` and pass it any options that fit your needs.\n * When your component renders, `useAdQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAdQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useAdQuery(\n  baseOptions: Apollo.QueryHookOptions<AdQuery, AdQueryVariables>\n) {\n  return Apollo.useQuery<AdQuery, AdQueryVariables>(AdDocument, baseOptions);\n}\nexport function useAdLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<AdQuery, AdQueryVariables>\n) {\n  return Apollo.useLazyQuery<AdQuery, AdQueryVariables>(\n    AdDocument,\n    baseOptions\n  );\n}\nexport type AdQueryHookResult = ReturnType<typeof useAdQuery>;\nexport type AdLazyQueryHookResult = ReturnType<typeof useAdLazyQuery>;\nexport type AdQueryResult = Apollo.QueryResult<AdQuery, AdQueryVariables>;\nexport const WinesDocument = gql`\n  query Wines {\n    wines {\n      _id\n      denominazioneVino\n      espressioneComunitaria\n      denominazioneZona\n      regione\n    }\n  }\n`;\n\n/**\n * __useWinesQuery__\n *\n * To run a query within a React component, call `useWinesQuery` and pass it any options that fit your needs.\n * When your component renders, `useWinesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useWinesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useWinesQuery(\n  baseOptions?: Apollo.QueryHookOptions<WinesQuery, WinesQueryVariables>\n) {\n  return Apollo.useQuery<WinesQuery, WinesQueryVariables>(\n    WinesDocument,\n    baseOptions\n  );\n}\nexport function useWinesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<WinesQuery, WinesQueryVariables>\n) {\n  return Apollo.useLazyQuery<WinesQuery, WinesQueryVariables>(\n    WinesDocument,\n    baseOptions\n  );\n}\nexport type WinesQueryHookResult = ReturnType<typeof useWinesQuery>;\nexport type WinesLazyQueryHookResult = ReturnType<typeof useWinesLazyQuery>;\nexport type WinesQueryResult = Apollo.QueryResult<\n  WinesQuery,\n  WinesQueryVariables\n>;\nexport const NegotiationsDocument = gql`\n  query Negotiations(\n    $offset: Int\n    $orderBy: QueryOrderBy\n    $limit: Int\n    $isConcluded: Boolean\n  ) {\n    negotiations(\n      offset: $offset\n      orderBy: $orderBy\n      limit: $limit\n      isConcluded: $isConcluded\n    ) {\n      negotiations {\n        ...NegotiationDetails\n      }\n      pageCount\n    }\n  }\n  ${NegotiationDetailsFragmentDoc}\n`;\n\n/**\n * __useNegotiationsQuery__\n *\n * To run a query within a React component, call `useNegotiationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useNegotiationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNegotiationsQuery({\n *   variables: {\n *      offset: // value for 'offset'\n *      orderBy: // value for 'orderBy'\n *      limit: // value for 'limit'\n *      isConcluded: // value for 'isConcluded'\n *   },\n * });\n */\nexport function useNegotiationsQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    NegotiationsQuery,\n    NegotiationsQueryVariables\n  >\n) {\n  return Apollo.useQuery<NegotiationsQuery, NegotiationsQueryVariables>(\n    NegotiationsDocument,\n    baseOptions\n  );\n}\nexport function useNegotiationsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    NegotiationsQuery,\n    NegotiationsQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<NegotiationsQuery, NegotiationsQueryVariables>(\n    NegotiationsDocument,\n    baseOptions\n  );\n}\nexport type NegotiationsQueryHookResult = ReturnType<\n  typeof useNegotiationsQuery\n>;\nexport type NegotiationsLazyQueryHookResult = ReturnType<\n  typeof useNegotiationsLazyQuery\n>;\nexport type NegotiationsQueryResult = Apollo.QueryResult<\n  NegotiationsQuery,\n  NegotiationsQueryVariables\n>;\nexport const NegotiationDocument = gql`\n  query Negotiation($id: ID!) {\n    negotiation(id: $id) {\n      ...NegotiationDetails\n      ad {\n        ... on AdWine {\n          wine {\n            denominazioneZona\n          }\n        }\n        postedBy {\n          hideContact\n          phoneNumber\n          email\n        }\n      }\n    }\n  }\n  ${NegotiationDetailsFragmentDoc}\n`;\n\n/**\n * __useNegotiationQuery__\n *\n * To run a query within a React component, call `useNegotiationQuery` and pass it any options that fit your needs.\n * When your component renders, `useNegotiationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNegotiationQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useNegotiationQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    NegotiationQuery,\n    NegotiationQueryVariables\n  >\n) {\n  return Apollo.useQuery<NegotiationQuery, NegotiationQueryVariables>(\n    NegotiationDocument,\n    baseOptions\n  );\n}\nexport function useNegotiationLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    NegotiationQuery,\n    NegotiationQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<NegotiationQuery, NegotiationQueryVariables>(\n    NegotiationDocument,\n    baseOptions\n  );\n}\nexport type NegotiationQueryHookResult = ReturnType<typeof useNegotiationQuery>;\nexport type NegotiationLazyQueryHookResult = ReturnType<\n  typeof useNegotiationLazyQuery\n>;\nexport type NegotiationQueryResult = Apollo.QueryResult<\n  NegotiationQuery,\n  NegotiationQueryVariables\n>;\nexport const MessagesDocument = gql`\n  query Messages {\n    messages {\n      ...MessageDetails\n    }\n  }\n  ${MessageDetailsFragmentDoc}\n`;\n\n/**\n * __useMessagesQuery__\n *\n * To run a query within a React component, call `useMessagesQuery` and pass it any options that fit your needs.\n * When your component renders, `useMessagesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMessagesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMessagesQuery(\n  baseOptions?: Apollo.QueryHookOptions<MessagesQuery, MessagesQueryVariables>\n) {\n  return Apollo.useQuery<MessagesQuery, MessagesQueryVariables>(\n    MessagesDocument,\n    baseOptions\n  );\n}\nexport function useMessagesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    MessagesQuery,\n    MessagesQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<MessagesQuery, MessagesQueryVariables>(\n    MessagesDocument,\n    baseOptions\n  );\n}\nexport type MessagesQueryHookResult = ReturnType<typeof useMessagesQuery>;\nexport type MessagesLazyQueryHookResult = ReturnType<\n  typeof useMessagesLazyQuery\n>;\nexport type MessagesQueryResult = Apollo.QueryResult<\n  MessagesQuery,\n  MessagesQueryVariables\n>;\nexport const MessagesNegotiationDocument = gql`\n  query MessagesNegotiation($id: ID!, $offset: Int, $limit: Int) {\n    messagesForNegotiation(negotiation: $id, offset: $offset, limit: $limit) {\n      messages {\n        ...MessageDetails\n      }\n      pageCount\n    }\n  }\n  ${MessageDetailsFragmentDoc}\n`;\n\n/**\n * __useMessagesNegotiationQuery__\n *\n * To run a query within a React component, call `useMessagesNegotiationQuery` and pass it any options that fit your needs.\n * When your component renders, `useMessagesNegotiationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMessagesNegotiationQuery({\n *   variables: {\n *      id: // value for 'id'\n *      offset: // value for 'offset'\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useMessagesNegotiationQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    MessagesNegotiationQuery,\n    MessagesNegotiationQueryVariables\n  >\n) {\n  return Apollo.useQuery<\n    MessagesNegotiationQuery,\n    MessagesNegotiationQueryVariables\n  >(MessagesNegotiationDocument, baseOptions);\n}\nexport function useMessagesNegotiationLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    MessagesNegotiationQuery,\n    MessagesNegotiationQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<\n    MessagesNegotiationQuery,\n    MessagesNegotiationQueryVariables\n  >(MessagesNegotiationDocument, baseOptions);\n}\nexport type MessagesNegotiationQueryHookResult = ReturnType<\n  typeof useMessagesNegotiationQuery\n>;\nexport type MessagesNegotiationLazyQueryHookResult = ReturnType<\n  typeof useMessagesNegotiationLazyQuery\n>;\nexport type MessagesNegotiationQueryResult = Apollo.QueryResult<\n  MessagesNegotiationQuery,\n  MessagesNegotiationQueryVariables\n>;\nexport const ReviewsDocument = gql`\n  query Reviews($offset: Int, $orderBy: QueryOrderBy, $limit: Int) {\n    reviews(offset: $offset, orderBy: $orderBy, limit: $limit) {\n      reviews {\n        ...ReviewDetails\n      }\n      pageCount\n    }\n  }\n  ${ReviewDetailsFragmentDoc}\n`;\n\n/**\n * __useReviewsQuery__\n *\n * To run a query within a React component, call `useReviewsQuery` and pass it any options that fit your needs.\n * When your component renders, `useReviewsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useReviewsQuery({\n *   variables: {\n *      offset: // value for 'offset'\n *      orderBy: // value for 'orderBy'\n *      limit: // value for 'limit'\n *   },\n * });\n */\nexport function useReviewsQuery(\n  baseOptions?: Apollo.QueryHookOptions<ReviewsQuery, ReviewsQueryVariables>\n) {\n  return Apollo.useQuery<ReviewsQuery, ReviewsQueryVariables>(\n    ReviewsDocument,\n    baseOptions\n  );\n}\nexport function useReviewsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ReviewsQuery, ReviewsQueryVariables>\n) {\n  return Apollo.useLazyQuery<ReviewsQuery, ReviewsQueryVariables>(\n    ReviewsDocument,\n    baseOptions\n  );\n}\nexport type ReviewsQueryHookResult = ReturnType<typeof useReviewsQuery>;\nexport type ReviewsLazyQueryHookResult = ReturnType<typeof useReviewsLazyQuery>;\nexport type ReviewsQueryResult = Apollo.QueryResult<\n  ReviewsQuery,\n  ReviewsQueryVariables\n>;\nexport const ReviewDocument = gql`\n  query Review($id: ID!) {\n    review(id: $id) {\n      ...ReviewDetails\n    }\n  }\n  ${ReviewDetailsFragmentDoc}\n`;\n\n/**\n * __useReviewQuery__\n *\n * To run a query within a React component, call `useReviewQuery` and pass it any options that fit your needs.\n * When your component renders, `useReviewQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useReviewQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReviewQuery(\n  baseOptions: Apollo.QueryHookOptions<ReviewQuery, ReviewQueryVariables>\n) {\n  return Apollo.useQuery<ReviewQuery, ReviewQueryVariables>(\n    ReviewDocument,\n    baseOptions\n  );\n}\nexport function useReviewLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ReviewQuery, ReviewQueryVariables>\n) {\n  return Apollo.useLazyQuery<ReviewQuery, ReviewQueryVariables>(\n    ReviewDocument,\n    baseOptions\n  );\n}\nexport type ReviewQueryHookResult = ReturnType<typeof useReviewQuery>;\nexport type ReviewLazyQueryHookResult = ReturnType<typeof useReviewLazyQuery>;\nexport type ReviewQueryResult = Apollo.QueryResult<\n  ReviewQuery,\n  ReviewQueryVariables\n>;\nexport const NegotiationsForAdDocument = gql`\n  query NegotiationsForAd($ad: ID!) {\n    negotiationsForAd(ad: $ad) {\n      _id\n      isConcluded\n      createdBy {\n        _id\n        firstName\n        lastName\n      }\n      dateCreated\n      dateConcluded\n    }\n  }\n`;\n\n/**\n * __useNegotiationsForAdQuery__\n *\n * To run a query within a React component, call `useNegotiationsForAdQuery` and pass it any options that fit your needs.\n * When your component renders, `useNegotiationsForAdQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNegotiationsForAdQuery({\n *   variables: {\n *      ad: // value for 'ad'\n *   },\n * });\n */\nexport function useNegotiationsForAdQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    NegotiationsForAdQuery,\n    NegotiationsForAdQueryVariables\n  >\n) {\n  return Apollo.useQuery<\n    NegotiationsForAdQuery,\n    NegotiationsForAdQueryVariables\n  >(NegotiationsForAdDocument, baseOptions);\n}\nexport function useNegotiationsForAdLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    NegotiationsForAdQuery,\n    NegotiationsForAdQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<\n    NegotiationsForAdQuery,\n    NegotiationsForAdQueryVariables\n  >(NegotiationsForAdDocument, baseOptions);\n}\nexport type NegotiationsForAdQueryHookResult = ReturnType<\n  typeof useNegotiationsForAdQuery\n>;\nexport type NegotiationsForAdLazyQueryHookResult = ReturnType<\n  typeof useNegotiationsForAdLazyQuery\n>;\nexport type NegotiationsForAdQueryResult = Apollo.QueryResult<\n  NegotiationsForAdQuery,\n  NegotiationsForAdQueryVariables\n>;\nexport const AdsForUserDocument = gql`\n  query AdsForUser(\n    $offset: Int\n    $orderBy: QueryOrderBy\n    $limit: Int\n    $isActive: Boolean\n    $user: ID!\n  ) {\n    adsForUser(\n      offset: $offset\n      orderBy: $orderBy\n      limit: $limit\n      user: $user\n      isActive: $isActive\n    ) {\n      ads {\n        _id\n        postedBy {\n          _id\n          firstName\n          lastName\n          hideContact\n        }\n        needsFollowUp\n        harvest\n        abv\n        priceFrom\n        priceTo\n        ... on AdWine {\n          wineName\n          litersFrom\n          litersTo\n          metodoProduttivo\n          wine {\n            denominazioneZona\n            regione\n          }\n        }\n        typeAd\n        address {\n          regione\n          provincia\n          comune\n        }\n        activeNegotiations\n        numberViews\n        datePosted\n        isActive\n      }\n      pageCount\n    }\n  }\n`;\n\n/**\n * __useAdsForUserQuery__\n *\n * To run a query within a React component, call `useAdsForUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useAdsForUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAdsForUserQuery({\n *   variables: {\n *      offset: // value for 'offset'\n *      orderBy: // value for 'orderBy'\n *      limit: // value for 'limit'\n *      isActive: // value for 'isActive'\n *      user: // value for 'user'\n *   },\n * });\n */\nexport function useAdsForUserQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    AdsForUserQuery,\n    AdsForUserQueryVariables\n  >\n) {\n  return Apollo.useQuery<AdsForUserQuery, AdsForUserQueryVariables>(\n    AdsForUserDocument,\n    baseOptions\n  );\n}\nexport function useAdsForUserLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    AdsForUserQuery,\n    AdsForUserQueryVariables\n  >\n) {\n  return Apollo.useLazyQuery<AdsForUserQuery, AdsForUserQueryVariables>(\n    AdsForUserDocument,\n    baseOptions\n  );\n}\nexport type AdsForUserQueryHookResult = ReturnType<typeof useAdsForUserQuery>;\nexport type AdsForUserLazyQueryHookResult = ReturnType<\n  typeof useAdsForUserLazyQuery\n>;\nexport type AdsForUserQueryResult = Apollo.QueryResult<\n  AdsForUserQuery,\n  AdsForUserQueryVariables\n>;\nexport const AdPostedFollowUpDocument = gql`\n  subscription AdPostedFollowUp {\n    adPostedFollowUp {\n      _id\n      postedBy {\n        _id\n      }\n      harvest\n      abv\n      priceFrom\n      priceTo\n      ... on AdWine {\n        wineName\n        litersFrom\n        litersTo\n        metodoProduttivo\n        wine {\n          denominazioneZona\n          regione\n        }\n      }\n      typeAd\n      address {\n        regione\n        provincia\n        comune\n      }\n      activeNegotiations\n      numberViews\n      datePosted\n    }\n  }\n`;\n\n/**\n * __useAdPostedFollowUpSubscription__\n *\n * To run a query within a React component, call `useAdPostedFollowUpSubscription` and pass it any options that fit your needs.\n * When your component renders, `useAdPostedFollowUpSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAdPostedFollowUpSubscription({\n *   variables: {\n *   },\n * });\n */\nexport function useAdPostedFollowUpSubscription(\n  baseOptions?: Apollo.SubscriptionHookOptions<\n    AdPostedFollowUpSubscription,\n    AdPostedFollowUpSubscriptionVariables\n  >\n) {\n  return Apollo.useSubscription<\n    AdPostedFollowUpSubscription,\n    AdPostedFollowUpSubscriptionVariables\n  >(AdPostedFollowUpDocument, baseOptions);\n}\nexport type AdPostedFollowUpSubscriptionHookResult = ReturnType<\n  typeof useAdPostedFollowUpSubscription\n>;\nexport type AdPostedFollowUpSubscriptionResult = Apollo.SubscriptionResult<AdPostedFollowUpSubscription>;\nexport const AdRemovedDocument = gql`\n  subscription AdRemoved {\n    adRemoved {\n      _id\n    }\n  }\n`;\n\n/**\n * __useAdRemovedSubscription__\n *\n * To run a query within a React component, call `useAdRemovedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useAdRemovedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAdRemovedSubscription({\n *   variables: {\n *   },\n * });\n */\nexport function useAdRemovedSubscription(\n  baseOptions?: Apollo.SubscriptionHookOptions<\n    AdRemovedSubscription,\n    AdRemovedSubscriptionVariables\n  >\n) {\n  return Apollo.useSubscription<\n    AdRemovedSubscription,\n    AdRemovedSubscriptionVariables\n  >(AdRemovedDocument, baseOptions);\n}\nexport type AdRemovedSubscriptionHookResult = ReturnType<\n  typeof useAdRemovedSubscription\n>;\nexport type AdRemovedSubscriptionResult = Apollo.SubscriptionResult<AdRemovedSubscription>;\nexport const MessageSentDocument = gql`\n  subscription MessageSent {\n    messageSent {\n      ...MessageDetails\n    }\n  }\n  ${MessageDetailsFragmentDoc}\n`;\n\n/**\n * __useMessageSentSubscription__\n *\n * To run a query within a React component, call `useMessageSentSubscription` and pass it any options that fit your needs.\n * When your component renders, `useMessageSentSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMessageSentSubscription({\n *   variables: {\n *   },\n * });\n */\nexport function useMessageSentSubscription(\n  baseOptions?: Apollo.SubscriptionHookOptions<\n    MessageSentSubscription,\n    MessageSentSubscriptionVariables\n  >\n) {\n  return Apollo.useSubscription<\n    MessageSentSubscription,\n    MessageSentSubscriptionVariables\n  >(MessageSentDocument, baseOptions);\n}\nexport type MessageSentSubscriptionHookResult = ReturnType<\n  typeof useMessageSentSubscription\n>;\nexport type MessageSentSubscriptionResult = Apollo.SubscriptionResult<MessageSentSubscription>;\nexport const NegotiationCreatedDocument = gql`\n  subscription NegotiationCreated {\n    negotiationCreated {\n      ...NegotiationDetails\n    }\n  }\n  ${NegotiationDetailsFragmentDoc}\n`;\n\n/**\n * __useNegotiationCreatedSubscription__\n *\n * To run a query within a React component, call `useNegotiationCreatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useNegotiationCreatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNegotiationCreatedSubscription({\n *   variables: {\n *   },\n * });\n */\nexport function useNegotiationCreatedSubscription(\n  baseOptions?: Apollo.SubscriptionHookOptions<\n    NegotiationCreatedSubscription,\n    NegotiationCreatedSubscriptionVariables\n  >\n) {\n  return Apollo.useSubscription<\n    NegotiationCreatedSubscription,\n    NegotiationCreatedSubscriptionVariables\n  >(NegotiationCreatedDocument, baseOptions);\n}\nexport type NegotiationCreatedSubscriptionHookResult = ReturnType<\n  typeof useNegotiationCreatedSubscription\n>;\nexport type NegotiationCreatedSubscriptionResult = Apollo.SubscriptionResult<NegotiationCreatedSubscription>;\nexport const NegotiationClosedDocument = gql`\n  subscription NegotiationClosed {\n    negotiationClosed {\n      _id\n      postedBy {\n        _id\n      }\n      harvest\n      abv\n      priceFrom\n      priceTo\n      ... on AdWine {\n        wineName\n        litersFrom\n        litersTo\n        metodoProduttivo\n        wine {\n          denominazioneZona\n          regione\n        }\n      }\n      typeAd\n      address {\n        regione\n        provincia\n        comune\n      }\n      activeNegotiations\n      numberViews\n      datePosted\n    }\n  }\n`;\n\n/**\n * __useNegotiationClosedSubscription__\n *\n * To run a query within a React component, call `useNegotiationClosedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useNegotiationClosedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNegotiationClosedSubscription({\n *   variables: {\n *   },\n * });\n */\nexport function useNegotiationClosedSubscription(\n  baseOptions?: Apollo.SubscriptionHookOptions<\n    NegotiationClosedSubscription,\n    NegotiationClosedSubscriptionVariables\n  >\n) {\n  return Apollo.useSubscription<\n    NegotiationClosedSubscription,\n    NegotiationClosedSubscriptionVariables\n  >(NegotiationClosedDocument, baseOptions);\n}\nexport type NegotiationClosedSubscriptionHookResult = ReturnType<\n  typeof useNegotiationClosedSubscription\n>;\nexport type NegotiationClosedSubscriptionResult = Apollo.SubscriptionResult<NegotiationClosedSubscription>;\nexport const ReviewCreatedDocument = gql`\n  subscription ReviewCreated {\n    reviewCreated {\n      ...ReviewDetails\n    }\n  }\n  ${ReviewDetailsFragmentDoc}\n`;\n\n/**\n * __useReviewCreatedSubscription__\n *\n * To run a query within a React component, call `useReviewCreatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useReviewCreatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useReviewCreatedSubscription({\n *   variables: {\n *   },\n * });\n */\nexport function useReviewCreatedSubscription(\n  baseOptions?: Apollo.SubscriptionHookOptions<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >\n) {\n  return Apollo.useSubscription<\n    ReviewCreatedSubscription,\n    ReviewCreatedSubscriptionVariables\n  >(ReviewCreatedDocument, baseOptions);\n}\nexport type ReviewCreatedSubscriptionHookResult = ReturnType<\n  typeof useReviewCreatedSubscription\n>;\nexport type ReviewCreatedSubscriptionResult = Apollo.SubscriptionResult<ReviewCreatedSubscription>;\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { InMemoryCache, makeVar } from '@apollo/client';\nimport { Address, TypeAd, TypeProduct } from './generated/graphql';\n// import { offsetLimitPagination } from '@apollo/client/utilities';\nimport _ from 'lodash';\nexport const cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        ads: {\n          // Don't cache separate results based on\n          // any of this field's arguments.\n          keyArgs: ['wineName', 'typeProduct', 'typeAd'],\n          merge(existing, incoming, { args }) {\n            const merged = existing ? existing.ads.slice(0) : [];\n            if (args) {\n              // Assume an offset of 0 if args.offset omitted.\n              const { offset = 0 } = args;\n              for (let i = 0; i < incoming.ads.length; ++i) {\n                merged[(offset as number) + i] = incoming.ads[i];\n              }\n            } else {\n              // It's unusual (probably a mistake) for a paginated field not\n              // to receive any arguments, so you might prefer to throw an\n              // exception here, instead of recovering by appending incoming\n              // onto the existing array.\n              // eslint-disable-next-line prefer-spread\n              merged.push.apply(merged, incoming.ads);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return {\n              __typeName: 'AdsResult',\n              ads: merged,\n              pageCount: incoming.pageCount,\n            };\n          },\n        },\n        adsForUser: {\n          keyArgs: ['user'],\n          merge(existing = [], incoming) {\n            // const merged = existing ? existing.ads.slice(0) : [];\n            // if (args) {\n            //   // Assume an offset of 0 if args.offset omitted.\n            //   const { offset = 0 } = args;\n            //   for (let i = 0; i < incoming.ads.length; ++i) {\n            //     merged[(offset as number) + i] = incoming.ads[i];\n            //   }\n            // } else {\n            //   // It's unusual (probably a mistake) for a paginated field not\n            //   // to receive any arguments, so you might prefer to throw an\n            //   // exception here, instead of recovering by appending incoming\n            //   // onto the existing array.\n            //   // eslint-disable-next-line prefer-spread\n            //   merged.push.apply(merged, incoming.ads);\n            // }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return {\n              __typeName: 'AdsResult',\n              ads: _.unionBy(existing.ads, incoming.ads, '__ref'),\n              pageCount: incoming.pageCount,\n            };\n          },\n        },\n        messagesForNegotiation: {\n          keyArgs: ['negotiation'],\n          merge(existing, incoming, { args }) {\n            const merged = existing ? existing.messages.slice(0) : [];\n            if (args) {\n              // Assume an offset of 0 if args.offset omitted.\n              const { offset = 0 } = args;\n              for (let i = 0; i < incoming.messages.length; ++i) {\n                merged[(offset as number) + i] = incoming.messages[i];\n              }\n            } else {\n              // It's unusual (probably a mistake) for a paginated field not\n              // to receive any arguments, so you might prefer to throw an\n              // exception here, instead of recovering by appending incoming\n              // onto the existing array.\n              // eslint-disable-next-line prefer-spread\n              merged.push.apply(merged, incoming.messages);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return {\n              __typeName: 'MessageResult',\n              messages: merged,\n              pageCount: incoming.pageCount,\n            };\n          },\n        },\n        negotiations: {\n          keyArgs: false,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          //@ts-ignore\n          merge(existing = [], incoming) {\n            // const merged = existing ? existing.negotiations.slice(0) : [];\n            // if (args && !args.isConcluded) {\n            //   // Assume an offset of 0 if args.offset omitted.\n            //   const { offset = 0 } = args;\n            //   for (let i = 0; i < incoming.negotiations.length; ++i) {\n            //     merged[(offset as number) + i] = incoming.negotiations[i];\n            //   }\n            // } else {\n            //   // It's unusual (probably a mistake) for a paginated field not\n            //   // to receive any arguments, so you might prefer to throw an\n            //   // exception here, instead of recovering by appending incoming\n            //   // onto the existing array.\n            //   // eslint-disable-next-line prefer-spread\n            //   console.log(merged, incoming.negotiations);\n            //   const negs = _.unionBy(merged, incoming.negotiations, '__ref');\n            //   console.log(negs  );\n            //   // merged.push(...negs);\n            // }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return {\n              __typeName: 'NegotiationResult',\n              negotiations: _.unionBy(\n                existing.negotiations,\n                incoming.negotiations,\n                '__ref'\n              ),\n              pageCount: incoming.pageCount,\n            };\n          },\n        },\n        isLoggedIn: {\n          read() {\n            return isLoggedInVar();\n          },\n        },\n        notification: {\n          read() {\n            return notification();\n          },\n        },\n        searchedWine: {\n          read() {\n            return searchedWine();\n          },\n        },\n        myInfo: {\n          read() {\n            return myInfo();\n          },\n        },\n      },\n    },\n  },\n});\n\nexport const isLoggedInVar = makeVar<boolean>(\n  !!localStorage.getItem('wineapp-user-token')\n);\n\ntype AddressMyInfo = Omit<Address, 'via'>;\n\nexport const myInfo = makeVar<{\n  _id: string | null;\n  firstName?: string;\n  address?: AddressMyInfo;\n} | null>({ _id: localStorage.getItem('wineapp-user-id') });\n\ntype AlertStatus = 'success' | 'warning' | 'error' | 'info' | undefined;\n\ninterface WineSearched {\n  typeAd: TypeAd;\n  typeProduct: TypeProduct;\n  wineName: string;\n  harvest: number;\n  abv: number;\n  price: number;\n  liters: number;\n  isPost: boolean;\n}\n\nexport const searchedWine = makeVar<WineSearched | undefined>(undefined);\n\ninterface Notification {\n  type: AlertStatus;\n  message: string;\n}\n\nexport const notification = makeVar<Notification | undefined>(undefined);\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { ApolloCache, ApolloClient, MutationResult } from '@apollo/client';\nimport _ from 'lodash';\nimport { DeepExtractType } from 'ts-deep-extract-types';\nimport { myInfo, searchedWine } from '../cache';\nimport {\n  AdsWineDocument,\n  AdWine,\n  CreateAdWineMutation,\n  CreateMessageMutation,\n  CreateNegotiationMutation,\n  CreateReviewMutation,\n  MeDocument,\n  Message,\n  MessagesDocument,\n  MessagesNegotiationDocument,\n  Negotiation,\n  NegotiationsDocument,\n  Review,\n  User,\n} from '../generated/graphql';\n\ninterface IAds {\n  ads: Array<AdWine>;\n  pageCount: number;\n}\n\ninterface ICachedDataAds {\n  ads: IAds;\n}\n\nexport interface ICachedMe {\n  me: User;\n}\n\nexport interface ICachedDataNegotiations {\n  negotiations: {\n    negotiations: Negotiation[];\n    pageCount: number;\n  };\n}\n\nexport interface ICachedMessages {\n  messages: Message[];\n}\n\nexport interface ICachedMessagesNegs {\n  messagesForNegotiation: {\n    messages: Message[];\n    pageCount: number;\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const updateCacheNegotiations = (\n  client: ApolloClient<{}> | ApolloCache<CreateNegotiationMutation>,\n  negotiation: MutationResult<\n    DeepExtractType<\n      CreateNegotiationMutation,\n      ['createNegotiation']\n    >['response']\n  >['data']\n): void => {\n  const cachedDataMeLocal: ICachedMe | null = _.cloneDeep(\n    //@ts-expect-error error\n    client.readQuery({\n      query: MeDocument,\n      variables: {},\n    })\n  );\n  const cachedDataNegotiationsLocal: ICachedDataNegotiations | null = _.cloneDeep(\n    //@ts-expect-error error\n    client.readQuery({\n      query: NegotiationsDocument,\n      variables: {},\n    })\n  );\n\n  cachedDataMeLocal?.me.negotiations?.push(negotiation as Negotiation);\n\n  //@ts-expect-error error\n  client.writeQuery({\n    query: MeDocument,\n    variables: {},\n    data: cachedDataMeLocal,\n  });\n\n  if (!cachedDataNegotiationsLocal) return;\n  cachedDataNegotiationsLocal.negotiations.negotiations.push(\n    negotiation as Negotiation\n  );\n  cachedDataNegotiationsLocal.negotiations.pageCount += 1;\n  //@ts-expect-error error\n  client.writeQuery({\n    query: NegotiationsDocument,\n    variables: {},\n    data: cachedDataNegotiationsLocal,\n  });\n};\n\nexport const updateCacheMessagesAdmin = (\n  client: ApolloClient<{}>,\n  negotiation: MutationResult<\n    DeepExtractType<CreateAdWineMutation, ['createAd']>['response']\n  >['data']\n): void => {\n  const cachedDataMessagesLocal: ICachedMessages | null = _.cloneDeep(\n    client.readQuery({\n      query: MessagesDocument,\n    })\n  );\n  const me = myInfo();\n  cachedDataMessagesLocal?.messages.push({\n    isViewed: false,\n    content: 'placeholder',\n    negotiation: { _id: '605bd4166edd1f04a7764462' } as Negotiation,\n    _id: 'placeholder',\n    sentTo: { _id: me?._id } as User,\n    sentBy: { firstName: 'Amministratore' } as User,\n    dateSent: new Date().toISOString(),\n  });\n  client.writeQuery({\n    query: MessagesDocument,\n    data: cachedDataMessagesLocal,\n  });\n\n  const cachedDataMeLocal: ICachedMe | null = _.cloneDeep(\n    client.readQuery({\n      query: MeDocument,\n    })\n  );\n  const indexNegToClose = cachedDataMeLocal?.me.negotiations?.findIndex(\n    (neg) => neg.ad._id === negotiation?._id\n  );\n  if (\n    indexNegToClose &&\n    indexNegToClose >= 0 &&\n    cachedDataMeLocal?.me.negotiations\n  ) {\n    cachedDataMeLocal.me.negotiations[indexNegToClose].isConcluded = true;\n  }\n  client.writeQuery({\n    query: MeDocument,\n    data: cachedDataMeLocal,\n  });\n  const cachedDataNegotiationsLocal: ICachedDataNegotiations | null = _.cloneDeep(\n    client.readQuery({\n      query: NegotiationsDocument,\n    })\n  );\n  if (!cachedDataNegotiationsLocal) return;\n  cachedDataNegotiationsLocal?.negotiations.negotiations.filter(\n    (neg) => neg.ad._id !== negotiation?._id\n  );\n  client.writeQuery({\n    query: NegotiationsDocument,\n    data: cachedDataNegotiationsLocal,\n  });\n};\n\nexport const updateCacheAd = (\n  cache: ApolloCache<CreateAdWineMutation>,\n  ad: MutationResult<\n    DeepExtractType<CreateAdWineMutation, ['createAd']>['response']\n  >['data']\n): void => {\n  const searchedWineCache = searchedWine();\n  const variablesCacheUpdate = {\n    wineName: searchedWineCache?.wineName,\n    typeProduct: searchedWineCache?.typeProduct,\n    typeAd: searchedWineCache?.typeAd,\n  };\n  const cachedDataAdsLocal: ICachedDataAds | null = _.cloneDeep(\n    cache.readQuery({\n      query: AdsWineDocument,\n      variables: variablesCacheUpdate,\n    })\n  );\n  const cachedDataMeLocal: ICachedMe | null = _.cloneDeep(\n    cache.readQuery({\n      query: MeDocument,\n    })\n  );\n\n  cachedDataMeLocal?.me.ads?.push(ad as AdWine);\n\n  cache.writeQuery({\n    query: MeDocument,\n    data: cachedDataMeLocal,\n  });\n\n  if (!cachedDataAdsLocal) return;\n  cachedDataAdsLocal.ads.ads.push(ad as AdWine);\n  cachedDataAdsLocal.ads.pageCount += 1;\n  cache.writeQuery({\n    query: AdsWineDocument,\n    variables: variablesCacheUpdate,\n    data: cachedDataAdsLocal,\n  });\n};\n\nexport const updateCacheMessages = (\n  client: ApolloClient<object>,\n  message: MutationResult<\n    DeepExtractType<CreateMessageMutation, ['createMessage']>['response']\n  >['data']\n): void => {\n  const cachedDataMeLocal: ICachedMe | null = _.cloneDeep(\n    client.readQuery({\n      query: MeDocument,\n    })\n  );\n  cachedDataMeLocal?.me.messages?.push(message as Message);\n  client.writeQuery({\n    query: MeDocument,\n    data: cachedDataMeLocal,\n  });\n  const cachedMessagesLocal: ICachedMessages | null = _.cloneDeep(\n    client.readQuery({\n      query: MessagesDocument,\n    })\n  );\n  cachedMessagesLocal?.messages.push(message as Message);\n  client.writeQuery({\n    query: MessagesDocument,\n    variables: { id: message?.negotiation._id },\n    data: cachedMessagesLocal,\n  });\n  const cachedMessagesNegotiationsLocal: ICachedMessagesNegs | null = _.cloneDeep(\n    client.readQuery({\n      query: MessagesNegotiationDocument,\n      variables: { id: message?.negotiation._id },\n    })\n  );\n  cachedMessagesNegotiationsLocal?.messagesForNegotiation.messages.unshift(\n    message as Message\n  );\n  client.writeQuery({\n    query: MessagesNegotiationDocument,\n    variables: { id: message?.negotiation._id },\n    data: cachedMessagesNegotiationsLocal,\n  });\n};\n\nexport const updateCacheReview = (\n  client: ApolloClient<object>,\n  review: MutationResult<\n    DeepExtractType<CreateReviewMutation, ['createReview']>['response']\n  >['data']\n) => {\n  const cachedDataMeLocal: ICachedMe | null = _.cloneDeep(\n    client.readQuery({\n      query: MeDocument,\n    })\n  );\n  cachedDataMeLocal?.me.reviews?.push(review as Review);\n  client.writeQuery({\n    query: MeDocument,\n    data: cachedDataMeLocal,\n  });\n};\n","import * as React from 'react';\nimport { isLoggedInVar, myInfo } from '../cache';\nimport { useApolloClient } from '@apollo/client';\n// import Button from '@material-ui/core/Button';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nexport const LogoutButton: React.FC = () => {\n  const client = useApolloClient();\n  const handleCLick = () => {\n    client.cache.gc();\n\n    // Remove user details from localStorage.\n    localStorage.removeItem('wineapp-user-token');\n    localStorage.removeItem('wineapp-user-id');\n\n    //localStorage.removeItem('userId');\n\n    // Let other parts of the application that are relying on logged in\n    // state know we're now logged out.\n    isLoggedInVar(false);\n    myInfo(null);\n  };\n  return (\n    <div onClick={handleCLick}>\n      <Divider />\n      <ListItem button>\n        <ListItemIcon data-testid='logout-button'>\n          <ExitToAppIcon />\n        </ListItemIcon>\n        <ListItemText primary='Esci' />\n      </ListItem>\n    </div>\n  );\n};\n","import { grey } from '@material-ui/core/colors';\nimport { makeStyles, Theme, createStyles, withStyles } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\n\nexport const useStyles = makeStyles(\n  (theme: Theme) =>\n    createStyles({\n      backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n      },\n      paper: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n      },\n      buyButton: {\n        color: theme.palette.primary.main,\n        backgroundColor: grey[50],\n        '&:hover': {\n          backgroundColor: grey[100],\n        },\n      },\n      sellButton: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: theme.palette.primary.dark,\n        },\n        '&:disabled': {\n          color: '#fefefe',\n          backgroundColor: theme.palette.secondary.light,\n        },\n      },\n      buyHome: {\n        '&:hover': {\n          backgroundColor: 'rgb(100, 10, 40)',\n        },\n      },\n      sellHome: {\n        '&:hover': {\n          backgroundColor: 'rgb(250, 250, 241)',\n        },\n      },\n      cruiseHome: {\n        '&:hover': {\n          backgroundColor: 'rgb(250, 232, 250)',\n        },\n      },\n    }),\n  { index: 1 }\n);\n\nexport const useStylesForms = makeStyles(\n  (theme: Theme) => ({\n    paper: {\n      marginTop: theme.spacing(4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    form: {\n      borderRadius: 16,\n      color: '#fff',\n      margin: 6,\n      padding: 6,\n      backgroundColor: '#6d1331',\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(4),\n    },\n    submit: {\n      color: theme.palette.primary.main,\n      backgroundColor: grey[50],\n      '&:hover': {\n        backgroundColor: grey[100],\n      },\n      margin: theme.spacing(3, 0, 2),\n      display: 'flex',\n      alignItems: 'center',\n    },\n    formSell: {\n      borderRadius: 16,\n      borderColor: '#6d1331',\n      borderStyle: 'solid',\n      borderWidth: '1px',\n      color: '#6d1331',\n      margin: 6,\n      padding: 6,\n      backgroundColor: '#fff',\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(4),\n    },\n    submitSell: {\n      color: '#fff',\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n      },\n      '&:disabled': {\n        color: '#fefefe',\n        backgroundColor: theme.palette.secondary.light,\n      },\n      margin: theme.spacing(3, 0, 2),\n      display: 'flex',\n      alignItems: 'center',\n    },\n\n    input: {\n      color: 'white',\n    },\n    inputSell: {\n      color: '#6d1331',\n    },\n    underline: {\n      color: 'white',\n      '&:before': {\n        borderBottom: '1px solid white',\n      },\n      '&&&&:hover:before': {\n        borderBottom: '2px solid white',\n      },\n      '&:after': {\n        borderBottom: '3px solid white',\n      },\n      disabled: {},\n      focused: {},\n      error: {},\n    },\n    underlineSell: {\n      color: '#6d1331',\n      '&:before': {\n        borderBottom: '1px solid #6d1331',\n      },\n      '&&&&:hover:before': {\n        borderBottom: '2px solid #6d1331',\n      },\n      '&:after': {\n        borderBottom: '3px solid #6d1331',\n      },\n      disabled: {},\n      focused: {},\n      error: {},\n    },\n  }),\n  { index: 1 }\n);\n\nexport const useStyleRating = makeStyles(\n  () => ({\n    root: {\n      width: 250,\n      display: 'flex',\n      alignItems: 'center',\n    },\n    list: {\n      width: 250,\n    },\n    bottomPush: {\n      width: 250,\n      position: 'fixed',\n      bottom: 0,\n      textAlign: 'center',\n      paddingBottom: 10,\n    },\n  }),\n  { index: 1 }\n);\n\nexport const StyledRating = withStyles({\n  iconFilled: {\n    color: '#6d1331',\n  },\n  iconHover: {\n    color: '#6d1331',\n  },\n})(Rating);\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Badge from '@material-ui/core/Badge';\nimport StoreIcon from '@material-ui/icons/Store';\nimport Typography from '@material-ui/core/Typography';\nimport { ApolloError } from '@apollo/client';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { Link as RouterLink } from '@reach/router';\nimport { LogoutButton } from '../../containers/LogoutButton';\nimport { useStyleRating, StyledRating } from '../../utils/styleHook';\nimport Link from '@material-ui/core/Link';\n\nexport interface DrawerData {\n  isLoading: boolean;\n  error?: ApolloError;\n  data?: {\n    numAds?: number | null;\n    numOpenNegs?: number | null;\n    numClosedNegs?: number | null;\n    savedAds?: number | null;\n    name?: string | null;\n    rating?: number | null;\n  };\n}\n\nexport const Drawer: React.FC<{\n  state: boolean;\n  toggleDrawer: () => void;\n  data: DrawerData;\n}> = ({ state, toggleDrawer, data }) => {\n  const classes = useStyleRating();\n  const list = () => (\n    <div\n      className={classes.list}\n      role='presentation'\n      onClick={toggleDrawer}\n      onKeyDown={toggleDrawer}\n    >\n      <Box component='fieldset' mb={3} pt={3} borderColor='transparent'>\n        <Avatar>\n          <AccountCircleIcon />\n        </Avatar>\n        <Typography color='primary' component='h1'>\n          {data.data?.name}\n        </Typography>\n        <Link component={RouterLink} to='/recensioni'>\n          <div className={classes.root}>\n            <StyledRating\n              name='read-only'\n              value={data?.data?.rating}\n              readOnly\n              precision={0.1}\n            />\n            <Box>{data?.data?.rating ? `(${data?.data?.rating})` : null}</Box>\n          </div>\n        </Link>\n      </Box>\n      <Divider />\n      <List>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountCircleIcon />\n          </ListItemIcon>\n          <ListItemText primary='Profilo' />\n        </ListItem>\n        <ListItem\n          button\n          // eslint-disable-next-line react/display-name\n          component={React.forwardRef((itemProps, ref) => (\n            //@ts-expect-error followed MUI docs\n            <RouterLink to={'/creati'} ref={ref} {...itemProps} />\n          ))}\n        >\n          <ListItemIcon>\n            <Badge badgeContent={data.data?.numAds} color='primary'>\n              <AssignmentIcon />\n            </Badge>\n          </ListItemIcon>\n          <ListItemText primary='Annunci pubblicati' />\n        </ListItem>\n        <ListItem\n          button\n          // eslint-disable-next-line react/display-name\n          component={React.forwardRef((itemProps, ref) => (\n            //@ts-expect-error followed MUI docs\n            <RouterLink to={'/trattative'} ref={ref} {...itemProps} />\n          ))}\n        >\n          <ListItemIcon>\n            <Badge badgeContent={data.data?.numOpenNegs} color='primary'>\n              <StoreIcon />\n            </Badge>\n          </ListItemIcon>\n          <ListItemText primary='Trattative in corso' />\n        </ListItem>\n        <ListItem\n          button\n          // eslint-disable-next-line react/display-name\n          component={React.forwardRef((itemProps, ref) => (\n            //@ts-expect-error followed MUI docs\n            <RouterLink to={'/salvati'} ref={ref} {...itemProps} />\n          ))}\n        >\n          <ListItemIcon>\n            <Badge badgeContent={data.data?.savedAds} color='primary'>\n              <FavoriteIcon />\n            </Badge>\n          </ListItemIcon>\n          <ListItemText primary='Annunci salvati' />\n        </ListItem>\n        <Divider />\n        <div className={classes.bottomPush}>\n          <LogoutButton />\n        </div>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <SwipeableDrawer\n        anchor='left'\n        open={state}\n        onClose={toggleDrawer}\n        onOpen={toggleDrawer}\n      >\n        {list()}\n      </SwipeableDrawer>\n    </div>\n  );\n};\n","import { useApolloClient } from '@apollo/client';\nimport Alert from '@material-ui/lab/Alert';\n\nimport * as React from 'react';\nimport { notification } from '../cache';\nimport { useNotificationQuery } from '../generated/graphql';\n\nexport const Notification: React.FC = () => {\n  const client = useApolloClient();\n  const onClose = () => {\n    notification(undefined);\n    setIsVisible(false);\n    client.cache.gc();\n  };\n  const { data, loading, error } = useNotificationQuery();\n  const [isVisible, setIsVisible] = React.useState(false);\n  const timeoutId = React.useRef<number | undefined>(undefined);\n  React.useEffect(() => {\n    if (data && !loading) {\n      setIsVisible(true);\n    }\n    clearTimeout(timeoutId.current);\n  }, [data, loading]);\n\n  React.useEffect(() => {\n    if (isVisible) {\n      timeoutId.current = window.setTimeout(() => {\n        onClose();\n      }, 10000);\n    }\n  }, [isVisible, data?.notification?.message]);\n\n  if (!isVisible || error) {\n    return null;\n  }\n  return (\n    <Alert severity={data?.notification?.type} onClose={onClose}>\n      {data?.notification?.message}\n    </Alert>\n  );\n};\n","import * as React from 'react';\nimport { useField } from 'formik';\nimport TextFieldMaterial from '@material-ui/core/TextField';\n\ninterface Props {\n  name: string;\n  placeholder: string;\n  label: string;\n  type: string;\n  min?: string;\n  max?: string;\n  step?: string;\n  multiline?: boolean;\n  class?: string;\n  inputTextColor?: string;\n  labelTextColor?: string;\n  underlineColor?: string;\n}\nexport const TextField: React.FC<Props> = (props) => {\n  const [field, { error, touched }] = useField({\n    name: props.name,\n    type: props.type,\n  });\n  return (\n    <TextFieldMaterial\n      {...field}\n      fullWidth\n      InputLabelProps={{\n        style: { color: props.labelTextColor },\n      }}\n      multiline={props.multiline}\n      type={props.type}\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      className={props.class}\n      InputProps={{\n        className: props.inputTextColor,\n        classes: {\n          underline: props.underlineColor,\n        },\n      }}\n      inputProps={{\n        'aria-label': props.name,\n        min: props.min,\n        max: props.max,\n        step: props.step,\n      }}\n      error={error !== undefined && touched}\n      data-testid={props.name}\n      placeholder={props.placeholder}\n      label={props.label}\n      helperText={error}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useField } from 'formik';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport const PasswordField: React.FC<{\n  name: string;\n  underlineColor?: string;\n}> = ({ name, underlineColor }) => {\n  const [show, setShow] = React.useState<boolean>(false);\n  const handleClick = (): void => setShow(!show);\n  const [field, { error, touched }] = useField({\n    name: name,\n    type: show ? 'text' : 'password',\n  });\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n  };\n  return (\n    <FormControl error={touched && error !== undefined} fullWidth>\n      <InputLabel\n        style={{ color: '#6d1331' }}\n        htmlFor='standard-adornment-password'\n      >\n        Password\n      </InputLabel>\n      <Input\n        {...field}\n        inputProps={{ 'aria-label': name, 'data-testid': name }}\n        type={show ? 'text' : 'password'}\n        style={{ color: '#6d1331' }}\n        classes={{\n          underline: underlineColor,\n        }}\n        endAdornment={\n          <InputAdornment position='end'>\n            <IconButton\n              aria-label='toggle password visibility'\n              onClick={handleClick}\n              onMouseDown={handleMouseDownPassword}\n            >\n              {show ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n      <FormHelperText>{error}</FormHelperText>\n    </FormControl>\n  );\n};\n","import { Form, Formik } from 'formik';\nimport * as React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '../FormFields/TextField';\nimport { PasswordField } from '../FormFields/PasswordField';\nimport * as Yup from 'yup';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LinkMUI from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { Link } from '@reach/router';\n\nexport interface LoginData {\n  email: string;\n  password: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  input: {\n    color: '#6d1331',\n  },\n  underline: {\n    '&:before': {\n      borderBottom: '1px solid #6d1331',\n    },\n    '&&&&:hover:before': {\n      borderBottom: '2px solid #6d1331',\n    },\n    '&:after': {\n      borderBottom: '3px solid #6d1331',\n    },\n    disabled: {},\n    focused: {},\n    error: {},\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const LoginForm: React.FC<{\n  onSubmit: (values: LoginData) => void;\n  onClose: () => void;\n}> = ({ onSubmit, onClose }) => {\n  const initialValues = { password: '', email: '' };\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      validationSchema={Yup.object({\n        email: Yup.string().email('Invalid email address').required('Required'),\n        password: Yup.string().required('Required'),\n      })}\n    >\n      {({ isValid, dirty }) => {\n        const classes = useStyles();\n        return (\n          <Container component='main'>\n            <CssBaseline />\n            <div className={classes.paper}>\n              <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component='h1' variant='h5'>\n                Sign in\n              </Typography>\n              <Form className={classes.form}>\n                <TextField\n                  name='email'\n                  type='email'\n                  label='Email'\n                  placeholder='Email address'\n                  underlineColor={classes.underline}\n                  labelTextColor={'#6d1331'}\n                  inputTextColor={classes.input}\n                />\n\n                <PasswordField\n                  name='password'\n                  underlineColor={classes.underline}\n                />\n                <Button\n                  //isLoading={isValidating || isSubmitting}\n                  type='submit'\n                  disabled={!dirty || !isValid}\n                  fullWidth\n                  variant='contained'\n                  color='primary'\n                  className={classes.submit}\n                >\n                  Submit\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <LinkMUI href='#' variant='body2'>\n                      Forgot password?\n                    </LinkMUI>\n                  </Grid>\n                  <Grid item>\n                    <LinkMUI\n                      component={Link}\n                      to='/signup'\n                      variant='body2'\n                      onClick={onClose}\n                    >\n                      {\"Don't have an account? Sign Up\"}\n                    </LinkMUI>\n                  </Grid>\n                </Grid>\n              </Form>\n            </div>\n          </Container>\n        );\n      }}\n    </Formik>\n  );\n};\n","import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { LoginForm } from './LoginForm';\nexport interface LoginData {\n  email: string;\n  password: string;\n}\nexport const LoginModal: React.FC<{\n  onSubmit: (values: LoginData) => void;\n  handleClose: () => void;\n  open: boolean;\n}> = ({ handleClose, open, onSubmit }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby='form-dialog-title'\n    >\n      <DialogContent>\n        <LoginForm onSubmit={onSubmit} onClose={handleClose} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color='primary'>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import * as React from 'react';\nimport {\n  MeQuery,\n  Exact,\n  useIsUserLoggedInQuery,\n} from '../../generated/graphql';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Drawer, DrawerData } from './Drawer';\nimport { Notification } from '../Notification';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport { LoginModal } from '../LoginModal';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink, navigate } from '@reach/router';\nimport Box from '@material-ui/core/Box';\nimport { LazyQueryResult } from '@apollo/client';\nimport { Badge } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nexport const HeaderBar: React.FC<{\n  meQueryResult: LazyQueryResult<\n    MeQuery,\n    Exact<{\n      [key: string]: never;\n    }>\n  >;\n  onSubmitLogin: ({\n    email,\n    password,\n  }: {\n    email: string;\n    password: string;\n  }) => Promise<void>;\n}> = ({ meQueryResult, onSubmitLogin }) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState(false);\n  const toggleDrawer = () => {\n    setState(!state);\n  };\n  const [openModal, setOpenModal] = React.useState(false);\n  const badgeNumber = meQueryResult.data?.me?.messages?.length\n    ? meQueryResult.data?.me?.messages?.filter(\n        (message) =>\n          !message.isViewed &&\n          message.sentBy._id !== meQueryResult.data?.me?._id\n      ).length\n    : 0;\n  const handleClickOpen = () => {\n    setOpenModal(true);\n  };\n\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n  const onSubmit = async ({\n    email,\n    password,\n  }: {\n    email: string;\n    password: string;\n  }) => {\n    await onSubmitLogin({\n      email: email,\n      password: password,\n    });\n    handleClose();\n  };\n  const loggedUser = useIsUserLoggedInQuery();\n  const myReviews = meQueryResult.data?.me?.reviews?.length\n    ? meQueryResult.data?.me?.reviews?.filter(\n        (r) => r.forUser._id === meQueryResult.data?.me?._id\n      )\n    : null;\n  const reducedReview = myReviews?.length\n    ? //@ts-expect-error I didn't understand the error????\n      myReviews.reduce((acc, val) => ({\n        rating: val.rating + acc.rating,\n      }))\n    : null;\n\n  const rating = reducedReview\n    ? reducedReview.rating / (myReviews?.length as number)\n    : null;\n  const drawerData: DrawerData = {\n    isLoading: meQueryResult.loading,\n    error: meQueryResult.error,\n    data: {\n      numAds: meQueryResult.data?.me?.ads?.length,\n      numOpenNegs: meQueryResult.data?.me?.negotiations?.filter(\n        (neg) => neg && !neg.isConcluded\n      ).length,\n      numClosedNegs: meQueryResult.data?.me?.negotiations?.filter(\n        (neg) => neg && neg.isConcluded\n      ).length,\n      savedAds: meQueryResult.data?.me?.savedAds?.length,\n      name: meQueryResult.data?.me?.firstName,\n      // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      //@ts-ignore\n      rating,\n    },\n  };\n\n  const SigninButton = () => {\n    if (loggedUser.data?.isLoggedIn) {\n      return (\n        <IconButton onClick={() => navigate('/messaggi')}>\n          <Badge badgeContent={badgeNumber} color='secondary'>\n            <ChatOutlinedIcon fontSize='large' style={{ color: '#fff' }} />\n          </Badge>\n        </IconButton>\n      );\n    }\n    return <Button onClick={handleClickOpen}>Log in</Button>;\n  };\n\n  const MenuButton = () => (\n    <IconButton\n      edge='start'\n      className={classes.menuButton}\n      color='inherit'\n      aria-label='menu'\n      onClick={toggleDrawer}\n    >\n      <MenuIcon />\n    </IconButton>\n  );\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          {loggedUser.data?.isLoggedIn ? MenuButton() : null}\n          <Drawer state={state} toggleDrawer={toggleDrawer} data={drawerData} />\n          <Link\n            className={classes.title}\n            component={RouterLink}\n            to='/'\n            style={{ textDecoration: 'none' }}\n          >\n            <Box>\n              <Typography color='textSecondary' variant='h4'>\n                LOGO\n              </Typography>\n            </Box>\n          </Link>\n          <SigninButton />\n        </Toolbar>\n      </AppBar>\n      <Notification />\n      <LoginModal\n        handleClose={handleClose}\n        open={openModal}\n        onSubmit={onSubmit}\n      />\n    </div>\n  );\n};\n","import { useApolloClient } from '@apollo/client';\nimport * as React from 'react';\nimport { isLoggedInVar, myInfo, notification } from '../../cache';\nimport {\n  useNegotiationCreatedSubscription,\n  useNegotiationClosedSubscription,\n  useAdPostedFollowUpSubscription,\n  useMessageSentSubscription,\n  useIsUserLoggedInQuery,\n  useReviewCreatedSubscription,\n  useLoginMutation,\n  useMeLazyQuery,\n  Address,\n} from '../../generated/graphql';\nimport {\n  updateCacheMessages,\n  updateCacheMessagesAdmin,\n  updateCacheNegotiations,\n  updateCacheReview,\n} from '../../utils/updateCache';\nimport { HeaderBar } from './AppBar';\n\nexport const Header: React.FC = () => {\n  const loggedUser = useIsUserLoggedInQuery();\n  const client = useApolloClient();\n  const [lazyQuery, result] = useMeLazyQuery({\n    onCompleted: (data) => {\n      if (data.me) {\n        myInfo({\n          ...data.me,\n        });\n      }\n    },\n    onError: (error) => {\n      notification({\n        type: 'error',\n        message: error.message,\n      });\n    },\n  });\n  React.useEffect(() => {\n    if (loggedUser.data?.isLoggedIn) {\n      lazyQuery();\n    }\n  }, [loggedUser.data?.isLoggedIn]);\n\n  const [loginMutation] = useLoginMutation({\n    onError: (error) =>\n      notification({\n        type: 'error',\n        message: error.message,\n      }),\n    onCompleted: ({ login }) => {\n      if (login?.errors?.length === 0) {\n        localStorage.setItem(\n          'wineapp-user-token',\n          login?.response?.token as string\n        );\n        localStorage.setItem(\n          'wineapp-user-id',\n          login?.response?.user._id as string\n        );\n        isLoggedInVar(true);\n        notification({\n          type: 'success',\n          message: 'welcome back',\n        });\n        myInfo({\n          _id: login.response?.user._id as string,\n          firstName: login.response?.user.firstName as string,\n          address: login.response?.user.address as Address,\n        });\n      }\n      if (login?.errors?.length) {\n        notification({\n          type: 'error',\n          message: 'errore',\n        });\n      }\n    },\n  });\n  const onSubmitLogin = async ({\n    email,\n    password,\n  }: {\n    email: string;\n    password: string;\n  }) => {\n    await loginMutation({\n      variables: {\n        email: email,\n        password: password,\n      },\n    });\n  };\n  useNegotiationCreatedSubscription({\n    onSubscriptionData: ({ subscriptionData }) => {\n      notification({\n        type: 'success',\n        message: 'qualcuno ha aperto una trattativa con te',\n      });\n\n      updateCacheNegotiations(\n        client,\n        subscriptionData.data?.negotiationCreated\n      );\n    },\n  });\n  useNegotiationClosedSubscription({\n    onSubscriptionData: ({ subscriptionData }) => {\n      updateCacheMessagesAdmin(\n        client,\n        subscriptionData.data?.negotiationClosed\n      );\n      const wineName =\n        subscriptionData.data?.negotiationClosed.__typename === 'AdWine' &&\n        subscriptionData.data?.negotiationClosed.wineName;\n      notification({\n        type: 'info',\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        message: `Una tua trattiva e stata dichiarata chiusa per il vino ${wineName}`,\n      });\n    },\n  });\n  useAdPostedFollowUpSubscription({\n    onSubscriptionData: () => {\n      notification({\n        type: 'info',\n        message: 'Qualcuno ha pubblicato un annuncio che ti interessa',\n      });\n    },\n  });\n  useMessageSentSubscription({\n    onSubscriptionData: ({ subscriptionData }) => {\n      updateCacheMessages(client, subscriptionData.data?.messageSent);\n    },\n  });\n  useReviewCreatedSubscription({\n    onSubscriptionData: ({ subscriptionData }) => {\n      const review = subscriptionData.data?.reviewCreated || null;\n      if (!review) return;\n      notification({\n        type: 'info',\n        message: `La cantina ${review.createdBy.firstName} ti ha lasciato una recensione`,\n      });\n      updateCacheReview(client, review);\n    },\n  });\n  return <HeaderBar meQueryResult={result} onSubmitLogin={onSubmitLogin} />;\n};\n","import { Regioni } from '../../generated/graphql';\n\nexport const optionsRegioni = [\n  {\n    value: Regioni.Abruzzo,\n    label: 'Abruzzo',\n  },\n  {\n    value: Regioni.Basilicata,\n    label: 'Basilicata',\n  },\n  {\n    value: Regioni.Calabria,\n    label: 'Calabria',\n  },\n  {\n    value: Regioni.Campania,\n    label: 'Campania',\n  },\n  {\n    value: Regioni.Emilia,\n    label: 'Emilia Romagna',\n  },\n  {\n    value: Regioni.Friuli,\n    label: 'Friuli Venezia Giulia',\n  },\n  {\n    value: Regioni.Lazio,\n    label: 'Lazio',\n  },\n  {\n    value: Regioni.Liguria,\n    label: 'Liguria',\n  },\n  {\n    value: Regioni.Lombardia,\n    label: 'Lombardia',\n  },\n  {\n    value: Regioni.Marche,\n    label: 'Marche',\n  },\n  {\n    value: Regioni.Molise,\n    label: 'Molise',\n  },\n  {\n    value: Regioni.Piemonte,\n    label: 'Piemonte',\n  },\n  {\n    value: Regioni.Puglia,\n    label: 'Puglia',\n  },\n  {\n    value: Regioni.Sardegna,\n    label: 'Sardegna',\n  },\n  {\n    value: Regioni.Sicilia,\n    label: 'Sicilia',\n  },\n  {\n    value: Regioni.Toscana,\n    label: 'Toscana',\n  },\n  {\n    value: Regioni.Trentino,\n    label: 'Trentino Alto Adige',\n  },\n  {\n    value: Regioni.Umbria,\n    label: 'Umbria',\n  },\n  {\n    value: Regioni.Valdaosta,\n    label: \"Valle d'Aosta\",\n  },\n  {\n    value: Regioni.Veneto,\n    label: 'Veneto',\n  },\n];\n","import passwordValidator from 'password-validator';\n\nconst schema = new passwordValidator();\n\nschema\n  .is()\n  .min(8) // Minimum length 8\n  .is()\n  .max(100) // Maximum length 100\n  .has()\n  .uppercase() // Must have uppercase letters\n  .has()\n  .lowercase() // Must have lowercase letters\n  .has()\n  .digits(2) // Must have at least 2 digits\n  .has()\n  .not()\n  .spaces() // Should not have spaces\n  .is()\n  .not()\n  .oneOf(['Passw0rd', 'Password123']); // Blacklist these values\n\nexport default schema;\n","const isPivaValid = (function (arr) {\n  return function (ccNum: string): boolean {\n    let len = ccNum.length,\n      bit = 1,\n      sum = 0,\n      val;\n\n    while (len) {\n      val = parseInt(ccNum.charAt(--len), 10);\n      // eslint-disable-next-line no-cond-assign\n      sum += (bit ^= 1) ? arr[val] : val;\n    }\n\n    return Boolean(sum && sum % 10 === 0);\n  };\n})([0, 2, 4, 6, 8, 1, 3, 5, 7, 9]);\n\nexport default isPivaValid;\n","const phoneNumberValidator = (value: string): boolean => {\n  const regex = /^(([+]|00)39)?((3[1-6][0-9]))(\\d{7})$/;\n  const result = regex.exec(value);\n  if (result) return true;\n  return false;\n};\n\nexport default phoneNumberValidator;\n","import { Province, Regioni } from '../generated/graphql';\nimport * as Yup from 'yup';\nimport isValidPassword from './passwordValidator';\nimport isPivaValid from './pivaValidator';\nimport phoneNumberValidator from './phoneNumberValidator';\n\nexport const validationSchema = Yup.object({\n  firstName: Yup.string()\n    .max(15, 'Must be 15 characters or less')\n    .required('Required'),\n  lastName: Yup.string()\n    .max(20, 'Must be 20 characters or less')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  reEmail: Yup.string()\n    .oneOf([Yup.ref('email')], 'Email does not match')\n    .required('Required'),\n  password: Yup.string()\n    .required('Required')\n    .test('Password check', 'Password not safe', (value) => {\n      if (!value) return false;\n      return isValidPassword.validate(value) as boolean;\n    }),\n  rePassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Password does not match')\n    .required('Required'),\n  phoneNumber: Yup.string()\n    .required('Required')\n    .test('Phone number check', 'Il numero di telefono non e valido', (value) =>\n      phoneNumberValidator(value as string)\n    ),\n  pIva: Yup.string()\n    .required('Required')\n    .test('Partita ', 'La partita iva non e valida', (value) => {\n      if (!value) return false;\n      return isPivaValid(value);\n    }),\n  address: Yup.object().shape({\n    via: Yup.string().required('Required'),\n    CAP: Yup.number().test('len', 'Must be exactly 5 characters', (value) => {\n      if (!value) return false;\n      return value.toString().length === 5;\n    }),\n    comune: Yup.string().required('Required'),\n    provincia: Yup.string().required('Required'),\n    regione: Yup.string().required('Required'),\n  }),\n  hideContact: Yup.bool().required('Required'),\n});\n\nexport const provinceConRegione = [\n  {\n    provincia: Province.TO,\n    regione: Regioni.Piemonte,\n  },\n  {\n    provincia: Province.VC,\n    regione: Regioni.Piemonte,\n  },\n  {\n    provincia: Province.NO,\n    regione: Regioni.Piemonte,\n  },\n  {\n    provincia: Province.CN,\n    regione: Regioni.Piemonte,\n  },\n  {\n    provincia: Province.AT,\n    regione: Regioni.Piemonte,\n  },\n  {\n    provincia: Province.AL,\n    regione: Regioni.Piemonte,\n  },\n  {\n    provincia: Province.BI,\n    regione: Regioni.Piemonte,\n  },\n  {\n    provincia: Province.VB,\n    regione: Regioni.Piemonte,\n  },\n  {\n    provincia: Province.AO,\n    regione: Regioni.Valdaosta,\n  },\n  {\n    provincia: Province.VA,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.CO,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.SO,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.MI,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.BG,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.BS,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.PV,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.CR,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.MN,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.LC,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.LO,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.MB,\n    regione: Regioni.Lombardia,\n  },\n  {\n    provincia: Province.BZ,\n    regione: Regioni.Trentino,\n  },\n  {\n    provincia: Province.TN,\n    regione: Regioni.Trentino,\n  },\n  {\n    provincia: Province.VR,\n    regione: Regioni.Veneto,\n  },\n  {\n    provincia: Province.VI,\n    regione: Regioni.Veneto,\n  },\n  {\n    provincia: Province.BL,\n    regione: Regioni.Veneto,\n  },\n  {\n    provincia: Province.TV,\n    regione: Regioni.Veneto,\n  },\n  {\n    provincia: Province.VE,\n    regione: Regioni.Veneto,\n  },\n  {\n    provincia: Province.PD,\n    regione: Regioni.Veneto,\n  },\n  {\n    provincia: Province.RO,\n    regione: Regioni.Veneto,\n  },\n  {\n    provincia: Province.UD,\n    regione: Regioni.Friuli,\n  },\n  {\n    provincia: Province.GO,\n    regione: Regioni.Friuli,\n  },\n  {\n    provincia: Province.TS,\n    regione: Regioni.Friuli,\n  },\n  {\n    provincia: Province.PN,\n    regione: Regioni.Friuli,\n  },\n  {\n    provincia: Province.IM,\n    regione: Regioni.Liguria,\n  },\n  {\n    provincia: Province.SV,\n    regione: Regioni.Liguria,\n  },\n  {\n    provincia: Province.GE,\n    regione: Regioni.Liguria,\n  },\n  {\n    provincia: Province.SP,\n    regione: Regioni.Liguria,\n  },\n  {\n    provincia: Province.PC,\n    regione: Regioni.Emilia,\n  },\n  {\n    provincia: Province.PR,\n    regione: Regioni.Emilia,\n  },\n  {\n    provincia: Province.RE,\n    regione: Regioni.Emilia,\n  },\n  {\n    provincia: Province.MO,\n    regione: Regioni.Emilia,\n  },\n  {\n    provincia: Province.BO,\n    regione: Regioni.Emilia,\n  },\n  {\n    provincia: Province.FE,\n    regione: Regioni.Emilia,\n  },\n  {\n    provincia: Province.RA,\n    regione: Regioni.Emilia,\n  },\n  {\n    provincia: Province.FC,\n    regione: Regioni.Emilia,\n  },\n  {\n    provincia: Province.RN,\n    regione: Regioni.Emilia,\n  },\n  {\n    provincia: Province.MS,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.LU,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.PT,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.FI,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.LI,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.PI,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.AR,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.SI,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.GR,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.PO,\n    regione: Regioni.Toscana,\n  },\n  {\n    provincia: Province.PG,\n    regione: Regioni.Umbria,\n  },\n  {\n    provincia: Province.TR,\n    regione: Regioni.Umbria,\n  },\n  {\n    provincia: Province.PU,\n    regione: Regioni.Marche,\n  },\n  {\n    provincia: Province.AN,\n    regione: Regioni.Marche,\n  },\n  {\n    provincia: Province.MC,\n    regione: Regioni.Marche,\n  },\n  {\n    provincia: Province.AP,\n    regione: Regioni.Marche,\n  },\n  {\n    provincia: Province.FM,\n    regione: Regioni.Marche,\n  },\n  {\n    provincia: Province.VT,\n    regione: Regioni.Lazio,\n  },\n  {\n    provincia: Province.RI,\n    regione: Regioni.Lazio,\n  },\n  {\n    provincia: Province.RM,\n    regione: Regioni.Lazio,\n  },\n  {\n    provincia: Province.LT,\n    regione: Regioni.Lazio,\n  },\n  {\n    provincia: Province.FR,\n    regione: Regioni.Lazio,\n  },\n  {\n    provincia: Province.AQ,\n    regione: Regioni.Abruzzo,\n  },\n  {\n    provincia: Province.TE,\n    regione: Regioni.Abruzzo,\n  },\n  {\n    provincia: Province.PE,\n    regione: Regioni.Abruzzo,\n  },\n  {\n    provincia: Province.CH,\n    regione: Regioni.Abruzzo,\n  },\n  {\n    provincia: Province.CB,\n    regione: Regioni.Molise,\n  },\n  {\n    provincia: Province.IS,\n    regione: Regioni.Molise,\n  },\n  {\n    provincia: Province.CE,\n    regione: Regioni.Campania,\n  },\n  {\n    provincia: Province.BN,\n    regione: Regioni.Campania,\n  },\n  {\n    provincia: Province.NA,\n    regione: Regioni.Campania,\n  },\n  {\n    provincia: Province.AV,\n    regione: Regioni.Campania,\n  },\n  {\n    provincia: Province.SA,\n    regione: Regioni.Campania,\n  },\n  {\n    provincia: Province.FG,\n    regione: Regioni.Puglia,\n  },\n  {\n    provincia: Province.BA,\n    regione: Regioni.Puglia,\n  },\n  {\n    provincia: Province.TA,\n    regione: Regioni.Puglia,\n  },\n  {\n    provincia: Province.BR,\n    regione: Regioni.Puglia,\n  },\n  {\n    provincia: Province.LE,\n    regione: Regioni.Puglia,\n  },\n  {\n    provincia: Province.BT,\n    regione: Regioni.Puglia,\n  },\n  {\n    provincia: Province.PZ,\n    regione: Regioni.Basilicata,\n  },\n  {\n    provincia: Province.MT,\n    regione: Regioni.Basilicata,\n  },\n  {\n    provincia: Province.CS,\n    regione: Regioni.Calabria,\n  },\n  {\n    provincia: Province.CZ,\n    regione: Regioni.Calabria,\n  },\n  {\n    provincia: Province.RC,\n    regione: Regioni.Calabria,\n  },\n  {\n    provincia: Province.KR,\n    regione: Regioni.Calabria,\n  },\n  {\n    provincia: Province.VV,\n    regione: Regioni.Calabria,\n  },\n  {\n    provincia: Province.TP,\n    regione: Regioni.Sicilia,\n  },\n  {\n    provincia: Province.PA,\n    regione: Regioni.Sicilia,\n  },\n  {\n    provincia: Province.ME,\n    regione: Regioni.Sicilia,\n  },\n  {\n    provincia: Province.AG,\n    regione: Regioni.Sicilia,\n  },\n  {\n    provincia: Province.CL,\n    regione: Regioni.Sicilia,\n  },\n  {\n    provincia: Province.EN,\n    regione: Regioni.Sicilia,\n  },\n  {\n    provincia: Province.CT,\n    regione: Regioni.Sicilia,\n  },\n  {\n    provincia: Province.RG,\n    regione: Regioni.Sicilia,\n  },\n  {\n    provincia: Province.SR,\n    regione: Regioni.Sicilia,\n  },\n  {\n    provincia: Province.SS,\n    regione: Regioni.Sardegna,\n  },\n  {\n    provincia: Province.NU,\n    regione: Regioni.Sardegna,\n  },\n  {\n    provincia: Province.CA,\n    regione: Regioni.Sardegna,\n  },\n  {\n    provincia: Province.OR,\n    regione: Regioni.Sardegna,\n  },\n  {\n    provincia: Province.SU,\n    regione: Regioni.Sardegna,\n  },\n];\n\nexport const comuniConProvincia = [\n  {\n    comune: 'Agliè',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Airasca',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ala di Stura',\n    provincia: Province.TO,\n  },\n  {\n    comune: \"Albiano d'Ivrea\",\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Almese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Alpette',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Alpignano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Andezeno',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Andrate',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Angrogna',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Arignano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Avigliana',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Azeglio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bairo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Balangero',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Baldissero Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Baldissero Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Balme',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Banchette',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Barbania',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bardonecchia',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Barone Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Beinasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bibiana',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bobbio Pellice',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bollengo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Borgaro Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Borgiallo',\n    provincia: Province.TO,\n  },\n  {\n    comune: \"Borgofranco d'Ivrea\",\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Borgomasino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Borgone Susa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bosconero',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Brandizzo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bricherasio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Brosso',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Brozolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bruino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Brusasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bruzolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Buriasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Burolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Busano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Bussoleno',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Buttigliera Alta',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cafasse',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Caluso',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cambiano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Campiglione Fenile',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Candia Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Candiolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Canischio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cantalupa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cantoira',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Caprie',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Caravino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Carema',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Carignano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Carmagnola',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Casalborgone',\n    provincia: Province.TO,\n  },\n  {\n    comune: \"Cascinette d'Ivrea\",\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Caselette',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Caselle Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Castagneto Po',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Castagnole Piemonte',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Castellamonte',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Castelnuovo Nigra',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Castiglione Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cavagnolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cavour',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cercenasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ceres',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ceresole Reale',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cesana Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Chialamberto',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Chianocco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Chiaverano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Chieri',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Chiesanuova',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Chiomonte',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Chiusa di San Michele',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Chivasso',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ciconio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cintano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cinzano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ciriè',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Claviere',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Coassolo Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Coazze',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Collegno',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Colleretto Castelnuovo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Colleretto Giacosa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Condove',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Corio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cossano Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cuceglio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cumiana',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Cuorgnè',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Druento',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Exilles',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Favria',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Feletto',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Fenestrelle',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Fiano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Fiorano Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Foglizzo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Forno Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Frassinetto',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Front',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Frossasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Garzigliana',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Gassino Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Germagnano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Giaglione',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Giaveno',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Givoletto',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Gravere',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Groscavallo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Grosso',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Grugliasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ingria',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Inverso Pinasca',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Isolabella',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Issiglio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ivrea',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'La Cassa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'La Loggia',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Lanzo Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Lauriano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Leini',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Lemie',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Lessolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Levone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Locana',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Lombardore',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Lombriasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Loranzè',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Luserna San Giovanni',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Lusernetta',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Lusigliè',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Macello',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Maglione',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Marentino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Massello',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Mathi',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Mattie',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Mazzè',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Meana di Susa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Mercenasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Mezzenile',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Mombello di Torino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Mompantero',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Monastero di Lanzo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Moncalieri',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Moncenisio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Montaldo Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Montalenghe',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Montalto Dora',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Montanaro',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Monteu da Po',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Moriondo Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Nichelino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Noasca',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Nole',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Nomaglio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'None',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Novalesa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Oglianico',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Orbassano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Orio Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Osasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Osasio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Oulx',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ozegna',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Palazzo Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pancalieri',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Parella',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pavarolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pavone Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pecetto Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Perosa Argentina',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Perosa Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Perrero',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pertusio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pessinetto',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pianezza',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pinasca',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pinerolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pino Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Piobesi Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Piossasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Piscina',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Piverone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Poirino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pomaretto',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pont Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Porte',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pragelato',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Prali',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pralormo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pramollo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Prarostino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Prascorsano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Pratiglione',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Quagliuzzo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Quassolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Quincinetto',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Reano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ribordone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rivalba',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rivalta di Torino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Riva presso Chieri',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rivara',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rivarolo Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rivarossa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rivoli',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Robassomero',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rocca Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Roletto',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Romano Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Ronco Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rondissone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rorà',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Roure',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rosta',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rubiana',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Rueglio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Salassa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Salbertrand',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Salerano Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Salza di Pinerolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Samone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Benigno Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Carlo Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Colombano Belmonte',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Didero',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Francesco al Campo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Sangano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Germano Chisone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Gillio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Giorgio Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Giorio di Susa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Giusto Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Martino Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Maurizio Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Mauro Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Pietro Val Lemina',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Ponso',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Raffaele Cimena',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Sebastiano da Po',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'San Secondo di Pinerolo',\n    provincia: Province.TO,\n  },\n  {\n    comune: \"Sant'Ambrogio di Torino\",\n    provincia: Province.TO,\n  },\n  {\n    comune: \"Sant'Antonino di Susa\",\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Santena',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Sauze di Cesana',\n    provincia: Province.TO,\n  },\n  {\n    comune: \"Sauze d'Oulx\",\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Scalenghe',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Scarmagno',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Sciolze',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Sestriere',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Settimo Rottaro',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Settimo Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Settimo Vittone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Sparone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Strambinello',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Strambino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Susa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Tavagnasco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Torino',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Torrazza Piemonte',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Torre Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Torre Pellice',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Trana',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Traversella',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Traves',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Trofarello',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Usseaux',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Usseglio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vaie',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Val della Torre',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Valgioie',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vallo Torinese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Valperga',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Valprato Soana',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Varisella',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vauda Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Venaus',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Venaria Reale',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Verolengo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Verrua Savoia',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vestignè',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vialfrè',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vidracco',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vigone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Villafranca Piemonte',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Villanova Canavese',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Villarbasse',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Villar Dora',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Villareggia',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Villar Focchiardo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Villar Pellice',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Villar Perosa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Villastellone',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vinovo',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Virle Piemonte',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vische',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Vistrorio',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Viù',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Volpiano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Volvera',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Mappano',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Val di Chy',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Valchiusa',\n    provincia: Province.TO,\n  },\n  {\n    comune: 'Alagna Valsesia',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Albano Vercellese',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Alice Castello',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Arborio',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Asigliano Vercellese',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Balmuccia',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Balocco',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Bianzè',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Boccioleto',\n    provincia: Province.VC,\n  },\n  {\n    comune: \"Borgo d'Ale\",\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Borgosesia',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Borgo Vercelli',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Buronzo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Campertogno',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Carcoforo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Caresana',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Caresanablot',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Carisio',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Casanova Elvo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'San Giacomo Vercellese',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Cervatto',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Cigliano',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Civiasco',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Collobiano',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Costanzana',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Cravagliana',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Crescentino',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Crova',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Desana',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Fobello',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Fontanetto Po',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Formigliana',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Gattinara',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Ghislarengo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Greggio',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Guardabosone',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Lamporo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Lenta',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Lignana',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Livorno Ferraris',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Lozzolo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Mollia',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Moncrivello',\n    provincia: Province.VC,\n  },\n  {\n    comune: \"Motta de' Conti\",\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Olcenengo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Oldenico',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Palazzolo Vercellese',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Pertengo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Pezzana',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Pila',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Piode',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Postua',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Prarolo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Quarona',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Quinto Vercellese',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Rassa',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Rimella',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Rive',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Roasio',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Ronsecco',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Rossa',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Rovasenda',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Salasco',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Sali Vercellese',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Saluggia',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'San Germano Vercellese',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Santhià',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Scopa',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Scopello',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Serravalle Sesia',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Stroppiana',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Tricerro',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Trino',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Tronzano Vercellese',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Valduggia',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Varallo',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Vercelli',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Villarboit',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Villata',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Vocca',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Alto Sermenza',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Cellio con Breia',\n    provincia: Province.VC,\n  },\n  {\n    comune: 'Agrate Conturbia',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Ameno',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Armeno',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Arona',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Barengo',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Bellinzago Novarese',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Biandrate',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Boca',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Bogogno',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Bolzano Novarese',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Borgolavezzaro',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Borgomanero',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Borgo Ticino',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Briga Novarese',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Briona',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Caltignaga',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Cameri',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Carpignano Sesia',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Casalbeltrame',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Casaleggio Novara',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Casalino',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Casalvolone',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Castellazzo Novarese',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Castelletto sopra Ticino',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Cavaglietto',\n    provincia: Province.NO,\n  },\n  {\n    comune: \"Cavaglio d'Agogna\",\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Cavallirio',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Cerano',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Colazza',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Comignago',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Cressa',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Cureggio',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Divignano',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Dormelletto',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Fara Novarese',\n    provincia: Province.NO,\n  },\n  {\n    comune: \"Fontaneto d'Agogna\",\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Galliate',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Garbagna Novarese',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Gargallo',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Ghemme',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Gozzano',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Granozzo con Monticello',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Grignasco',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Invorio',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Landiona',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Lesa',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Maggiora',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Mandello Vitta',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Marano Ticino',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Massino Visconti',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Meina',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Mezzomerico',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Miasino',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Momo',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Nebbiuno',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Nibbiola',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Novara',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Oleggio',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Oleggio Castello',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Orta San Giulio',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Paruzzaro',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Pella',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Pettenasco',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Pisano',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Pogno',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Pombia',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Prato Sesia',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Recetto',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Romagnano Sesia',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Romentino',\n    provincia: Province.NO,\n  },\n  {\n    comune: \"San Maurizio d'Opaglio\",\n    provincia: Province.NO,\n  },\n  {\n    comune: 'San Nazzaro Sesia',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'San Pietro Mosezzo',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Sillavengo',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Sizzano',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Soriso',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Sozzago',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Suno',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Terdobbiate',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Tornaco',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Trecate',\n    provincia: Province.NO,\n  },\n  {\n    comune: \"Vaprio d'Agogna\",\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Varallo Pombia',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Vespolate',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Vicolungo',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Vinzaglio',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Gattico-Veruno',\n    provincia: Province.NO,\n  },\n  {\n    comune: 'Acceglio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Aisone',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Alba',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Albaretto della Torre',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Alto',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Argentera',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Arguello',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bagnasco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bagnolo Piemonte',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Baldissero d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Barbaresco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Barge',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Barolo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bastia Mondovì',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Battifollo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Beinette',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bellino',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Belvedere Langhe',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bene Vagienna',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Benevello',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bergolo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bernezzo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bonvicino',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Borgomale',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Borgo San Dalmazzo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bosia',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bossolasco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Boves',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Bra',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Briaglia',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Briga Alta',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Brondello',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Brossasco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Busca',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Camerana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Canale',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Canosio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Caprauna',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Caraglio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Caramagna Piemonte',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cardè',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Carrù',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cartignano',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Casalgrasso',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Castagnito',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Casteldelfino',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Castelletto Stura',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Castelletto Uzzone',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Castellinaldo d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Castellino Tanaro',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Castelmagno',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Castelnuovo di Ceva',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Castiglione Falletto',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Castiglione Tinella',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Castino',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cavallerleone',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cavallermaggiore',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Celle di Macra',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Centallo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Ceresole Alba',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cerretto Langhe',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cervasca',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cervere',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Ceva',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cherasco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Chiusa di Pesio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cigliè',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cissone',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Clavesana',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Corneliano d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cortemilia',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cossano Belbo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Costigliole Saluzzo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cravanzana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Crissolo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Cuneo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Demonte',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Diano d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Dogliani',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Dronero',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Elva',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Entracque',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Envie',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Farigliano',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Faule',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Feisoglio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Fossano',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Frabosa Soprana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Frabosa Sottana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Frassino',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Gaiola',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Gambasca',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Garessio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Genola',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Gorzegno',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Gottasecca',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Govone',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Grinzane Cavour',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Guarene',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Igliano',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Isasca',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Lagnasco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'La Morra',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Lequio Berria',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Lequio Tanaro',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Lesegno',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Levice',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Limone Piemonte',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Lisio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Macra',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Magliano Alfieri',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Magliano Alpi',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Mango',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Manta',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Marene',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Margarita',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Marmora',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Marsaglia',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Martiniana Po',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Melle',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Moiola',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Mombarcaro',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Mombasiglio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Monastero di Vasco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Monasterolo Casotto',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Monasterolo di Savigliano',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Monchiero',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Mondovì',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Monesiglio',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Monforte d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Montà',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Montaldo di Mondovì',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Montaldo Roero',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Montanera',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Montelupo Albese',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Montemale di Cuneo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Monterosso Grana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Monteu Roero',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Montezemolo',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Monticello d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Moretta',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Morozzo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Murazzano',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Murello',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Narzole',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Neive',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Neviglie',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Niella Belbo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Niella Tanaro',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Novello',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Nucetto',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Oncino',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Ormea',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Ostana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Paesana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Pagno',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Pamparato',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Paroldo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Perletto',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Perlo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Peveragno',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Pezzolo Valle Uzzone',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Pianfei',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Piasco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Pietraporzio',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Piobesi d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Piozzo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Pocapaglia',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Polonghera',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Pontechianale',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Pradleves',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Prazzo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Priero',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Priocca',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Priola',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Prunetto',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Racconigi',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Revello',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Rifreddo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Rittana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Roaschia',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Roascio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Robilante',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Roburent',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Roccabruna',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Rocca Cigliè',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Rocca de' Baldi\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Roccaforte Mondovì',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Roccasparvera',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Roccavione',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Rocchetta Belbo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Roddi',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Roddino',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Rodello',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Rossana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Ruffia',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Sale delle Langhe',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Sale San Giovanni',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Saliceto',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Salmour',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Saluzzo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Sambuco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Sampeyre',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'San Benedetto Belbo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'San Damiano Macra',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Sanfrè',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Sanfront',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'San Michele Mondovì',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Sant'Albano Stura\",\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Santa Vittoria d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Santo Stefano Belbo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Santo Stefano Roero',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Savigliano',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Scagnello',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Scarnafigi',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Serralunga d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Serravalle Langhe',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Sinio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Somano',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Sommariva del Bosco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Sommariva Perno',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Stroppo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Tarantasca',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Torre Bormida',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Torre Mondovì',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Torre San Giorgio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Torresina',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Treiso',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Trezzo Tinella',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Trinità',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Valdieri',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Valgrana',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Valloriate',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Venasca',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Verduno',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Vernante',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Verzuolo',\n    provincia: Province.CN,\n  },\n  {\n    comune: \"Vezza d'Alba\",\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Vicoforte',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Vignolo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Villafalletto',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Villanova Mondovì',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Villanova Solaro',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Villar San Costanzo',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Vinadio',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Viola',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Vottignasco',\n    provincia: Province.CN,\n  },\n  {\n    comune: 'Agliano Terme',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Albugnano',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Antignano',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Aramengo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Asti',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Azzano d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Baldichieri d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Belveglio',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Berzano di San Pietro',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Bruno',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Bubbio',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Buttigliera d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Calamandrana',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Calliano',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Calosso',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Camerano Casasco',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Canelli',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cantarana',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Capriglio',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Casorzo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cassinasco',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castagnole delle Lanze',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castagnole Monferrato',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castel Boglione',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Castell'Alfero\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castellero',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castelletto Molina',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castello di Annone',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castelnuovo Belbo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castelnuovo Calcea',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castelnuovo Don Bosco',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Castel Rocchero',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cellarengo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Celle Enomondo',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Cerreto d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cerro Tanaro',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cessole',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Chiusano d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cinaglio',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Cisterna d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Coazzolo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cocconato',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Corsione',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cortandone',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cortanze',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cortazzone',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cortiglione',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cossombrato',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Costigliole d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Cunico',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Dusino San Michele',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Ferrere',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Fontanile',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Frinco',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Grana',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Grazzano Badoglio',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Incisa Scapaccino',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Isola d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Loazzolo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Maranzana',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Maretto',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Moasca',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Mombaldone',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Mombaruzzo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Mombercelli',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Monale',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Monastero Bormida',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Moncalvo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Moncucco Torinese',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Mongardino',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Montabone',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Montafia',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Montaldo Scarampi',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Montechiaro d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Montegrosso d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Montemagno',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Moransengo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Nizza Monferrato',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Olmo Gentile',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Passerano Marmorito',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Penango',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Piea',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Pino d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Piovà Massaia',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Portacomaro',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Quaranti',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Refrancore',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Revigliasco d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Roatto',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Robella',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Rocca d'Arazzo\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Roccaverano',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Rocchetta Palafea',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Rocchetta Tanaro',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"San Damiano d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'San Giorgio Scarampi',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'San Martino Alfieri',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'San Marzano Oliveto',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'San Paolo Solbrito',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Scurzolengo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Serole',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Sessame',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Settime',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Soglio',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Tigliole',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Tonco',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Tonengo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Vaglio Serra',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Valfenera',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Vesime',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Viale',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Viarigi',\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Vigliano d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Villafranca d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: \"Villanova d'Asti\",\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Villa San Secondo',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Vinchio',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Montiglio Monferrato',\n    provincia: Province.AT,\n  },\n  {\n    comune: 'Acqui Terme',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Albera Ligure',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Alessandria',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Alfiano Natta',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Alice Bel Colle',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Altavilla Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Alzano Scrivia',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Arquata Scrivia',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Avolasca',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Balzola',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Basaluzzo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Bassignana',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Belforte Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Bergamasco',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Berzano di Tortona',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Bistagno',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Borghetto di Borbera',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Borgoratto Alessandrino',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Borgo San Martino',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Bosco Marengo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Bosio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Bozzole',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Brignano-Frascata',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cabella Ligure',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Camagna Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Camino',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cantalupo Ligure',\n    provincia: Province.AL,\n  },\n  {\n    comune: \"Capriata d'Orba\",\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Carbonara Scrivia',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Carentino',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Carezzano',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Carpeneto',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Carrega Ligure',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Carrosio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cartosio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Casal Cermelli',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Casaleggio Boiro',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Casale Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Casalnoceto',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Casasco',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cassine',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cassinelle',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Castellania Coppi',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Castellar Guidobono',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Castellazzo Bormida',\n    provincia: Province.AL,\n  },\n  {\n    comune: \"Castelletto d'Erro\",\n    provincia: Province.AL,\n  },\n  {\n    comune: \"Castelletto d'Orba\",\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Castelletto Merli',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Castelletto Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Castelnuovo Bormida',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Castelnuovo Scrivia',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Castelspina',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cavatore',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cella Monte',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cereseto',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cerreto Grue',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cerrina Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Coniolo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Conzano',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Costa Vescovato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cremolino',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Denice',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Dernice',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Fabbrica Curone',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Felizzano',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Fraconalto',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Francavilla Bisio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Frascaro',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Frassinello Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Frassineto Po',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Fresonara',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Frugarolo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Fubine Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Gabiano',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Gamalero',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Garbagna',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Gavi',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Giarole',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Gremiasco',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Grognardo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Grondona',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Guazzora',\n    provincia: Province.AL,\n  },\n  {\n    comune: \"Isola Sant'Antonio\",\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Lerma',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Malvicino',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Masio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Melazzo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Merana',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Mirabello Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Molare',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Molino dei Torti',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Mombello Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Momperone',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Moncestino',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Mongiardino Ligure',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Monleale',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Montacuto',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Montaldeo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Montaldo Bormida',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Montecastello',\n    provincia: Province.AL,\n  },\n  {\n    comune: \"Montechiaro d'Acqui\",\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Montegioco',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Montemarzino',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Morano sul Po',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Morbello',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Mornese',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Morsasco',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Murisengo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Novi Ligure',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Occimiano',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Odalengo Grande',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Odalengo Piccolo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Olivola',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Orsara Bormida',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Ottiglio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Ovada',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Oviglio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Ozzano Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Paderna',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Pareto',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Parodi Ligure',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Pasturana',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Pecetto di Valenza',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Pietra Marazzi',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Pomaro Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Pontecurone',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Pontestura',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Ponti',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Ponzano Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Ponzone',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Pozzol Groppo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Pozzolo Formigaro',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Prasco',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Predosa',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Quargnento',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Quattordio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Ricaldone',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Rivalta Bormida',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Rivarone',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Roccaforte Ligure',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Rocca Grimalda',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Rocchetta Ligure',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Rosignano Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Sala Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Sale',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'San Cristoforo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'San Giorgio Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'San Salvatore Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'San Sebastiano Curone',\n    provincia: Province.AL,\n  },\n  {\n    comune: \"Sant'Agata Fossili\",\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Sardigliano',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Sarezzano',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Serralunga di Crea',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Serravalle Scrivia',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Sezzadio',\n    provincia: Province.AL,\n  },\n  {\n    comune: \"Silvano d'Orba\",\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Solero',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Solonghello',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Spigno Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Spineto Scrivia',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Stazzano',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Strevi',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Tagliolo Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Tassarolo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Terruggia',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Terzo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Ticineto',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Tortona',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Treville',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Trisobbio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Valenza',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Valmacca',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Vignale Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Vignole Borbera',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Viguzzolo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Villadeati',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Villalvernia',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Villamiroglio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Villanova Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Villaromagnano',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Visone',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Volpedo',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Volpeglino',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Voltaggio',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Cassano Spinola',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Alluvioni Piovera',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Lu e Cuccaro Monferrato',\n    provincia: Province.AL,\n  },\n  {\n    comune: 'Ailoche',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Andorno Micca',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Benna',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Biella',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Bioglio',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Borriana',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Brusnengo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Callabiana',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Camandona',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Camburzano',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Candelo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Caprile',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Casapinta',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Castelletto Cervo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Cavaglià',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Cerrione',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Coggiola',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Cossato',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Crevacuore',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Curino',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Donato',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Dorzano',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Gaglianico',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Gifflenga',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Graglia',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Magnano',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Massazza',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Masserano',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Mezzana Mortigliengo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Miagliano',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Mongrando',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Mottalciata',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Muzzano',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Netro',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Occhieppo Inferiore',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Occhieppo Superiore',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Pettinengo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Piatto',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Piedicavallo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Pollone',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Ponderano',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Portula',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Pralungo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Pray',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Ronco Biellese',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Roppolo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Rosazza',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Sagliano Micca',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Sala Biellese',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Salussola',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Sandigliano',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Sordevolo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Sostegno',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Strona',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Tavigliano',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Ternengo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Tollegno',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Torrazzo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Valdengo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Vallanzengo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Valle San Nicolao',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Veglio',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Verrone',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Vigliano Biellese',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Villa del Bosco',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Villanova Biellese',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Viverone',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Zimone',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Zubiena',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Zumaglia',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Lessona',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Campiglia Cervo',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Quaregna Cerreto',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Valdilana',\n    provincia: Province.BI,\n  },\n  {\n    comune: 'Antrona Schieranco',\n    provincia: Province.VB,\n  },\n  {\n    comune: \"Anzola d'Ossola\",\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Arizzano',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Arola',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Aurano',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Baceno',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Bannio Anzino',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Baveno',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Bee',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Belgirate',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Beura-Cardezza',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Bognanco',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Brovello-Carpugnino',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Calasca-Castiglione',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Cambiasca',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Cannero Riviera',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Cannobio',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Caprezzo',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Casale Corte Cerro',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Ceppo Morelli',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Cesara',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Cossogno',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Craveggia',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Crevoladossola',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Crodo',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Domodossola',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Druogno',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Formazza',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Germagno',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Ghiffa',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Gignese',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Gravellona Toce',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Gurro',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Intragna',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Loreglia',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Macugnaga',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Madonna del Sasso',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Malesco',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Masera',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Massiola',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Mergozzo',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Miazzina',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Montecrestese',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Montescheno',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Nonio',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Oggebbio',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Omegna',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Ornavasso',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Pallanzeno',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Piedimulera',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Pieve Vergonte',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Premeno',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Premia',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Premosello-Chiovenda',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Quarna Sopra',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Quarna Sotto',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Re',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'San Bernardino Verbano',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Santa Maria Maggiore',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Stresa',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Toceno',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Trarego Viggiona',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Trasquera',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Trontano',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Valstrona',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Vanzone con San Carlo',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Varzo',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Verbania',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Vignone',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Villadossola',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Villette',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Vogogna',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Borgomezzavalle',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Valle Cannobina',\n    provincia: Province.VB,\n  },\n  {\n    comune: 'Allein',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Antey-Saint-André',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Aosta',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Arnad',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Arvier',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Avise',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Ayas',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Aymavilles',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Bard',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Bionaz',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Brissogne',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Brusson',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Challand-Saint-Anselme',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Challand-Saint-Victor',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Chambave',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Chamois',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Champdepraz',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Champorcher',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Charvensod',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Châtillon',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Cogne',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Courmayeur',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Donnas',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Doues',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Emarèse',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Etroubles',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Fénis',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Fontainemore',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Gaby',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Gignod',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Gressan',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Gressoney-La-Trinité',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Gressoney-Saint-Jean',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Hône',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Introd',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Issime',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Issogne',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Jovençan',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'La Magdeleine',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'La Salle',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'La Thuile',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Lillianes',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Montjovet',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Morgex',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Nus',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Ollomont',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Oyace',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Perloz',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Pollein',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Pontboset',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Pontey',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Pont-Saint-Martin',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Pré-Saint-Didier',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Quart',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Rhêmes-Notre-Dame',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Rhêmes-Saint-Georges',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Roisan',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Saint-Christophe',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Saint-Denis',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Saint-Marcel',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Saint-Nicolas',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Saint-Oyen',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Saint-Pierre',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Saint-Rhémy-en-Bosses',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Saint-Vincent',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Sarre',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Torgnon',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Valgrisenche',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Valpelline',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Valsavarenche',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Valtournenche',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Verrayes',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Verrès',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Villeneuve',\n    provincia: Province.AO,\n  },\n  {\n    comune: 'Agra',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Albizzate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Angera',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Arcisate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Arsago Seprio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Azzate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Azzio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Barasso',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Bardello',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Bedero Valcuvia',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Besano',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Besnate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Besozzo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Biandronno',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Bisuschio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Bodio Lomnago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Brebbia',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Bregano',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Brenta',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Brezzo di Bedero',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Brinzio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Brissago-Valtravaglia',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Brunello',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Brusimpiano',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Buguggiate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Busto Arsizio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cadegliano-Viconago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cairate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cantello',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Caravate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cardano al Campo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Carnago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Caronno Pertusella',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Caronno Varesino',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Casale Litta',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Casalzuigno',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Casciago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Casorate Sempione',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cassano Magnago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cassano Valcuvia',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Castellanza',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Castello Cabiaglio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Castelseprio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Castelveccana',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Castiglione Olona',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Castronno',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cavaria con Premezzo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cazzago Brabbia',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cislago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cittiglio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Clivio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cocquio-Trevisago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Comabbio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Comerio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cremenaga',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Crosio della Valle',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cuasso al Monte',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cugliate-Fabiasco',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cunardo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Curiglia con Monteviasco',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cuveglio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cuvio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Daverio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Dumenza',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Duno',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Fagnano Olona',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Ferno',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Ferrera di Varese',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Gallarate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Galliate Lombardo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Gavirate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Gazzada Schianno',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Gemonio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Gerenzano',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Germignaga',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Golasecca',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Gorla Maggiore',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Gorla Minore',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Gornate Olona',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Grantola',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Inarzo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Induno Olona',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Ispra',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Jerago con Orago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Lavena Ponte Tresa',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Laveno-Mombello',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Leggiuno',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Lonate Ceppino',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Lonate Pozzolo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Lozza',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Luino',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Luvinate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Malgesso',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Malnate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Marchirolo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Marnate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Marzio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Masciago Primo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Mercallo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Mesenzana',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Montegrino Valtravaglia',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Monvalle',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Morazzone',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Mornago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Oggiona con Santo Stefano',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Olgiate Olona',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Origgio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Orino',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Porto Ceresio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Porto Valtravaglia',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Rancio Valcuvia',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Ranco',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Saltrio',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Samarate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Saronno',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Sesto Calende',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Solbiate Arno',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Solbiate Olona',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Somma Lombardo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Sumirago',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Taino',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Ternate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Tradate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Travedona-Monate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Tronzano Lago Maggiore',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Uboldo',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Valganna',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Varano Borghi',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Varese',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Vedano Olona',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Venegono Inferiore',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Venegono Superiore',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Vergiate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Viggiù',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Vizzola Ticino',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Sangiano',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Maccagno con Pino e Veddasca',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Cadrezzate con Osmate',\n    provincia: Province.VA,\n  },\n  {\n    comune: 'Albavilla',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Albese con Cassano',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Albiolo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Alserio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Alzate Brianza',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Anzano del Parco',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Appiano Gentile',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Argegno',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Arosio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Asso',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Barni',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Bene Lario',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Beregazzo con Figliaro',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Binago',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Bizzarone',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Blessagno',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Blevio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Bregnano',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Brenna',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Brienno',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Brunate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Bulgarograsso',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cabiate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cadorago',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Caglio',\n    provincia: Province.CO,\n  },\n  {\n    comune: \"Campione d'Italia\",\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cantù',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Canzo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Capiago Intimiano',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Carate Urio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Carbonate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Carimate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Carlazzo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Carugo',\n    provincia: Province.CO,\n  },\n  {\n    comune: \"Caslino d'Erba\",\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Casnate con Bernate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cassina Rizzardi',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Castelmarte',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Castelnuovo Bozzente',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cavargna',\n    provincia: Province.CO,\n  },\n  {\n    comune: \"Cerano d'Intelvi\",\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cermenate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cernobbio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cirimido',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Claino con Osteno',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Colonno',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Como',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Corrido',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cremia',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cucciago',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Cusino',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Dizzasco',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Domaso',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Dongo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Dosso del Liro',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Erba',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Eupilio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Faggeto Lario',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Faloppio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Fenegrò',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Figino Serenza',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Fino Mornasco',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Garzeno',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Gera Lario',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Grandate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Grandola ed Uniti',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Griante',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Guanzate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Inverigo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Laglio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Laino',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Lambrugo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Lasnigo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Lezzeno',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Limido Comasco',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Lipomo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Livo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Locate Varesino',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Lomazzo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Longone al Segrino',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Luisago',\n    provincia: Province.CO,\n  },\n  {\n    comune: \"Lurago d'Erba\",\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Lurago Marinone',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Lurate Caccivio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Magreglio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Mariano Comense',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Maslianico',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Menaggio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Merone',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Moltrasio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Monguzzo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Montano Lucino',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Montemezzo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Montorfano',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Mozzate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Musso',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Nesso',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Novedrate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Olgiate Comasco',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Oltrona di San Mamette',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Orsenigo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Peglio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Pianello del Lario',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Pigra',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Plesio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Pognana Lario',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Ponna',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Ponte Lambro',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Porlezza',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Proserpio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Pusiano',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Rezzago',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Rodero',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Ronago',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Rovellasca',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Rovello Porro',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Sala Comacina',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'San Bartolomeo Val Cavargna',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'San Fermo della Battaglia',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'San Nazzaro Val Cavargna',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Schignano',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Senna Comasco',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Sorico',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Sormano',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Stazzona',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Tavernerio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Torno',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Trezzone',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Turate',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Uggiate-Trevano',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Valbrona',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Valmorea',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Val Rezzo',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Valsolda',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Veleso',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Veniano',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Vercana',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Vertemate con Minoprio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Villa Guardia',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Zelbio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'San Siro',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Gravedona ed Uniti',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Bellagio',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Colverde',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Tremezzina',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Alta Valle Intelvi',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Centro Valle Intelvi',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Solbiate con Cagno',\n    provincia: Province.CO,\n  },\n  {\n    comune: 'Albaredo per San Marco',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Albosaggia',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Andalo Valtellino',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Aprica',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Ardenno',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Bema',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Berbenno di Valtellina',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Bianzone',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Bormio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Buglio in Monte',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Caiolo',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Campodolcino',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Caspoggio',\n    provincia: Province.SO,\n  },\n  {\n    comune: \"Castello dell'Acqua\",\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Castione Andevenno',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Cedrasco',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Cercino',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Chiavenna',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Chiesa in Valmalenco',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Chiuro',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Cino',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Civo',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Colorina',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Cosio Valtellino',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Dazio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Delebio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Dubino',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Faedo Valtellino',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Forcola',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Fusine',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Gerola Alta',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Gordona',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Grosio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Grosotto',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Madesimo',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Lanzada',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Livigno',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Lovero',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Mantello',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Mazzo di Valtellina',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Mello',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Mese',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Montagna in Valtellina',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Morbegno',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Novate Mezzola',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Pedesina',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Piantedo',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Piateda',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Piuro',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Poggiridenti',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Ponte in Valtellina',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Postalesio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Prata Camportaccio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Rasura',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Rogolo',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Samolaco',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'San Giacomo Filippo',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Sernio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Sondalo',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Sondrio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Spriana',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Talamona',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Tartano',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Teglio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Tirano',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Torre di Santa Maria',\n    provincia: Province.SO,\n  },\n  {\n    comune: \"Tovo di Sant'Agata\",\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Traona',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Tresivio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Valdidentro',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Valdisotto',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Valfurva',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Val Masino',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Verceia',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Vervio',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Villa di Chiavenna',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Villa di Tirano',\n    provincia: Province.SO,\n  },\n  {\n    comune: 'Abbiategrasso',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Albairate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Arconate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Arese',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Arluno',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Assago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Bareggio',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Basiano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Basiglio',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Bellinzago Lombardo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Bernate Ticino',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Besate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Binasco',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Boffalora sopra Ticino',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Bollate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Bresso',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Bubbiano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Buccinasco',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Buscate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Bussero',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Busto Garolfo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Calvignasco',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cambiago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Canegrate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Carpiano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Carugate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Casarile',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Casorezzo',\n    provincia: Province.MI,\n  },\n  {\n    comune: \"Cassano d'Adda\",\n    provincia: Province.MI,\n  },\n  {\n    comune: \"Cassina de' Pecchi\",\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cassinetta di Lugagnano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Castano Primo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cernusco sul Naviglio',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cerro al Lambro',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cerro Maggiore',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cesano Boscone',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cesate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cinisello Balsamo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cisliano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cologno Monzese',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Colturano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Corbetta',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cormano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cornaredo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Corsico',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cuggiono',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cusago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Cusano Milanino',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Dairago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Dresano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Gaggiano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Garbagnate Milanese',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Gessate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Gorgonzola',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Grezzago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Gudo Visconti',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Inveruno',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Inzago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Lacchiarella',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Lainate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Legnano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Liscate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Locate di Triulzi',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Magenta',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Magnago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Marcallo con Casone',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Masate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Mediglia',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Melegnano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Melzo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Mesero',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Milano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Morimondo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Motta Visconti',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Nerviano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Nosate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Novate Milanese',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Noviglio',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Opera',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Ossona',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Ozzero',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Paderno Dugnano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Pantigliate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Parabiago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Paullo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Pero',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Peschiera Borromeo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Pessano con Bornago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Pieve Emanuele',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Pioltello',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Pogliano Milanese',\n    provincia: Province.MI,\n  },\n  {\n    comune: \"Pozzo d'Adda\",\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Pozzuolo Martesana',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Pregnana Milanese',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Rescaldina',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Rho',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Robecchetto con Induno',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Robecco sul Naviglio',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Rodano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Rosate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Rozzano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'San Colombano al Lambro',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'San Donato Milanese',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'San Giorgio su Legnano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'San Giuliano Milanese',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Santo Stefano Ticino',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'San Vittore Olona',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'San Zenone al Lambro',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Sedriano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Segrate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Senago',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Sesto San Giovanni',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Settala',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Settimo Milanese',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Solaro',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Trezzano Rosa',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Trezzano sul Naviglio',\n    provincia: Province.MI,\n  },\n  {\n    comune: \"Trezzo sull'Adda\",\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Tribiano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Truccazzano',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Turbigo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Vanzago',\n    provincia: Province.MI,\n  },\n  {\n    comune: \"Vaprio d'Adda\",\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Vernate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Vignate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Vimodrone',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Vittuone',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Vizzolo Predabissi',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Zibido San Giacomo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Villa Cortese',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Vanzaghello',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Baranzate',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Vermezzo con Zelo',\n    provincia: Province.MI,\n  },\n  {\n    comune: 'Adrara San Martino',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Adrara San Rocco',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Albano Sant'Alessandro\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Albino',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Almè',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Almenno San Bartolomeo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Almenno San Salvatore',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Alzano Lombardo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ambivere',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Antegnate',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Arcene',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ardesio',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Arzago d'Adda\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Averara',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Aviatico',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Azzano San Paolo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Azzone',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bagnatica',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Barbata',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bariano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Barzana',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bedulita',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Berbenno',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bergamo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Berzo San Fermo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bianzano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Blello',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bolgare',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Boltiere',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bonate Sopra',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bonate Sotto',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Borgo di Terzo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bossico',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bottanuco',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Bracca',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Branzi',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Brembate',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Brembate di Sopra',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Brignano Gera d'Adda\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Brumano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Brusaporto',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Calcinate',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Calcio',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Calusco d'Adda\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Calvenzano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Camerata Cornello',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Canonica d'Adda\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Capizzone',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Capriate San Gervasio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Caprino Bergamasco',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Caravaggio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Carobbio degli Angeli',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Carona',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Carvico',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Casazza',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Casirate d'Adda\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Casnigo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cassiglio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Castelli Calepio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Castel Rozzone',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Castione della Presolana',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Castro',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cavernago',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Cazzano Sant'Andrea\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cenate Sopra',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cenate Sotto',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cene',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cerete',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Chignolo d'Isola\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Chiuduno',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cisano Bergamasco',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ciserano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cividate al Piano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Clusone',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Colere',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cologno al Serio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Colzate',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Comun Nuovo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Corna Imagna',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cortenuova',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Costa di Mezzate',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Costa Valle Imagna',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Costa Volpino',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Covo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Credaro',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Curno',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cusio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Dalmine',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Dossena',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Endine Gaiano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Entratico',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Fara Gera d'Adda\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Fara Olivana con Sola',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Filago',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Fino del Monte',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Fiorano al Serio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Fontanella',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Fonteno',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Foppolo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Foresto Sparso',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Fornovo San Giovanni',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Fuipiano Valle Imagna',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Gandellino',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Gandino',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Gandosso',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Gaverina Terme',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Gazzaniga',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ghisalba',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Gorlago',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Gorle',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Gorno',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Grassobbio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Gromo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Grone',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Grumello del Monte',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Isola di Fondra',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Isso',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Lallio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Leffe',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Lenna',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Levate',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Locatello',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Lovere',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Lurano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Luzzana',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Madone',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Mapello',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Martinengo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Mezzoldo',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Misano di Gera d'Adda\",\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Moio de' Calvi\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Monasterolo del Castello',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Montello',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Morengo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Mornico al Serio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Mozzanica',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Mozzo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Nembro',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Olmo al Brembo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Oltre il Colle',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Oltressenda Alta',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Oneta',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Onore',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Orio al Serio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ornica',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Osio Sopra',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Osio Sotto',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Pagazzano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Paladina',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Palazzago',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Palosco',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Parre',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Parzanica',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Pedrengo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Peia',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Pianico',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Piario',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Piazza Brembana',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Piazzatorre',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Piazzolo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Pognano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ponte Nossa',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ponteranica',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ponte San Pietro',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Pontida',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Pontirolo Nuovo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Pradalunga',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Predore',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Premolo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Presezzo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Pumenengo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ranica',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ranzanico',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Riva di Solto',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Rogno',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Romano di Lombardia',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Roncobello',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Roncola',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Rota d'Imagna\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Rovetta',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'San Giovanni Bianco',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"San Paolo d'Argon\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'San Pellegrino Terme',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Santa Brigida',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Sarnico',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Scanzorosciate',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Schilpario',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Sedrina',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Selvino',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Seriate',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Serina',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Solto Collina',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Songavazzo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Sorisole',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Sotto il Monte Giovanni XXIII',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Sovere',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Spinone al Lago',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Spirano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Stezzano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Strozza',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Suisio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Taleggio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Tavernola Bergamasca',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Telgate',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Terno d'Isola\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Torre Boldone',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Torre de' Busi\",\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Torre de' Roveri\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Torre Pallavicina',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Trescore Balneario',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Treviglio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Treviolo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Ubiale Clanezzo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Urgnano',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Valbondione',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Valbrembo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Valgoglio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Valleve',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Valnegra',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Valtorta',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Vedeseta',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Verdellino',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Verdello',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Vertova',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Viadanica',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Vigano San Martino',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Vigolo',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Villa d'Adda\",\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Villa d'Almè\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Villa di Serio',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Villa d'Ogna\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Villongo',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Vilminore di Scalve',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Zandobbio',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Zanica',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Zogno',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Costa Serina',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Algua',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Cornalba',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Medolago',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Solza',\n    provincia: Province.BG,\n  },\n  {\n    comune: \"Sant'Omobono Terme\",\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Val Brembilla',\n    provincia: Province.BG,\n  },\n  {\n    comune: 'Acquafredda',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Adro',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Agnosine',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Alfianello',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Anfo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Angolo Terme',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Artogne',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Azzano Mella',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Bagnolo Mella',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Bagolino',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Barbariga',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Barghe',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Bassano Bresciano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Bedizzole',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Berlingo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Berzo Demo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Berzo Inferiore',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Bienno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Bione',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Borgo San Giacomo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Borgosatollo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Borno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Botticino',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Bovegno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Bovezzo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Brandico',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Braone',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Breno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Brescia',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Brione',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Caino',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Calcinato',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Calvagese della Riviera',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Calvisano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Capo di Ponte',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Capovalle',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Capriano del Colle',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Capriolo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Carpenedolo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Castegnato',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Castelcovati',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Castel Mella',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Castenedolo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Casto',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Castrezzato',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Cazzago San Martino',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Cedegolo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Cellatica',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Cerveno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Ceto',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Cevo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Chiari',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Cigole',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Cimbergo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Cividate Camuno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Coccaglio',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Collebeato',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Collio',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Cologne',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Comezzano-Cizzago',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Concesio',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Corte Franca',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Corteno Golgi',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Corzano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Darfo Boario Terme',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Dello',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Desenzano del Garda',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Edolo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Erbusco',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Esine',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Fiesse',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Flero',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Gambara',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Gardone Riviera',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Gardone Val Trompia',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Gargnano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Gavardo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Ghedi',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Gianico',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Gottolengo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Gussago',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Idro',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Incudine',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Irma',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Iseo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Isorella',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Lavenone',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Leno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Limone sul Garda',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Lodrino',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Lograto',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Lonato del Garda',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Longhena',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Losine',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Lozio',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Lumezzane',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Maclodio',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Magasa',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Mairano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Malegno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Malonno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Manerba del Garda',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Manerbio',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Marcheno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Marmentino',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Marone',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Mazzano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Milzano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Moniga del Garda',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Monno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Monte Isola',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Monticelli Brusati',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Montichiari',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Montirone',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Mura',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Muscoline',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Nave',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Niardo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Nuvolento',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Nuvolera',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Odolo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Offlaga',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Ome',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Ono San Pietro',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Orzinuovi',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Orzivecchi',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Ospitaletto',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Ossimo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Padenghe sul Garda',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Paderno Franciacorta',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Paisco Loveno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Paitone',\n    provincia: Province.BS,\n  },\n  {\n    comune: \"Palazzolo sull'Oglio\",\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Paratico',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Paspardo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Passirano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pavone del Mella',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'San Paolo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pertica Alta',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pertica Bassa',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pezzaze',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pian Camuno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pisogne',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Polaveno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Polpenazze del Garda',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pompiano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Poncarale',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Ponte di Legno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pontevico',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pontoglio',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pozzolengo',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Pralboino',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Preseglie',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Prevalle',\n    provincia: Province.BS,\n  },\n  {\n    comune: \"Provaglio d'Iseo\",\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Provaglio Val Sabbia',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Puegnago del Garda',\n    provincia: Province.BS,\n  },\n  {\n    comune: \"Quinzano d'Oglio\",\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Remedello',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Rezzato',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Roccafranca',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Rodengo Saiano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Roè Volciano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Roncadelle',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Rovato',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Rudiano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Sabbio Chiese',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Sale Marasino',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Salò',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'San Felice del Benaco',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'San Gervasio Bresciano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'San Zeno Naviglio',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Sarezzo',\n    provincia: Province.BS,\n  },\n  {\n    comune: \"Saviore dell'Adamello\",\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Sellero',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Seniga',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Serle',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Sirmione',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Soiano del Lago',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Sonico',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Sulzano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Tavernole sul Mella',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Temù',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Tignale',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Torbole Casaglia',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Toscolano-Maderno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Travagliato',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Tremosine sul Garda',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Trenzano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Treviso Bresciano',\n    provincia: Province.BS,\n  },\n  {\n    comune: \"Urago d'Oglio\",\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Vallio Terme',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Valvestino',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Verolanuova',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Verolavecchia',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Vestone',\n    provincia: Province.BS,\n  },\n  {\n    comune: \"Vezza d'Oglio\",\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Villa Carcina',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Villachiara',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Villanuova sul Clisi',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Vione',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Visano',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Vobarno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Zone',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Piancogno',\n    provincia: Province.BS,\n  },\n  {\n    comune: 'Alagna',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Albaredo Arnaboldi',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Albonese',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Albuzzano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Arena Po',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Badia Pavese',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Bagnaria',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Barbianello',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Bascapè',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Bastida Pancarana',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Battuda',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Belgioioso',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Bereguardo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Borgarello',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Borgo Priolo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Borgoratto Mormorolo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Borgo San Siro',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Bornasco',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Bosnasco',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Brallo di Pregola',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Breme',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Bressana Bottarone',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Broni',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Calvignano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Campospinoso',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Candia Lomellina',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Canneto Pavese',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Carbonara al Ticino',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Casanova Lonati',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Casatisma',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Casei Gerola',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Casorate Primo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cassolnovo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Castana',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Casteggio',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Castelletto di Branduzzo',\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Castello d'Agogna\",\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Castelnovetto',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cava Manara',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cecima',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Ceranova',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Ceretto Lomellina',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cergnago',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Certosa di Pavia',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cervesina',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Chignolo Po',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cigognola',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cilavegna',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Codevilla',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Confienza',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Copiano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Corana',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Corvino San Quirico',\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Costa de' Nobili\",\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cozzo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cura Carpignano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Dorno',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Ferrera Erbognone',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Filighera',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Fortunago',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Frascarolo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Galliavola',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Gambarana',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Gambolò',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Garlasco',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Gerenzago',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Giussago',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Godiasco Salice Terme',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Golferenzo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Gravellona Lomellina',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Gropello Cairoli',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Inverno e Monteleone',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Landriano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Langosco',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Lardirago',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Linarolo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Lirio',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Lomello',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Lungavilla',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Magherno',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Marcignago',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Marzano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Mede',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Menconico',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Mezzana Bigli',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Mezzana Rabattone',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Mezzanino',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Miradolo Terme',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Montalto Pavese',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Montebello della Battaglia',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Montecalvo Versiggia',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Montescano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Montesegale',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Monticelli Pavese',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Montù Beccaria',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Mornico Losana',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Mortara',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Nicorvo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Olevano di Lomellina',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Oliva Gessi',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Ottobiano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Palestro',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Pancarana',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Parona',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Pavia',\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Pietra de' Giorgi\",\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Pieve Albignola',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Pieve del Cairo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Pieve Porto Morone',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Pinarolo Po',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Pizzale',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Ponte Nizza',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Portalbera',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Rea',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Redavalle',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Retorbido',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Rivanazzano Terme',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Robbio',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Robecco Pavese',\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Rocca de' Giorgi\",\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Rocca Susella',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Rognano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Romagnese',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Roncaro',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Rosasco',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Rovescala',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'San Cipriano Po',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'San Damiano al Colle',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'San Genesio ed Uniti',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'San Giorgio di Lomellina',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'San Martino Siccomario',\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Sannazzaro de' Burgondi\",\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Santa Cristina e Bissone',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Santa Giuletta',\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Sant'Alessio con Vialone\",\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Santa Margherita di Staffora',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Santa Maria della Versa',\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Sant'Angelo Lomellina\",\n    provincia: Province.PV,\n  },\n  {\n    comune: 'San Zenone al Po',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Sartirana Lomellina',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Scaldasole',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Semiana',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Silvano Pietra',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Siziano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Sommo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Spessa',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Stradella',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Suardi',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Torrazza Coste',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Torre Beretti e Castellaro',\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Torre d'Arese\",\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Torre de' Negri\",\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Torre d'Isola\",\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Torrevecchia Pia',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Torricella Verzate',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Travacò Siccomario',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Trivolzio',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Tromello',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Trovo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Val di Nizza',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Valeggio',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Valle Lomellina',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Valle Salimbene',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Varzi',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Velezzo Lomellina',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Vellezzo Bellini',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Verretto',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Verrua Po',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Vidigulfo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Vigevano',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Villa Biscossi',\n    provincia: Province.PV,\n  },\n  {\n    comune: \"Villanova d'Ardenghi\",\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Villanterio',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Vistarino',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Voghera',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Volpara',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Zavattarello',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Zeccone',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Zeme',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Zenevredo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Zerbo',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Zerbolò',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Zinasco',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Cornale e Bastida',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Corteolona e Genzone',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Colli Verdi',\n    provincia: Province.PV,\n  },\n  {\n    comune: 'Acquanegra Cremonese',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Agnadello',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Annicco',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Azzanello',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Bagnolo Cremasco',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Bonemerse',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Bordolano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Calvatone',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Camisano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Campagnola Cremasca',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Capergnanica',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Cappella Cantone',\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Cappella de' Picenardi\",\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Capralba',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Casalbuttano ed Uniti',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Casale Cremasco-Vidolasco',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Casaletto Ceredano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Casaletto di Sopra',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Casaletto Vaprio',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Casalmaggiore',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Casalmorano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Casteldidone',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Castel Gabbiano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Castelleone',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Castelverde',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Castelvisconti',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Cella Dati',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Chieve',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Cicognolo',\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Cingia de' Botti\",\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Corte de' Cortesi con Cignone\",\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Corte de' Frati\",\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Credera Rubbiano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Crema',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Cremona',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Cremosano',\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Crotta d'Adda\",\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Cumignano sul Naviglio',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Derovere',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Dovera',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Fiesco',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Formigara',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Gabbioneta-Binanuova',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Gadesco-Pieve Delmona',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Genivolta',\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Gerre de' Caprioli\",\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Gombito',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Grontardo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Grumello Cremonese ed Uniti',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Gussola',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Isola Dovarese',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Izano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Madignano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Malagnino',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Martignana di Po',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Monte Cremasco',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Montodine',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Moscazzano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Motta Baluffi',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Offanengo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Olmeneta',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Ostiano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Paderno Ponchielli',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Palazzo Pignano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Pandino',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Persico Dosimo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Pescarolo ed Uniti',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Pessina Cremonese',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Pianengo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Pieranica',\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Pieve d'Olmi\",\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Pieve San Giacomo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Pizzighettone',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Pozzaglio ed Uniti',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Quintano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Ricengo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Ripalta Arpina',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Ripalta Cremasca',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Ripalta Guerina',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Rivarolo del Re ed Uniti',\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Rivolta d'Adda\",\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Robecco d'Oglio\",\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Romanengo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Salvirola',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'San Bassano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'San Daniele Po',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'San Giovanni in Croce',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'San Martino del Lago',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Scandolara Ravara',\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Scandolara Ripa d'Oglio\",\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Sergnano',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Sesto ed Uniti',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Solarolo Rainerio',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Soncino',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Soresina',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Sospiro',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Spinadesco',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Spineda',\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Spino d'Adda\",\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Stagno Lombardo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Ticengo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Torlino Vimercati',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Tornata',\n    provincia: Province.CR,\n  },\n  {\n    comune: \"Torre de' Picenardi\",\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Torricella del Pizzo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Trescore Cremasco',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Trigolo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Vaiano Cremasco',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Vailate',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Vescovato',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Volongo',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Voltido',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Piadena Drizzona',\n    provincia: Province.CR,\n  },\n  {\n    comune: 'Acquanegra sul Chiese',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Asola',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Bagnolo San Vito',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Bozzolo',\n    provincia: Province.MN,\n  },\n  {\n    comune: \"Canneto sull'Oglio\",\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Casalmoro',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Casaloldo',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Casalromano',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Castelbelforte',\n    provincia: Province.MN,\n  },\n  {\n    comune: \"Castel d'Ario\",\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Castel Goffredo',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Castellucchio',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Castiglione delle Stiviere',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Cavriana',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Ceresara',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Commessaggio',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Curtatone',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Dosolo',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Gazoldo degli Ippoliti',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Gazzuolo',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Goito',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Gonzaga',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Guidizzolo',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Magnacavallo',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Mantova',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Marcaria',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Mariana Mantovana',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Marmirolo',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Medole',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Moglia',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Monzambano',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Motteggiana',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Ostiglia',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Pegognaga',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Piubega',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Poggio Rusco',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Pomponesco',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Ponti sul Mincio',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Porto Mantovano',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Quingentole',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Quistello',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Redondesco',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Rivarolo Mantovano',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Rodigo',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Roncoferraro',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Roverbella',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Sabbioneta',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'San Benedetto Po',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'San Giacomo delle Segnate',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'San Giorgio Bigarello',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'San Giovanni del Dosso',\n    provincia: Province.MN,\n  },\n  {\n    comune: \"San Martino dall'Argine\",\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Schivenoglia',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Sermide e Felonica',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Serravalle a Po',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Solferino',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Sustinente',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Suzzara',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Viadana',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Villimpenta',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Volta Mantovana',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Borgo Virgilio',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Borgo Mantovano',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Borgocarbonara',\n    provincia: Province.MN,\n  },\n  {\n    comune: 'Abbadia Lariana',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Airuno',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Annone di Brianza',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Ballabio',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Barzago',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Barzanò',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Barzio',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Bellano',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Bosisio Parini',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Brivio',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Bulciago',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Calco',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Calolziocorte',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Carenno',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Casargo',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Casatenovo',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Cassago Brianza',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Cassina Valsassina',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Castello di Brianza',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Cernusco Lombardone',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Cesana Brianza',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Civate',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Colico',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Colle Brianza',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Cortenova',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Costa Masnaga',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Crandola Valsassina',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Cremella',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Cremeno',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Dervio',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Dolzago',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Dorio',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Ello',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Erve',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Esino Lario',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Galbiate',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Garbagnate Monastero',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Garlate',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Imbersago',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Introbio',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Lecco',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Lierna',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Lomagna',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Malgrate',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Mandello del Lario',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Margno',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Merate',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Missaglia',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Moggio',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Molteno',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Monte Marenzo',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Montevecchia',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Monticello Brianza',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Morterone',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Nibionno',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Oggiono',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Olgiate Molgora',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Olginate',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Oliveto Lario',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Osnago',\n    provincia: Province.LC,\n  },\n  {\n    comune: \"Paderno d'Adda\",\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Pagnona',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Parlasco',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Pasturo',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Perledo',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Pescate',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Premana',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Primaluna',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Robbiate',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Rogeno',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Santa Maria Hoè',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Sirone',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Sirtori',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Sueglio',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Suello',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Taceno',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Valgreghentino',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Valmadrera',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Varenna',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Vercurago',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Viganò',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Verderio',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'La Valletta Brianza',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Valvarrone',\n    provincia: Province.LC,\n  },\n  {\n    comune: 'Abbadia Cerreto',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Bertonico',\n    provincia: Province.LO,\n  },\n  {\n    comune: \"Boffalora d'Adda\",\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Borghetto Lodigiano',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Borgo San Giovanni',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Brembio',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Casaletto Lodigiano',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Casalmaiocco',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Casalpusterlengo',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Caselle Landi',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Caselle Lurani',\n    provincia: Province.LO,\n  },\n  {\n    comune: \"Castelnuovo Bocca d'Adda\",\n    provincia: Province.LO,\n  },\n  {\n    comune: \"Castiglione d'Adda\",\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Castiraga Vidardo',\n    provincia: Province.LO,\n  },\n  {\n    comune: \"Cavenago d'Adda\",\n    provincia: Province.LO,\n  },\n  {\n    comune: \"Cervignano d'Adda\",\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Codogno',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Comazzo',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Cornegliano Laudense',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Corno Giovine',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Cornovecchio',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Corte Palasio',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Crespiatica',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Fombio',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Galgagnano',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Graffignana',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Guardamiglio',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Livraga',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Lodi',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Lodi Vecchio',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Maccastorna',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Mairago',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Maleo',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Marudo',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Massalengo',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Meleti',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Merlino',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Montanaso Lombardo',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Mulazzano',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Orio Litta',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Ospedaletto Lodigiano',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Ossago Lodigiano',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Pieve Fissiraga',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Salerano sul Lambro',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'San Fiorano',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'San Martino in Strada',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'San Rocco al Porto',\n    provincia: Province.LO,\n  },\n  {\n    comune: \"Sant'Angelo Lodigiano\",\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Santo Stefano Lodigiano',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Secugnago',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Senna Lodigiana',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Somaglia',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Sordio',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Tavazzano con Villavesco',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Terranova dei Passerini',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Turano Lodigiano',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Valera Fratta',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Villanova del Sillaro',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Zelo Buon Persico',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Castelgerundo',\n    provincia: Province.LO,\n  },\n  {\n    comune: 'Agrate Brianza',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Aicurzio',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Albiate',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Arcore',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Barlassina',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Bellusco',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Bernareggio',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Besana in Brianza',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Biassono',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Bovisio-Masciago',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Briosco',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Brugherio',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Burago di Molgora',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Camparada',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Carate Brianza',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Carnate',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Cavenago di Brianza',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Ceriano Laghetto',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Cesano Maderno',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Cogliate',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Concorezzo',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Correzzana',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Desio',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Giussano',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Lazzate',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Lesmo',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Limbiate',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Lissone',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Macherio',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Meda',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Mezzago',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Misinto',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Monza',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Muggiò',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Nova Milanese',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Ornago',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Renate',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Ronco Briantino',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Seregno',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Seveso',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Sovico',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Sulbiate',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Triuggio',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Usmate Velate',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Varedo',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Vedano al Lambro',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Veduggio con Colzano',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Verano Brianza',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Villasanta',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Vimercate',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Busnago',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Caponago',\n    provincia: Province.MB,\n  },\n  {\n    comune: \"Cornate d'Adda\",\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Lentate sul Seveso',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Roncello',\n    provincia: Province.MB,\n  },\n  {\n    comune: 'Aldino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Andriano',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Anterivo',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Appiano sulla strada del vino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Avelengo',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Badia',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Barbiano',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Bolzano',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Braies',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Brennero',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Bressanone',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Bronzolo',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Brunico',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Caines',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Caldaro sulla strada del vino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Campo di Trens',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Campo Tures',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Castelbello-Ciardes',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Castelrotto',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Cermes',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Chienes',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Chiusa',\n    provincia: Province.BZ,\n  },\n  {\n    comune: \"Cornedo all'Isarco\",\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Cortaccia sulla strada del vino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Cortina sulla strada del vino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Corvara in Badia',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Curon Venosta',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Dobbiaco',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Egna',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Falzes',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Fiè allo Sciliar',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Fortezza',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Funes',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Gais',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Gargazzone',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Glorenza',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Laces',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Lagundo',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Laion',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Laives',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Lana',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Lasa',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Lauregno',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Luson',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Magrè sulla strada del vino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Malles Venosta',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Marebbe',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Marlengo',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Martello',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Meltina',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Merano',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Monguelfo-Tesido',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Montagna',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Moso in Passiria',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Nalles',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Naturno',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Naz-Sciaves',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Nova Levante',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Nova Ponente',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Ora',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Ortisei',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Parcines',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Perca',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Plaus',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Ponte Gardena',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Postal',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Prato allo Stelvio',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Predoi',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Proves',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Racines',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Rasun-Anterselva',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Renon',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Rifiano',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Rio di Pusteria',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Rodengo',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Salorno sulla strada del vino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'San Candido',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'San Genesio Atesino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'San Leonardo in Passiria',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'San Lorenzo di Sebato',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'San Martino in Badia',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'San Martino in Passiria',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'San Pancrazio',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Santa Cristina Valgardena',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Sarentino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Scena',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Selva dei Molini',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Selva di Val Gardena',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Senales',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Sesto',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Silandro',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Sluderno',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Stelvio',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Terento',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Terlano',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Termeno sulla strada del vino',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Tesimo',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Tires',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Tirolo',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Trodena nel parco naturale',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Tubre',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Ultimo',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Vadena',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Valdaora',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Val di Vizze',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Valle Aurina',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Valle di Casies',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Vandoies',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Varna',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Verano',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Villabassa',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Villandro',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Vipiteno',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Velturno',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'La Valle',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Senale-San Felice',\n    provincia: Province.BZ,\n  },\n  {\n    comune: 'Ala',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Albiano',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Aldeno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Andalo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Arco',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Avio',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Baselga di Pinè',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Bedollo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Besenello',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Bieno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Bleggio Superiore',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Bocenago',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Bondone',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Borgo Valsugana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Brentonico',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Bresimo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Caderzone Terme',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Calceranica al Lago',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Caldes',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Caldonazzo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Calliano',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Campitello di Fassa',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Campodenno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Canal San Bovo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Canazei',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Capriana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Carisolo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Carzano',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Castel Condino',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Castello-Molina di Fiemme',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Castello Tesino',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Castelnuovo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cavalese',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cavareno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cavedago',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cavedine',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cavizzana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cimone',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cinte Tesino',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cis',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Civezzano',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cles',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Commezzadura',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Croviana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Dambel',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Denno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Drena',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Dro',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Fai della Paganella',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Fiavè',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Fierozzo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Folgaria',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Fornace',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Frassilongo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Garniga Terme',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Giovo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Giustino',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Grigno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Imer',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Isera',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Lavarone',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Lavis',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Levico Terme',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Livo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Lona-Lases',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Luserna',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Malé',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Massimeno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Mazzin',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Mezzana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Mezzano',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Mezzocorona',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Mezzolombardo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Moena',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Molveno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Mori',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Nago-Torbole',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Nogaredo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Nomi',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Novaledo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ospedaletto',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ossana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Palù del Fersina',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Panchià',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ronzo-Chienis',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Peio',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Pellizzano',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Pelugo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Pergine Valsugana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Pieve Tesino',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Pinzolo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Pomarolo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Predazzo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Rabbi',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Riva del Garda',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Romeno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Roncegno Terme',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ronchi Valsugana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ronzone',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Roverè della Luna',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Rovereto',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ruffrè-Mendola',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Rumo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Sagron Mis',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Samone',\n    provincia: Province.TN,\n  },\n  {\n    comune: \"San Michele all'Adige\",\n    provincia: Province.TN,\n  },\n  {\n    comune: \"Sant'Orsola Terme\",\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Sanzeno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Sarnonico',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Scurelle',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Segonzano',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Sfruz',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Soraga di Fassa',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Sover',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Spiazzo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Spormaggiore',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Sporminore',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Stenico',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Storo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Strembo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Telve',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Telve di Sopra',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Tenna',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Tenno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Terragnolo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Terzolas',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Tesero',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Tione di Trento',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ton',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Torcegno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Trambileno',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Trento',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Valfloriana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Vallarsa',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Vermiglio',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Vignola-Falesina',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Villa Lagarina',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Volano',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ziano di Fiemme',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Comano Terme',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ledro',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Predaia',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'San Lorenzo Dorsino',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Valdaone',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Dimaro Folgarida',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Pieve di Bono-Prezzo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Altavalle',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Altopiano della Vigolana',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Amblar-Don',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Borgo Chiese',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Borgo Lares',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Castel Ivano',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Cembra Lisignago',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Contà',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Madruzzo',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Porte di Rendena',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Primiero San Martino di Castrozza',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Sella Giudicarie',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Tre Ville',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Vallelaghi',\n    provincia: Province.TN,\n  },\n  {\n    comune: \"Ville d'Anaunia\",\n    provincia: Province.TN,\n  },\n  {\n    comune: 'San Giovanni di Fassa',\n    provincia: Province.TN,\n  },\n  {\n    comune: \"Terre d'Adige\",\n    provincia: Province.TN,\n  },\n  {\n    comune: \"Borgo d'Anaunia\",\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Novella',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Ville di Fiemme',\n    provincia: Province.TN,\n  },\n  {\n    comune: 'Affi',\n    provincia: Province.VR,\n  },\n  {\n    comune: \"Albaredo d'Adige\",\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Angiari',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Arcole',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Badia Calavena',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Bardolino',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Belfiore',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Bevilacqua',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Bonavigo',\n    provincia: Province.VR,\n  },\n  {\n    comune: \"Boschi Sant'Anna\",\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Bosco Chiesanuova',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Bovolone',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Brentino Belluno',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Brenzone sul Garda',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Bussolengo',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Buttapietra',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Caldiero',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Caprino Veronese',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Casaleone',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Castagnaro',\n    provincia: Province.VR,\n  },\n  {\n    comune: \"Castel d'Azzano\",\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Castelnuovo del Garda',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Cavaion Veronese',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Cazzano di Tramigna',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Cerea',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Cerro Veronese',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Cologna Veneta',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Colognola ai Colli',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Concamarise',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Costermano sul Garda',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Dolcè',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Erbè',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Erbezzo',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Ferrara di Monte Baldo',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Fumane',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Garda',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Gazzo Veronese',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Grezzana',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Illasi',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Isola della Scala',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Isola Rizza',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Lavagno',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Lazise',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Legnago',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Malcesine',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Marano di Valpolicella',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Mezzane di Sotto',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Minerbe',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Montecchia di Crosara',\n    provincia: Province.VR,\n  },\n  {\n    comune: \"Monteforte d'Alpone\",\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Mozzecane',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Negrar di Valpolicella',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Nogara',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Nogarole Rocca',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Oppeano',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Palù',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Pastrengo',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Pescantina',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Peschiera del Garda',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Povegliano Veronese',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Pressana',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Rivoli Veronese',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Roncà',\n    provincia: Province.VR,\n  },\n  {\n    comune: \"Ronco all'Adige\",\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Roverchiara',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Roveredo di Guà',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Roverè Veronese',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Salizzole',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'San Bonifacio',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'San Giovanni Ilarione',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'San Giovanni Lupatoto',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Sanguinetto',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'San Martino Buon Albergo',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'San Mauro di Saline',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'San Pietro di Morubio',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'San Pietro in Cariano',\n    provincia: Province.VR,\n  },\n  {\n    comune: \"Sant'Ambrogio di Valpolicella\",\n    provincia: Province.VR,\n  },\n  {\n    comune: \"Sant'Anna d'Alfaedo\",\n    provincia: Province.VR,\n  },\n  {\n    comune: 'San Zeno di Montagna',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Selva di Progno',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Soave',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Sommacampagna',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Sona',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Sorgà',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Terrazzo',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Torri del Benaco',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Tregnago',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Trevenzuolo',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Valeggio sul Mincio',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Velo Veronese',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Verona',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Veronella',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Vestenanova',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Vigasio',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Villa Bartolomea',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Villafranca di Verona',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Zevio',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Zimella',\n    provincia: Province.VR,\n  },\n  {\n    comune: 'Agugliaro',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Albettone',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Alonte',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Altavilla Vicentina',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Altissimo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Arcugnano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Arsiero',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Arzignano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Asiago',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Asigliano Veneto',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Bassano del Grappa',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Bolzano Vicentino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Breganze',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Brendola',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Bressanvido',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Brogliano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Caldogno',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Caltrano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Calvene',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Camisano Vicentino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Campiglia dei Berici',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Carrè',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Cartigliano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Cassola',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Castegnero',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Castelgomberto',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Chiampo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Chiuppano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Cogollo del Cengio',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Cornedo Vicentino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Costabissara',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Creazzo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Crespadoro',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Dueville',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Enego',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Fara Vicentino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Foza',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Gallio',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Gambellara',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Gambugliano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Grisignano di Zocco',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Grumolo delle Abbadesse',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Isola Vicentina',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Laghi',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Lastebasse',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Longare',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Lonigo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Lugo di Vicenza',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Malo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Marano Vicentino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Marostica',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Montebello Vicentino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Montecchio Maggiore',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Montecchio Precalcino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Monte di Malo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Montegalda',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Montegaldella',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Monteviale',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Monticello Conte Otto',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Montorso Vicentino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Mussolente',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Nanto',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Nogarole Vicentino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Nove',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Noventa Vicentina',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Orgiano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Pedemonte',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Pianezze',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Piovene Rocchette',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Pojana Maggiore',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Posina',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Pove del Grappa',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Pozzoleone',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Quinto Vicentino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Recoaro Terme',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Roana',\n    provincia: Province.VI,\n  },\n  {\n    comune: \"Romano d'Ezzelino\",\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Rosà',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Rossano Veneto',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Rotzo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Salcedo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Sandrigo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'San Pietro Mussolino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Santorso',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'San Vito di Leguzzano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Sarcedo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Sarego',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Schiavon',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Schio',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Solagna',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Sossano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Sovizzo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Tezze sul Brenta',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Thiene',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Tonezza del Cimone',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Torrebelvicino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Torri di Quartesolo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Trissino',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Valdagno',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Valdastico',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Valli del Pasubio',\n    provincia: Province.VI,\n  },\n  {\n    comune: \"Velo d'Astico\",\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Vicenza',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Villaga',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Villaverla',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Zanè',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Zermeghedo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Zovencedo',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Zugliano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Val Liona',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Barbarano Mossano',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Valbrenta',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Colceresa',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Lusiana Conco',\n    provincia: Province.VI,\n  },\n  {\n    comune: 'Agordo',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Alano di Piave',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Alleghe',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Arsiè',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Auronzo di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Belluno',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Borca di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Calalzo di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Cencenighe Agordino',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Cesiomaggiore',\n    provincia: Province.BL,\n  },\n  {\n    comune: \"Chies d'Alpago\",\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Cibiana di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Colle Santa Lucia',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Comelico Superiore',\n    provincia: Province.BL,\n  },\n  {\n    comune: \"Cortina d'Ampezzo\",\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Danta di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Domegge di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Falcade',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Feltre',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Fonzaso',\n    provincia: Province.BL,\n  },\n  {\n    comune: \"Canale d'Agordo\",\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Gosaldo',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Lamon',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'La Valle Agordina',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Limana',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Livinallongo del Col di Lana',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Lorenzago di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Lozzo di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Ospitale di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Pedavena',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Perarolo di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Pieve di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Ponte nelle Alpi',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Rivamonte Agordino',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Rocca Pietore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'San Gregorio nelle Alpi',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'San Nicolò di Comelico',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'San Pietro di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Santa Giustina',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'San Tomaso Agordino',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Santo Stefano di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'San Vito di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Sedico',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Selva di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Seren del Grappa',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Sospirolo',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Soverzene',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Sovramonte',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Taibon Agordino',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Tambre',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Vallada Agordina',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Valle di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Vigo di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Vodo Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Voltago Agordino',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Zoppè di Cadore',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Quero Vas',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Longarone',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Alpago',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Val di Zoldo',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Borgo Valbelluna',\n    provincia: Province.BL,\n  },\n  {\n    comune: 'Altivole',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Arcade',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Asolo',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Borso del Grappa',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Breda di Piave',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Caerano di San Marco',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Cappella Maggiore',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Carbonera',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Casale sul Sile',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Casier',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Castelcucco',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Castelfranco Veneto',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Castello di Godego',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Cavaso del Tomba',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Cessalto',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Chiarano',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Cimadolmo',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Cison di Valmarino',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Codognè',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Colle Umberto',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Conegliano',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Cordignano',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Cornuda',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Crocetta del Montello',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Farra di Soligo',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Follina',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Fontanelle',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Fonte',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Fregona',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Gaiarine',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Giavera del Montello',\n    provincia: Province.TV,\n  },\n  {\n    comune: \"Godega di Sant'Urbano\",\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Gorgo al Monticano',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Istrana',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Loria',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Mansuè',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Mareno di Piave',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Maser',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Maserada sul Piave',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Meduna di Livenza',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Miane',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Mogliano Veneto',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Monastier di Treviso',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Monfumo',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Montebelluna',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Morgano',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Moriago della Battaglia',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Motta di Livenza',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Nervesa della Battaglia',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Oderzo',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Ormelle',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Orsago',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Paese',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Pederobba',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Pieve di Soligo',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Ponte di Piave',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Ponzano Veneto',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Portobuffolè',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Possagno',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Povegliano',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Preganziol',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Quinto di Treviso',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Refrontolo',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Resana',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Revine Lago',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Riese Pio X',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Roncade',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Salgareda',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'San Biagio di Callalta',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'San Fior',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'San Pietro di Feletto',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'San Polo di Piave',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Santa Lucia di Piave',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'San Vendemiano',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'San Zenone degli Ezzelini',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Sarmede',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Segusino',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Sernaglia della Battaglia',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Silea',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Spresiano',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Susegana',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Tarzo',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Trevignano',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Treviso',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Valdobbiadene',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Vazzola',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Vedelago',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Vidor',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Villorba',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Vittorio Veneto',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Volpago del Montello',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Zenson di Piave',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Zero Branco',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Pieve del Grappa',\n    provincia: Province.TV,\n  },\n  {\n    comune: 'Annone Veneto',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Campagna Lupia',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Campolongo Maggiore',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Camponogara',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Caorle',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Cavarzere',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Ceggia',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Chioggia',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Cinto Caomaggiore',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Cona',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Concordia Sagittaria',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Dolo',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Eraclea',\n    provincia: Province.VE,\n  },\n  {\n    comune: \"Fiesso d'Artico\",\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Fossalta di Piave',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Fossalta di Portogruaro',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Fossò',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Gruaro',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Jesolo',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Marcon',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Martellago',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Meolo',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Mira',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Mirano',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Musile di Piave',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Noale',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Noventa di Piave',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Pianiga',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Portogruaro',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Pramaggiore',\n    provincia: Province.VE,\n  },\n  {\n    comune: \"Quarto d'Altino\",\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Salzano',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'San Donà di Piave',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'San Michele al Tagliamento',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Santa Maria di Sala',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'San Stino di Livenza',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Scorzè',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Spinea',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Stra',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Teglio Veneto',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Torre di Mosto',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Venezia',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Vigonovo',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Cavallino-Treporti',\n    provincia: Province.VE,\n  },\n  {\n    comune: 'Abano Terme',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Agna',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Albignasego',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Anguillara Veneta',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Arquà Petrarca',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Arre',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Arzergrande',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Bagnoli di Sopra',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Baone',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Barbona',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Battaglia Terme',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Boara Pisani',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Borgoricco',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Bovolenta',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Brugine',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Cadoneghe',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Campodarsego',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Campodoro',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Camposampiero',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Campo San Martino',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Candiana',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Carceri',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Carmignano di Brenta',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Cartura',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Casale di Scodosia',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Casalserugo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Castelbaldo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Cervarese Santa Croce',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Cinto Euganeo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Cittadella',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Codevigo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Conselve',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Correzzola',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Curtarolo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Este',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Fontaniva',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Galliera Veneta',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Galzignano Terme',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Gazzo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Grantorto',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Granze',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Legnaro',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Limena',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Loreggia',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Lozzo Atestino',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Maserà di Padova',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Masi',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Massanzago',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Megliadino San Vitale',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Merlara',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Mestrino',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Monselice',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Montagnana',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Montegrotto Terme',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Noventa Padovana',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Ospedaletto Euganeo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Padova',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Pernumia',\n    provincia: Province.PD,\n  },\n  {\n    comune: \"Piacenza d'Adige\",\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Piazzola sul Brenta',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Piombino Dese',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Piove di Sacco',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Polverara',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Ponso',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Pontelongo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Ponte San Nicolò',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Pozzonovo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Rovolon',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Rubano',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Saccolongo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'San Giorgio delle Pertiche',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'San Giorgio in Bosco',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'San Martino di Lupari',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'San Pietro in Gu',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'San Pietro Viminario',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Santa Giustina in Colle',\n    provincia: Province.PD,\n  },\n  {\n    comune: \"Sant'Angelo di Piove di Sacco\",\n    provincia: Province.PD,\n  },\n  {\n    comune: \"Sant'Elena\",\n    provincia: Province.PD,\n  },\n  {\n    comune: \"Sant'Urbano\",\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Saonara',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Selvazzano Dentro',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Solesino',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Stanghella',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Teolo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Terrassa Padovana',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Tombolo',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Torreglia',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Trebaseleghe',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Tribano',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Urbana',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Veggiano',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Vescovana',\n    provincia: Province.PD,\n  },\n  {\n    comune: \"Vighizzolo d'Este\",\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Vigodarzere',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Vigonza',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Villa del Conte',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Villa Estense',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Villafranca Padovana',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Villanova di Camposampiero',\n    provincia: Province.PD,\n  },\n  {\n    comune: \"Vo'\",\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Due Carrare',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Borgo Veneto',\n    provincia: Province.PD,\n  },\n  {\n    comune: 'Adria',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Ariano nel Polesine',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Arquà Polesine',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Badia Polesine',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Bagnolo di Po',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Bergantino',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Bosaro',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Calto',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Canaro',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Canda',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Castelguglielmo',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Castelmassa',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Castelnovo Bariano',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Ceneselli',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Ceregnano',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Corbola',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Costa di Rovigo',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Crespino',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Ficarolo',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Fiesso Umbertiano',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Frassinelle Polesine',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Fratta Polesine',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Gaiba',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Gavello',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Giacciano con Baruchella',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Guarda Veneta',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Lendinara',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Loreo',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Lusia',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Melara',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Occhiobello',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Papozze',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Pettorazza Grimani',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Pincara',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Polesella',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Pontecchio Polesine',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Porto Tolle',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Rosolina',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Rovigo',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Salara',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'San Bellino',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'San Martino di Venezze',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Stienta',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Taglio di Po',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Trecenta',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Villadose',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Villamarzana',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Villanova del Ghebbo',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Villanova Marchesana',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Porto Viro',\n    provincia: Province.RO,\n  },\n  {\n    comune: 'Aiello del Friuli',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Amaro',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Ampezzo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Aquileia',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Arta Terme',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Artegna',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Attimis',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Bagnaria Arsa',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Basiliano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Bertiolo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Bicinicco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Bordano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Buja',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Buttrio',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Camino al Tagliamento',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Campoformido',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Carlino',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Cassacco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Castions di Strada',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Cavazzo Carnico',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Cercivento',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Cervignano del Friuli',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Chiopris-Viscone',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Chiusaforte',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Cividale del Friuli',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Codroipo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Colloredo di Monte Albano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Comeglians',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Corno di Rosazzo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Coseano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Dignano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Dogna',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Drenchia',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Enemonzo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Faedis',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Fagagna',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Flaibano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Forni Avoltri',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Forni di Sopra',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Forni di Sotto',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Gemona del Friuli',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Gonars',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Grimacco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Latisana',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Lauco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Lestizza',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Lignano Sabbiadoro',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Lusevera',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Magnano in Riviera',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Majano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Malborghetto Valbruna',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Manzano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Marano Lagunare',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Martignacco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Mereto di Tomba',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Moggio Udinese',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Moimacco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Montenars',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Mortegliano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Moruzzo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Muzzana del Turgnano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Nimis',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Osoppo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Ovaro',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Pagnacco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Palazzolo dello Stella',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Palmanova',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Paluzza',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Pasian di Prato',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Paularo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Pavia di Udine',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Pocenia',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Pontebba',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Porpetto',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Povoletto',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Pozzuolo del Friuli',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Pradamano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Prato Carnico',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Precenicco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Premariacco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Preone',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Prepotto',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Pulfero',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Ragogna',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Ravascletto',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Raveo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Reana del Rojale',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Remanzacco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Resia',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Resiutta',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Rigolato',\n    provincia: Province.UD,\n  },\n  {\n    comune: \"Rive d'Arcano\",\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Ronchis',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Ruda',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'San Daniele del Friuli',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'San Giorgio di Nogaro',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'San Giovanni al Natisone',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'San Leonardo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'San Pietro al Natisone',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Santa Maria la Longa',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'San Vito al Torre',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'San Vito di Fagagna',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Sauris',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Savogna',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Sedegliano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Socchieve',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Stregna',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Sutrio',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Taipana',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Talmassons',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Tarcento',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Tarvisio',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Tavagnacco',\n    provincia: Province.UD,\n  },\n  {\n    comune: \"Terzo d'Aquileia\",\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Tolmezzo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Torreano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Torviscosa',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Trasaghis',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Treppo Grande',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Tricesimo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Trivignano Udinese',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Udine',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Varmo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Venzone',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Verzegnis',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Villa Santina',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Visco',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Zuglio',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Forgaria nel Friuli',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Campolongo Tapogliano',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Rivignano Teor',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Sappada',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Fiumicello Villa Vicentina',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Treppo Ligosullo',\n    provincia: Province.UD,\n  },\n  {\n    comune: 'Capriva del Friuli',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Cormons',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Doberdò del Lago',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Dolegna del Collio',\n    provincia: Province.GO,\n  },\n  {\n    comune: \"Farra d'Isonzo\",\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Fogliano Redipuglia',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Gorizia',\n    provincia: Province.GO,\n  },\n  {\n    comune: \"Gradisca d'Isonzo\",\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Grado',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Mariano del Friuli',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Medea',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Monfalcone',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Moraro',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Mossa',\n    provincia: Province.GO,\n  },\n  {\n    comune: \"Romans d'Isonzo\",\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Ronchi dei Legionari',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Sagrado',\n    provincia: Province.GO,\n  },\n  {\n    comune: \"San Canzian d'Isonzo\",\n    provincia: Province.GO,\n  },\n  {\n    comune: 'San Floriano del Collio',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'San Lorenzo Isontino',\n    provincia: Province.GO,\n  },\n  {\n    comune: \"San Pier d'Isonzo\",\n    provincia: Province.GO,\n  },\n  {\n    comune: \"Savogna d'Isonzo\",\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Staranzano',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Turriaco',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Villesse',\n    provincia: Province.GO,\n  },\n  {\n    comune: 'Duino Aurisina',\n    provincia: Province.TS,\n  },\n  {\n    comune: 'Monrupino',\n    provincia: Province.TS,\n  },\n  {\n    comune: 'Muggia',\n    provincia: Province.TS,\n  },\n  {\n    comune: 'San Dorligo della Valle',\n    provincia: Province.TS,\n  },\n  {\n    comune: 'Sgonico',\n    provincia: Province.TS,\n  },\n  {\n    comune: 'Trieste',\n    provincia: Province.TS,\n  },\n  {\n    comune: 'Andreis',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Arba',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Aviano',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Azzano Decimo',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Barcis',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Brugnera',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Budoia',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Caneva',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Casarsa della Delizia',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Castelnovo del Friuli',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Cavasso Nuovo',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Chions',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Cimolais',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Claut',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Clauzetto',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Cordenons',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Cordovado',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Erto e Casso',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Fanna',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Fiume Veneto',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Fontanafredda',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Frisanco',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Maniago',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Meduno',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Montereale Valcellina',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Morsano al Tagliamento',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Pasiano di Pordenone',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Pinzano al Tagliamento',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Polcenigo',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Porcia',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Pordenone',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Prata di Pordenone',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Pravisdomini',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Roveredo in Piano',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Sacile',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'San Giorgio della Richinvelda',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'San Martino al Tagliamento',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'San Quirino',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'San Vito al Tagliamento',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Sequals',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Sesto al Reghena',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Spilimbergo',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Tramonti di Sopra',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Tramonti di Sotto',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Travesio',\n    provincia: Province.PN,\n  },\n  {\n    comune: \"Vito d'Asio\",\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Vivaro',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Zoppola',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Vajont',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Valvasone Arzene',\n    provincia: Province.PN,\n  },\n  {\n    comune: 'Airole',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Apricale',\n    provincia: Province.IM,\n  },\n  {\n    comune: \"Aquila d'Arroscia\",\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Armo',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Aurigo',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Badalucco',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Bajardo',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Bordighera',\n    provincia: Province.IM,\n  },\n  {\n    comune: \"Borghetto d'Arroscia\",\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Borgomaro',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Camporosso',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Caravonica',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Castellaro',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Castel Vittorio',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Ceriana',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Cervo',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Cesio',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Chiusanico',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Chiusavecchia',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Cipressa',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Civezza',\n    provincia: Province.IM,\n  },\n  {\n    comune: \"Cosio d'Arroscia\",\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Costarainera',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Diano Arentino',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Diano Castello',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Diano Marina',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Diano San Pietro',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Dolceacqua',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Dolcedo',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Imperia',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Isolabona',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Lucinasco',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Mendatica',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Molini di Triora',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Montegrosso Pian Latte',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Olivetta San Michele',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Ospedaletti',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Perinaldo',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Pietrabruna',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Pieve di Teco',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Pigna',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Pompeiana',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Pontedassio',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Pornassio',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Prelà',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Ranzo',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Rezzo',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Riva Ligure',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Rocchetta Nervina',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'San Bartolomeo al Mare',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'San Biagio della Cima',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'San Lorenzo al Mare',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Sanremo',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Santo Stefano al Mare',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Seborga',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Soldano',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Taggia',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Terzorio',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Triora',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Vallebona',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Vallecrosia',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Vasia',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Ventimiglia',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Vessalico',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Villa Faraldi',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Montalto Carpasio',\n    provincia: Province.IM,\n  },\n  {\n    comune: 'Alassio',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Albenga',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Albissola Marina',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Albisola Superiore',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Altare',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Andora',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Arnasco',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Balestrino',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Bardineto',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Bergeggi',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Boissano',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Borghetto Santo Spirito',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Borgio Verezzi',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Bormida',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Cairo Montenotte',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Calice Ligure',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Calizzano',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Carcare',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Casanova Lerrone',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Castelbianco',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Castelvecchio di Rocca Barbena',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Celle Ligure',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Cengio',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Ceriale',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Cisano sul Neva',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Cosseria',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Dego',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Erli',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Finale Ligure',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Garlenda',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Giustenice',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Giusvalla',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Laigueglia',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Loano',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Magliolo',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Mallare',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Massimino',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Millesimo',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Mioglia',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Murialdo',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Nasino',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Noli',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Onzo',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Orco Feglino',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Ortovero',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Osiglia',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Pallare',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Piana Crixia',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Pietra Ligure',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Plodio',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Pontinvrea',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Quiliano',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Rialto',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Roccavignale',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Sassello',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Savona',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Spotorno',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Stella',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Stellanello',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Testico',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Toirano',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Tovo San Giacomo',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Urbe',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Vado Ligure',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Varazze',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Vendone',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Vezzi Portio',\n    provincia: Province.SV,\n  },\n  {\n    comune: \"Villanova d'Albenga\",\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Zuccarello',\n    provincia: Province.SV,\n  },\n  {\n    comune: 'Arenzano',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Avegno',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Bargagli',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Bogliasco',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Borzonasca',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Busalla',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Camogli',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Campo Ligure',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Campomorone',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Carasco',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Casarza Ligure',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Casella',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Castiglione Chiavarese',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Ceranesi',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Chiavari',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Cicagna',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Cogoleto',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Cogorno',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Coreglia Ligure',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Crocefieschi',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Davagna',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Fascia',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Favale di Malvaro',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Fontanigorda',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Genova',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Gorreto',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Isola del Cantone',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Lavagna',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Leivi',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Lorsica',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Lumarzo',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Masone',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Mele',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Mezzanego',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Mignanego',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Moconesi',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Moneglia',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Montebruno',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Montoggio',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Ne',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Neirone',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Orero',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Pieve Ligure',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Portofino',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Propata',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Rapallo',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Recco',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Rezzoaglio',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Ronco Scrivia',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Rondanina',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Rossiglione',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Rovegno',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'San Colombano Certenoli',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Santa Margherita Ligure',\n    provincia: Province.GE,\n  },\n  {\n    comune: \"Sant'Olcese\",\n    provincia: Province.GE,\n  },\n  {\n    comune: \"Santo Stefano d'Aveto\",\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Savignone',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Serra Riccò',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Sestri Levante',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Sori',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Tiglieto',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Torriglia',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Tribogna',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Uscio',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Valbrevenna',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Vobbia',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Zoagli',\n    provincia: Province.GE,\n  },\n  {\n    comune: 'Ameglia',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Arcola',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Beverino',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Bolano',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Bonassola',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Borghetto di Vara',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Brugnato',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Calice al Cornoviglio',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Carro',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Carrodano',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Castelnuovo Magra',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Deiva Marina',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Follo',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Framura',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'La Spezia',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Lerici',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Levanto',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Maissana',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Monterosso al Mare',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Luni',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Pignone',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Portovenere',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Riccò del Golfo di Spezia',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Riomaggiore',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Rocchetta di Vara',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Santo Stefano di Magra',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Sarzana',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Sesta Godano',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Varese Ligure',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Vernazza',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Vezzano Ligure',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Zignago',\n    provincia: Province.SP,\n  },\n  {\n    comune: 'Agazzano',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Alseno',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Besenzone',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Bettola',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Bobbio',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Borgonovo Val Tidone',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Cadeo',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Calendasco',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Caorso',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Carpaneto Piacentino',\n    provincia: Province.PC,\n  },\n  {\n    comune: \"Castell'Arquato\",\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Castel San Giovanni',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Castelvetro Piacentino',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Cerignale',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Coli',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Corte Brugnatella',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Cortemaggiore',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Farini',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Ferriere',\n    provincia: Province.PC,\n  },\n  {\n    comune: \"Fiorenzuola d'Arda\",\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Gazzola',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Gossolengo',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Gragnano Trebbiense',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Gropparello',\n    provincia: Province.PC,\n  },\n  {\n    comune: \"Lugagnano Val d'Arda\",\n    provincia: Province.PC,\n  },\n  {\n    comune: \"Monticelli d'Ongina\",\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Morfasso',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Ottone',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Piacenza',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Pianello Val Tidone',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Piozzano',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Podenzano',\n    provincia: Province.PC,\n  },\n  {\n    comune: \"Ponte dell'Olio\",\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Pontenure',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Rivergaro',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Rottofreno',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'San Giorgio Piacentino',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'San Pietro in Cerro',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Sarmato',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Travo',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Vernasca',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Vigolzone',\n    provincia: Province.PC,\n  },\n  {\n    comune: \"Villanova sull'Arda\",\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Zerba',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Ziano Piacentino',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Alta Val Tidone',\n    provincia: Province.PC,\n  },\n  {\n    comune: 'Albareto',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Bardi',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Bedonia',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Berceto',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Bore',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Borgo Val di Taro',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Busseto',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Calestano',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Collecchio',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Colorno',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Compiano',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Corniglio',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Felino',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Fidenza',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Fontanellato',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Fontevivo',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Fornovo di Taro',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Langhirano',\n    provincia: Province.PR,\n  },\n  {\n    comune: \"Lesignano de' Bagni\",\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Medesano',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Monchio delle Corti',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Montechiarugolo',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Neviano degli Arduini',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Noceto',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Palanzano',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Parma',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Pellegrino Parmense',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Roccabianca',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Sala Baganza',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Salsomaggiore Terme',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'San Secondo Parmense',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Solignano',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Soragna',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Terenzo',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Tizzano Val Parma',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Tornolo',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Torrile',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Traversetolo',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Valmozzola',\n    provincia: Province.PR,\n  },\n  {\n    comune: \"Varano de' Melegari\",\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Varsi',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Sissa Trecasali',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Polesine Zibello',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Sorbolo Mezzani',\n    provincia: Province.PR,\n  },\n  {\n    comune: 'Albinea',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Bagnolo in Piano',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Baiso',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Bibbiano',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Boretto',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Brescello',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Cadelbosco di Sopra',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Campagnola Emilia',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Campegine',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Carpineti',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Casalgrande',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Casina',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Castellarano',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Castelnovo di Sotto',\n    provincia: Province.RE,\n  },\n  {\n    comune: \"Castelnovo ne' Monti\",\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Cavriago',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Canossa',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Correggio',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Fabbrico',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Gattatico',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Gualtieri',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Guastalla',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Luzzara',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Montecchio Emilia',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Novellara',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Poviglio',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Quattro Castella',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Reggiolo',\n    provincia: Province.RE,\n  },\n  {\n    comune: \"Reggio nell'Emilia\",\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Rio Saliceto',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Rolo',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Rubiera',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'San Martino in Rio',\n    provincia: Province.RE,\n  },\n  {\n    comune: \"San Polo d'Enza\",\n    provincia: Province.RE,\n  },\n  {\n    comune: \"Sant'Ilario d'Enza\",\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Scandiano',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Toano',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Vetto',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Vezzano sul Crostolo',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Viano',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Villa Minozzo',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Ventasso',\n    provincia: Province.RE,\n  },\n  {\n    comune: 'Bastiglia',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Bomporto',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Campogalliano',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Camposanto',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Carpi',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Castelfranco Emilia',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Castelnuovo Rangone',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Castelvetro di Modena',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Cavezzo',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Concordia sulla Secchia',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Fanano',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Finale Emilia',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Fiorano Modenese',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Fiumalbo',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Formigine',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Frassinoro',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Guiglia',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Lama Mocogno',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Maranello',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Marano sul Panaro',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Medolla',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Mirandola',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Modena',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Montecreto',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Montefiorino',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Montese',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Nonantola',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Novi di Modena',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Palagano',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Pavullo nel Frignano',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Pievepelago',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Polinago',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Prignano sulla Secchia',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Ravarino',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Riolunato',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'San Cesario sul Panaro',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'San Felice sul Panaro',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'San Possidonio',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'San Prospero',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Sassuolo',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Savignano sul Panaro',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Serramazzoni',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Sestola',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Soliera',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Spilamberto',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Vignola',\n    provincia: Province.MO,\n  },\n  {\n    comune: 'Zocca',\n    provincia: Province.MO,\n  },\n  {\n    comune: \"Anzola dell'Emilia\",\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Argelato',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Baricella',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Bentivoglio',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Bologna',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Borgo Tossignano',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Budrio',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Calderara di Reno',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Camugnano',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Casalecchio di Reno',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Casalfiumanese',\n    provincia: Province.BO,\n  },\n  {\n    comune: \"Castel d'Aiano\",\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Castel del Rio',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Castel di Casio',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Castel Guelfo di Bologna',\n    provincia: Province.BO,\n  },\n  {\n    comune: \"Castello d'Argile\",\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Castel Maggiore',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Castel San Pietro Terme',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Castenaso',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Castiglione dei Pepoli',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Crevalcore',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Dozza',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Fontanelice',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Gaggio Montano',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Galliera',\n    provincia: Province.BO,\n  },\n  {\n    comune: \"Granarolo dell'Emilia\",\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Grizzana Morandi',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Imola',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Lizzano in Belvedere',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Loiano',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Malalbergo',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Marzabotto',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Medicina',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Minerbio',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Molinella',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Monghidoro',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Monterenzio',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Monte San Pietro',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Monzuno',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Mordano',\n    provincia: Province.BO,\n  },\n  {\n    comune: \"Ozzano dell'Emilia\",\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Pianoro',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Pieve di Cento',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Sala Bolognese',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'San Benedetto Val di Sambro',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'San Giorgio di Piano',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'San Giovanni in Persiceto',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'San Lazzaro di Savena',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'San Pietro in Casale',\n    provincia: Province.BO,\n  },\n  {\n    comune: \"Sant'Agata Bolognese\",\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Sasso Marconi',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Vergato',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Zola Predosa',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Valsamoggia',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Alto Reno Terme',\n    provincia: Province.BO,\n  },\n  {\n    comune: 'Argenta',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Bondeno',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Cento',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Codigoro',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Comacchio',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Copparo',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Ferrara',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Jolanda di Savoia',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Lagosanto',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Masi Torello',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Mesola',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Ostellato',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Poggio Renatico',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Portomaggiore',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Vigarano Mainarda',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Voghiera',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Goro',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Fiscaglia',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Terre del Reno',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Riva del Po',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Tresignana',\n    provincia: Province.FE,\n  },\n  {\n    comune: 'Alfonsine',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Bagnacavallo',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Bagnara di Romagna',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Brisighella',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Casola Valsenio',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Castel Bolognese',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Cervia',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Conselice',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Cotignola',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Faenza',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Fusignano',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Lugo',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Massa Lombarda',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Ravenna',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Riolo Terme',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Russi',\n    provincia: Province.RA,\n  },\n  {\n    comune: \"Sant'Agata sul Santerno\",\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Solarolo',\n    provincia: Province.RA,\n  },\n  {\n    comune: 'Bagno di Romagna',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Bertinoro',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Borghi',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Castrocaro Terme e Terra del Sole',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Cesena',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Cesenatico',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Civitella di Romagna',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Dovadola',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Forlì',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Forlimpopoli',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Galeata',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Gambettola',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Gatteo',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Longiano',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Meldola',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Mercato Saraceno',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Modigliana',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Montiano',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Portico e San Benedetto',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Predappio',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Premilcuore',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Rocca San Casciano',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Roncofreddo',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'San Mauro Pascoli',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Santa Sofia',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Sarsina',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Savignano sul Rubicone',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Sogliano al Rubicone',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Tredozio',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Verghereto',\n    provincia: Province.FC,\n  },\n  {\n    comune: 'Bellaria-Igea Marina',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Cattolica',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Coriano',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Gemmano',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Misano Adriatico',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Mondaino',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Montefiore Conca',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Montegridolfo',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Morciano di Romagna',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Riccione',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Rimini',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Saludecio',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'San Clemente',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'San Giovanni in Marignano',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Santarcangelo di Romagna',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Verucchio',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Casteldelci',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Maiolo',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Novafeltria',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Pennabilli',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'San Leo',\n    provincia: Province.RN,\n  },\n  {\n    comune: \"Sant'Agata Feltria\",\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Talamello',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Poggio Torriana',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Montescudo-Monte Colombo',\n    provincia: Province.RN,\n  },\n  {\n    comune: 'Aulla',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Bagnone',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Carrara',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Casola in Lunigiana',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Comano',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Filattiera',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Fivizzano',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Fosdinovo',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Licciana Nardi',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Massa',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Montignoso',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Mulazzo',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Podenzana',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Pontremoli',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Tresana',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Villafranca in Lunigiana',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Zeri',\n    provincia: Province.MS,\n  },\n  {\n    comune: 'Altopascio',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Bagni di Lucca',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Barga',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Borgo a Mozzano',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Camaiore',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Camporgiano',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Capannori',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Careggine',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Castelnuovo di Garfagnana',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Castiglione di Garfagnana',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Coreglia Antelminelli',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Forte dei Marmi',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Fosciandora',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Gallicano',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Lucca',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Massarosa',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Minucciano',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Molazzana',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Montecarlo',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Pescaglia',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Piazza al Serchio',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Pietrasanta',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Pieve Fosciana',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Porcari',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'San Romano in Garfagnana',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Seravezza',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Stazzema',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Vagli Sotto',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Viareggio',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Villa Basilica',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Villa Collemandina',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Fabbriche di Vergemoli',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Sillano Giuncugnano',\n    provincia: Province.LU,\n  },\n  {\n    comune: 'Agliana',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Buggiano',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Lamporecchio',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Larciano',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Marliana',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Massa e Cozzile',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Monsummano Terme',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Montale',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Montecatini-Terme',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Pescia',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Pieve a Nievole',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Pistoia',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Ponte Buggianese',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Quarrata',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Sambuca Pistoiese',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Serravalle Pistoiese',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Uzzano',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Chiesina Uzzanese',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Abetone Cutigliano',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'San Marcello Piteglio',\n    provincia: Province.PT,\n  },\n  {\n    comune: 'Bagno a Ripoli',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Barberino di Mugello',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Borgo San Lorenzo',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Calenzano',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Campi Bisenzio',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Capraia e Limite',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Castelfiorentino',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Cerreto Guidi',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Certaldo',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Dicomano',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Empoli',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Fiesole',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Firenze',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Firenzuola',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Fucecchio',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Gambassi Terme',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Greve in Chianti',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Impruneta',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Lastra a Signa',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Londa',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Marradi',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Montaione',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Montelupo Fiorentino',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Montespertoli',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Palazzuolo sul Senio',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Pelago',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Pontassieve',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Reggello',\n    provincia: Province.FI,\n  },\n  {\n    comune: \"Rignano sull'Arno\",\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Rufina',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'San Casciano in Val di Pesa',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'San Godenzo',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Scandicci',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Sesto Fiorentino',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Signa',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Vaglia',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Vicchio',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Vinci',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Figline e Incisa Valdarno',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Scarperia e San Piero',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Barberino Tavarnelle',\n    provincia: Province.FI,\n  },\n  {\n    comune: 'Bibbona',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Campiglia Marittima',\n    provincia: Province.LI,\n  },\n  {\n    comune: \"Campo nell'Elba\",\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Capoliveri',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Capraia Isola',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Castagneto Carducci',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Cecina',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Collesalvetti',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Livorno',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Marciana',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Marciana Marina',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Piombino',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Porto Azzurro',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Portoferraio',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Rosignano Marittimo',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'San Vincenzo',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Sassetta',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Suvereto',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Rio',\n    provincia: Province.LI,\n  },\n  {\n    comune: 'Bientina',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Buti',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Calci',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Calcinaia',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Capannoli',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Casale Marittimo',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Cascina',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Castelfranco di Sotto',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Castellina Marittima',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Castelnuovo di Val di Cecina',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Chianni',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Fauglia',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Guardistallo',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Lajatico',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Montecatini Val di Cecina',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Montescudaio',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Monteverdi Marittimo',\n    provincia: Province.PI,\n  },\n  {\n    comune: \"Montopoli in Val d'Arno\",\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Orciano Pisano',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Palaia',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Peccioli',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Pisa',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Pomarance',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Ponsacco',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Pontedera',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Riparbella',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'San Giuliano Terme',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'San Miniato',\n    provincia: Province.PI,\n  },\n  {\n    comune: \"Santa Croce sull'Arno\",\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Santa Luce',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Santa Maria a Monte',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Terricciola',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Vecchiano',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Vicopisano',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Volterra',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Casciana Terme Lari',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Crespina Lorenzana',\n    provincia: Province.PI,\n  },\n  {\n    comune: 'Anghiari',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Arezzo',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Badia Tedalda',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Bibbiena',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Bucine',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Capolona',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Caprese Michelangelo',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Castel Focognano',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Castel San Niccolò',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Castiglion Fibocchi',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Castiglion Fiorentino',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Cavriglia',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Chitignano',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Chiusi della Verna',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Civitella in Val di Chiana',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Cortona',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Foiano della Chiana',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Loro Ciuffenna',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Lucignano',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Marciano della Chiana',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Montemignaio',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Monterchi',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Monte San Savino',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Montevarchi',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Ortignano Raggiolo',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Pieve Santo Stefano',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Poppi',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'San Giovanni Valdarno',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Sansepolcro',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Sestino',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Subbiano',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Talla',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Terranuova Bracciolini',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Castelfranco Piandiscò',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Pratovecchio Stia',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Laterina Pergine Valdarno',\n    provincia: Province.AR,\n  },\n  {\n    comune: 'Abbadia San Salvatore',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Asciano',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Buonconvento',\n    provincia: Province.SI,\n  },\n  {\n    comune: \"Casole d'Elsa\",\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Castellina in Chianti',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Castelnuovo Berardenga',\n    provincia: Province.SI,\n  },\n  {\n    comune: \"Castiglione d'Orcia\",\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Cetona',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Chianciano Terme',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Chiusdino',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Chiusi',\n    provincia: Province.SI,\n  },\n  {\n    comune: \"Colle di Val d'Elsa\",\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Gaiole in Chianti',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Montepulciano',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Monteriggioni',\n    provincia: Province.SI,\n  },\n  {\n    comune: \"Monteroni d'Arbia\",\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Monticiano',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Murlo',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Piancastagnaio',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Pienza',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Poggibonsi',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Radda in Chianti',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Radicofani',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Radicondoli',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Rapolano Terme',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'San Casciano dei Bagni',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'San Gimignano',\n    provincia: Province.SI,\n  },\n  {\n    comune: \"San Quirico d'Orcia\",\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Sarteano',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Siena',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Sinalunga',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Sovicille',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Torrita di Siena',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Trequanda',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Montalcino',\n    provincia: Province.SI,\n  },\n  {\n    comune: 'Arcidosso',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Campagnatico',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Capalbio',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Castel del Piano',\n    provincia: Province.GR,\n  },\n  {\n    comune: \"Castell'Azzara\",\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Castiglione della Pescaia',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Cinigiano',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Civitella Paganico',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Follonica',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Gavorrano',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Grosseto',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Isola del Giglio',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Magliano in Toscana',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Manciano',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Massa Marittima',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Monte Argentario',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Montieri',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Orbetello',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Pitigliano',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Roccalbegna',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Roccastrada',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Santa Fiora',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Scansano',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Scarlino',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Seggiano',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Sorano',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Monterotondo Marittimo',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Semproniano',\n    provincia: Province.GR,\n  },\n  {\n    comune: 'Cantagallo',\n    provincia: Province.PO,\n  },\n  {\n    comune: 'Carmignano',\n    provincia: Province.PO,\n  },\n  {\n    comune: 'Montemurlo',\n    provincia: Province.PO,\n  },\n  {\n    comune: 'Poggio a Caiano',\n    provincia: Province.PO,\n  },\n  {\n    comune: 'Prato',\n    provincia: Province.PO,\n  },\n  {\n    comune: 'Vaiano',\n    provincia: Province.PO,\n  },\n  {\n    comune: 'Vernio',\n    provincia: Province.PO,\n  },\n  {\n    comune: 'Assisi',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Bastia Umbra',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Bettona',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Bevagna',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Campello sul Clitunno',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Cannara',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Cascia',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Castel Ritaldi',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Castiglione del Lago',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Cerreto di Spoleto',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Citerna',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Città della Pieve',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Città di Castello',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Collazzone',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Corciano',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Costacciaro',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Deruta',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Foligno',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Fossato di Vico',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Fratta Todina',\n    provincia: Province.PG,\n  },\n  {\n    comune: \"Giano dell'Umbria\",\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Gualdo Cattaneo',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Gualdo Tadino',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Gubbio',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Lisciano Niccone',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Magione',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Marsciano',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Massa Martana',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Monte Castello di Vibio',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Montefalco',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Monteleone di Spoleto',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Monte Santa Maria Tiberina',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Montone',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Nocera Umbra',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Norcia',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Paciano',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Panicale',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Passignano sul Trasimeno',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Perugia',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Piegaro',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Pietralunga',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Poggiodomo',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Preci',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'San Giustino',\n    provincia: Province.PG,\n  },\n  {\n    comune: \"Sant'Anatolia di Narco\",\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Scheggia e Pascelupo',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Scheggino',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Sellano',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Sigillo',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Spello',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Spoleto',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Todi',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Torgiano',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Trevi',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Tuoro sul Trasimeno',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Umbertide',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Valfabbrica',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Vallo di Nera',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Valtopina',\n    provincia: Province.PG,\n  },\n  {\n    comune: 'Acquasparta',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Allerona',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Alviano',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Amelia',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Arrone',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Attigliano',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Baschi',\n    provincia: Province.TR,\n  },\n  {\n    comune: \"Calvi dell'Umbria\",\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Castel Giorgio',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Castel Viscardo',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Fabro',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Ferentillo',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Ficulle',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Giove',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Guardea',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Lugnano in Teverina',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Montecastrilli',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Montecchio',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Montefranco',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Montegabbione',\n    provincia: Province.TR,\n  },\n  {\n    comune: \"Monteleone d'Orvieto\",\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Narni',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Orvieto',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Otricoli',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Parrano',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Penna in Teverina',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Polino',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Porano',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'San Gemini',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'San Venanzo',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Stroncone',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Terni',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Avigliano Umbro',\n    provincia: Province.TR,\n  },\n  {\n    comune: 'Acqualagna',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Apecchio',\n    provincia: Province.PU,\n  },\n  {\n    comune: \"Belforte all'Isauro\",\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Borgo Pace',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Cagli',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Cantiano',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Carpegna',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Cartoceto',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Fano',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Fermignano',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Fossombrone',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Fratte Rosa',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Frontino',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Frontone',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Gabicce Mare',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Gradara',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Isola del Piano',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Lunano',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Macerata Feltria',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Mercatello sul Metauro',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Mercatino Conca',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Mombaroccio',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Mondavio',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Mondolfo',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Montecalvo in Foglia',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Monte Cerignone',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Montecopiolo',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Montefelcino',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Monte Grimano Terme',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Montelabbate',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Monte Porzio',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Peglio',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Pergola',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Pesaro',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Petriano',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Piandimeleto',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Pietrarubbia',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Piobbico',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'San Costanzo',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'San Lorenzo in Campo',\n    provincia: Province.PU,\n  },\n  {\n    comune: \"Sant'Angelo in Vado\",\n    provincia: Province.PU,\n  },\n  {\n    comune: \"Sant'Ippolito\",\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Sassofeltrio',\n    provincia: Province.PU,\n  },\n  {\n    comune: \"Serra Sant'Abbondio\",\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Tavoleto',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Tavullia',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Urbania',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Urbino',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Vallefoglia',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Colli al Metauro',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Terre Roveresche',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Sassocorvaro Auditore',\n    provincia: Province.PU,\n  },\n  {\n    comune: 'Agugliano',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Ancona',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Arcevia',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Barbara',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Belvedere Ostrense',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Camerano',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Camerata Picena',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Castelbellino',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Castelfidardo',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Castelleone di Suasa',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Castelplanio',\n    provincia: Province.AN,\n  },\n  {\n    comune: \"Cerreto d'Esi\",\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Chiaravalle',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Corinaldo',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Cupramontana',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Fabriano',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Falconara Marittima',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Filottrano',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Genga',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Jesi',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Loreto',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Maiolati Spontini',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Mergo',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Monsano',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Montecarotto',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Montemarciano',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Monte Roberto',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Monte San Vito',\n    provincia: Province.AN,\n  },\n  {\n    comune: \"Morro d'Alba\",\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Numana',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Offagna',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Osimo',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Ostra',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Ostra Vetere',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Poggio San Marcello',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Polverigi',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Rosora',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'San Marcello',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'San Paolo di Jesi',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Santa Maria Nuova',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Sassoferrato',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Senigallia',\n    provincia: Province.AN,\n  },\n  {\n    comune: \"Serra de' Conti\",\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Serra San Quirico',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Sirolo',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Staffolo',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Trecastelli',\n    provincia: Province.AN,\n  },\n  {\n    comune: 'Apiro',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Appignano',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Belforte del Chienti',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Bolognola',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Caldarola',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Camerino',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Camporotondo di Fiastrone',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Castelraimondo',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Castelsantangelo sul Nera',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Cessapalombo',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Cingoli',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Civitanova Marche',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Colmurano',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Corridonia',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Esanatoglia',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Fiastra',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Fiuminata',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Gagliole',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Gualdo',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Loro Piceno',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Macerata',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Matelica',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Mogliano',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Montecassiano',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Monte Cavallo',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Montecosaro',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Montefano',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Montelupone',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Monte San Giusto',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Monte San Martino',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Morrovalle',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Muccia',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Penna San Giovanni',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Petriolo',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Pieve Torina',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Pioraco',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Poggio San Vicino',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Pollenza',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Porto Recanati',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Potenza Picena',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Recanati',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Ripe San Ginesio',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'San Ginesio',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'San Severino Marche',\n    provincia: Province.MC,\n  },\n  {\n    comune: \"Sant'Angelo in Pontano\",\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Sarnano',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Sefro',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Serrapetrona',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Serravalle di Chienti',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Tolentino',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Treia',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Urbisaglia',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Ussita',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Visso',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Valfornace',\n    provincia: Province.MC,\n  },\n  {\n    comune: 'Acquasanta Terme',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Acquaviva Picena',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Appignano del Tronto',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Arquata del Tronto',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Ascoli Piceno',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Carassai',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Castel di Lama',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Castignano',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Castorano',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Colli del Tronto',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Comunanza',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Cossignano',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Cupra Marittima',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Folignano',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Force',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Grottammare',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Maltignano',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Massignano',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Monsampolo del Tronto',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Montalto delle Marche',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Montedinove',\n    provincia: Province.AP,\n  },\n  {\n    comune: \"Montefiore dell'Aso\",\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Montegallo',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Montemonaco',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Monteprandone',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Offida',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Palmiano',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Ripatransone',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Roccafluvione',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Rotella',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'San Benedetto del Tronto',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Spinetoli',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Venarotta',\n    provincia: Province.AP,\n  },\n  {\n    comune: 'Altidona',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Amandola',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Belmonte Piceno',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Campofilone',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Falerone',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Fermo',\n    provincia: Province.FM,\n  },\n  {\n    comune: \"Francavilla d'Ete\",\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Grottazzolina',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Lapedona',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Magliano di Tenna',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Massa Fermana',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Monsampietro Morico',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Montappone',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Montefalcone Appennino',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Montefortino',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Monte Giberto',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Montegiorgio',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Montegranaro',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Monteleone di Fermo',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Montelparo',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Monte Rinaldo',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Monterubbiano',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Monte San Pietrangeli',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Monte Urano',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Monte Vidon Combatte',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Monte Vidon Corrado',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Montottone',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Moresco',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Ortezzano',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Pedaso',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Petritoli',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Ponzano di Fermo',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Porto San Giorgio',\n    provincia: Province.FM,\n  },\n  {\n    comune: \"Porto Sant'Elpidio\",\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Rapagnano',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Santa Vittoria in Matenano',\n    provincia: Province.FM,\n  },\n  {\n    comune: \"Sant'Elpidio a Mare\",\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Servigliano',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Smerillo',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Torre San Patrizio',\n    provincia: Province.FM,\n  },\n  {\n    comune: 'Acquapendente',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Arlena di Castro',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Bagnoregio',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Barbarano Romano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Bassano Romano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Bassano in Teverina',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Blera',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Bolsena',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Bomarzo',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Calcata',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Canepina',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Canino',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Capodimonte',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Capranica',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Caprarola',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Carbognano',\n    provincia: Province.VT,\n  },\n  {\n    comune: \"Castel Sant'Elia\",\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Castiglione in Teverina',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Celleno',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Cellere',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Civita Castellana',\n    provincia: Province.VT,\n  },\n  {\n    comune: \"Civitella d'Agliano\",\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Corchiano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Fabrica di Roma',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Faleria',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Farnese',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Gallese',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Gradoli',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Graffignano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Grotte di Castro',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Ischia di Castro',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Latera',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Lubriano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Marta',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Montalto di Castro',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Montefiascone',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Monte Romano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Monterosi',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Nepi',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Onano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Oriolo Romano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Orte',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Piansano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Proceno',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Ronciglione',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Villa San Giovanni in Tuscia',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'San Lorenzo Nuovo',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Soriano nel Cimino',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Sutri',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Tarquinia',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Tessennano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Tuscania',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Valentano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Vallerano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Vasanello',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Vejano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Vetralla',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Vignanello',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Viterbo',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Vitorchiano',\n    provincia: Province.VT,\n  },\n  {\n    comune: 'Accumoli',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Amatrice',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Antrodoco',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Ascrea',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Belmonte in Sabina',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Borbona',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Borgorose',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Borgo Velino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Cantalice',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Cantalupo in Sabina',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Casaprota',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Casperia',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Castel di Tora',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Castelnuovo di Farfa',\n    provincia: Province.RI,\n  },\n  {\n    comune: \"Castel Sant'Angelo\",\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Cittaducale',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Cittareale',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Collalto Sabino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Colle di Tora',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Collegiove',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Collevecchio',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Colli sul Velino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Concerviano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Configni',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Contigliano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Cottanello',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Fara in Sabina',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Fiamignano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Forano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Frasso Sabino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Greccio',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Labro',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Leonessa',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Longone Sabino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Magliano Sabina',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Marcetelli',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Micigliano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Mompeo',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Montasola',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Montebuono',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Monteleone Sabino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Montenero Sabino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Monte San Giovanni in Sabina',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Montopoli di Sabina',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Morro Reatino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Nespolo',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Orvinio',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Paganico Sabino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Pescorocchiano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Petrella Salto',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Poggio Bustone',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Poggio Catino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Poggio Mirteto',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Poggio Moiano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Poggio Nativo',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Poggio San Lorenzo',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Posta',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Pozzaglia Sabina',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Rieti',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Rivodutri',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Roccantica',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Rocca Sinibalda',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Salisano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Scandriglia',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Selci',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Stimigliano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Tarano',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Toffia',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Torricella in Sabina',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Torri in Sabina',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Turania',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Vacone',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Varco Sabino',\n    provincia: Province.RI,\n  },\n  {\n    comune: 'Affile',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Agosta',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Albano Laziale',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Allumiere',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Anguillara Sabazia',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Anticoli Corrado',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Anzio',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Arcinazzo Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Ariccia',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Arsoli',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Artena',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Bellegra',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Bracciano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Camerata Nuova',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Campagnano di Roma',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Canale Monterano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Canterano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Capena',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Capranica Prenestina',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Carpineto Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Casape',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Castel Gandolfo',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Castel Madama',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Castelnuovo di Porto',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Castel San Pietro Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Cave',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Cerreto Laziale',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Cervara di Roma',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Cerveteri',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Ciciliano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Cineto Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Civitavecchia',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Civitella San Paolo',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Colleferro',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Colonna',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Fiano Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Filacciano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Formello',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Frascati',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Gallicano nel Lazio',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Gavignano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Genazzano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Genzano di Roma',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Gerano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Gorga',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Grottaferrata',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Guidonia Montecelio',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Jenne',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Labico',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Lanuvio',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Licenza',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Magliano Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Mandela',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Manziana',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Marano Equo',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Marcellina',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Marino',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Mazzano Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Mentana',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Monte Compatri',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Monteflavio',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Montelanico',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Montelibretti',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Monte Porzio Catone',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Monterotondo',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Montorio Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Moricone',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Morlupo',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Nazzano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Nemi',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Nerola',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Nettuno',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Olevano Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Palestrina',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Palombara Sabina',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Percile',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Pisoniano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Poli',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Pomezia',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Ponzano Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Riano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Rignano Flaminio',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Riofreddo',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Rocca Canterano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Rocca di Cave',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Rocca di Papa',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Roccagiovine',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Rocca Priora',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Rocca Santo Stefano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Roiate',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Roma',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Roviano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Sacrofano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Sambuci',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'San Gregorio da Sassola',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'San Polo dei Cavalieri',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Santa Marinella',\n    provincia: Province.RM,\n  },\n  {\n    comune: \"Sant'Angelo Romano\",\n    provincia: Province.RM,\n  },\n  {\n    comune: \"Sant'Oreste\",\n    provincia: Province.RM,\n  },\n  {\n    comune: 'San Vito Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Saracinesco',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Segni',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Subiaco',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Tivoli',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Tolfa',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Torrita Tiberina',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Trevignano Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Vallepietra',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Vallinfreda',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Valmontone',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Velletri',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Vicovaro',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Vivaro Romano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Zagarolo',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Lariano',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Ladispoli',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Ardea',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Ciampino',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'San Cesareo',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Fiumicino',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Fonte Nuova',\n    provincia: Province.RM,\n  },\n  {\n    comune: 'Aprilia',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Bassiano',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Campodimele',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Castelforte',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Cisterna di Latina',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Cori',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Fondi',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Formia',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Gaeta',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Itri',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Latina',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Lenola',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Maenza',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Minturno',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Monte San Biagio',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Norma',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Pontinia',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Ponza',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Priverno',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Prossedi',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Roccagorga',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Rocca Massima',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Roccasecca dei Volsci',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Sabaudia',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'San Felice Circeo',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Santi Cosma e Damiano',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Sermoneta',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Sezze',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Sonnino',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Sperlonga',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Spigno Saturnia',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Terracina',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Ventotene',\n    provincia: Province.LT,\n  },\n  {\n    comune: 'Acquafondata',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Acuto',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Alatri',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Alvito',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Amaseno',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Anagni',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Aquino',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Arce',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Arnara',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Arpino',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Atina',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Ausonia',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Belmonte Castello',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Boville Ernica',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Broccostella',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Campoli Appennino',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Casalattico',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Casalvieri',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Cassino',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Castelliri',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Castelnuovo Parano',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Castrocielo',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Castro dei Volsci',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Ceccano',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Ceprano',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Cervaro',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Colfelice',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Collepardo',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Colle San Magno',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Coreno Ausonio',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Esperia',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Falvaterra',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Ferentino',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Filettino',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Fiuggi',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Fontana Liri',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Fontechiari',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Frosinone',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Fumone',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Gallinaro',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Giuliano di Roma',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Guarcino',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Isola del Liri',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Monte San Giovanni Campano',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Morolo',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Paliano',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Pastena',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Patrica',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Pescosolido',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Picinisco',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Pico',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Piedimonte San Germano',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Piglio',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Pignataro Interamna',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Pofi',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Pontecorvo',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Posta Fibreno',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Ripi',\n    provincia: Province.FR,\n  },\n  {\n    comune: \"Rocca d'Arce\",\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Roccasecca',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'San Biagio Saracinisco',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'San Donato Val di Comino',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'San Giorgio a Liri',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'San Giovanni Incarico',\n    provincia: Province.FR,\n  },\n  {\n    comune: \"Sant'Ambrogio sul Garigliano\",\n    provincia: Province.FR,\n  },\n  {\n    comune: \"Sant'Andrea del Garigliano\",\n    provincia: Province.FR,\n  },\n  {\n    comune: \"Sant'Apollinare\",\n    provincia: Province.FR,\n  },\n  {\n    comune: \"Sant'Elia Fiumerapido\",\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Santopadre',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'San Vittore del Lazio',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Serrone',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Settefrati',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Sgurgola',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Sora',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Strangolagalli',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Supino',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Terelle',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Torre Cajetani',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Torrice',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Trevi nel Lazio',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Trivigliano',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Vallecorsa',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Vallemaio',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Vallerotonda',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Veroli',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Vicalvi',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Vico nel Lazio',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Villa Latina',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Villa Santa Lucia',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Villa Santo Stefano',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Viticuso',\n    provincia: Province.FR,\n  },\n  {\n    comune: 'Acciano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Aielli',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Alfedena',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Anversa degli Abruzzi',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Ateleta',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Avezzano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Balsorano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Barete',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Barisciano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Barrea',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Bisegna',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Bugnara',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Cagnano Amiterno',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Calascio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Campo di Giove',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Campotosto',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Canistro',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Cansano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Capestrano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Capistrello',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Capitignano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Caporciano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Cappadocia',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Carapelle Calvisio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Carsoli',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Castel del Monte',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Castel di Ieri',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Castel di Sangro',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Castellafiume',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Castelvecchio Calvisio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Castelvecchio Subequo',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Celano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Cerchio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: \"Civita d'Antino\",\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Civitella Alfedena',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Civitella Roveto',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Cocullo',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Collarmele',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Collelongo',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Collepietro',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Corfinio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Fagnano Alto',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Fontecchio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Fossa',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Gagliano Aterno',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Gioia dei Marsi',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Goriano Sicoli',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Introdacqua',\n    provincia: Province.AQ,\n  },\n  {\n    comune: \"L'Aquila\",\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Lecce nei Marsi',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Luco dei Marsi',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Lucoli',\n    provincia: Province.AQ,\n  },\n  {\n    comune: \"Magliano de' Marsi\",\n    provincia: Province.AQ,\n  },\n  {\n    comune: \"Massa d'Albe\",\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Molina Aterno',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Montereale',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Morino',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Navelli',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Ocre',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Ofena',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Opi',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Oricola',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Ortona dei Marsi',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Ortucchio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Ovindoli',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Pacentro',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Pereto',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Pescasseroli',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Pescina',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Pescocostanzo',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Pettorano sul Gizio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Pizzoli',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Poggio Picenze',\n    provincia: Province.AQ,\n  },\n  {\n    comune: \"Prata d'Ansidonia\",\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Pratola Peligna',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Prezza',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Raiano',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Rivisondoli',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Roccacasale',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Rocca di Botte',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Rocca di Cambio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Rocca di Mezzo',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Rocca Pia',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Roccaraso',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'San Benedetto dei Marsi',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'San Benedetto in Perillis',\n    provincia: Province.AQ,\n  },\n  {\n    comune: \"San Demetrio ne' Vestini\",\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'San Pio delle Camere',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Sante Marie',\n    provincia: Province.AQ,\n  },\n  {\n    comune: \"Sant'Eusanio Forconese\",\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Santo Stefano di Sessanio',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'San Vincenzo Valle Roveto',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Scanno',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Scontrone',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Scoppito',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Scurcola Marsicana',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Secinaro',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Sulmona',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Tagliacozzo',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Tione degli Abruzzi',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Tornimparte',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Trasacco',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Villalago',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Villa Santa Lucia degli Abruzzi',\n    provincia: Province.AQ,\n  },\n  {\n    comune: \"Villa Sant'Angelo\",\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Villavallelonga',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Villetta Barrea',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Vittorito',\n    provincia: Province.AQ,\n  },\n  {\n    comune: 'Alba Adriatica',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Ancarano',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Arsita',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Atri',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Basciano',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Bellante',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Bisenti',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Campli',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Canzano',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Castel Castagna',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Castellalto',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Castelli',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Castiglione Messer Raimondo',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Castilenti',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Cellino Attanasio',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Cermignano',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Civitella del Tronto',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Colledara',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Colonnella',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Controguerra',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Corropoli',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Cortino',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Crognaleto',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Fano Adriano',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Giulianova',\n    provincia: Province.TE,\n  },\n  {\n    comune: \"Isola del Gran Sasso d'Italia\",\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Montefino',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Montorio al Vomano',\n    provincia: Province.TE,\n  },\n  {\n    comune: \"Morro d'Oro\",\n    provincia: Province.TE,\n  },\n  {\n    comune: \"Mosciano Sant'Angelo\",\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Nereto',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Notaresco',\n    provincia: Province.TE,\n  },\n  {\n    comune: \"Penna Sant'Andrea\",\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Pietracamela',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Pineto',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Rocca Santa Maria',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Roseto degli Abruzzi',\n    provincia: Province.TE,\n  },\n  {\n    comune: \"Sant'Egidio alla Vibrata\",\n    provincia: Province.TE,\n  },\n  {\n    comune: \"Sant'Omero\",\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Silvi',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Teramo',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Torano Nuovo',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Torricella Sicura',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Tortoreto',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Tossicia',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Valle Castellana',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Martinsicuro',\n    provincia: Province.TE,\n  },\n  {\n    comune: 'Abbateggio',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Alanno',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Bolognano',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Brittoli',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Bussi sul Tirino',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Cappelle sul Tavo',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Caramanico Terme',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Carpineto della Nora',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Castiglione a Casauria',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Catignano',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Cepagatti',\n    provincia: Province.PE,\n  },\n  {\n    comune: \"Città Sant'Angelo\",\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Civitaquana',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Civitella Casanova',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Collecorvino',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Corvara',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Cugnoli',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Elice',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Farindola',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Lettomanoppello',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Loreto Aprutino',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Manoppello',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Montebello di Bertona',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Montesilvano',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Moscufo',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Nocciano',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Penne',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Pescara',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Pescosansonesco',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Pianella',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Picciano',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Pietranico',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Popoli',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Roccamorice',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Rosciano',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Salle',\n    provincia: Province.PE,\n  },\n  {\n    comune: \"Sant'Eufemia a Maiella\",\n    provincia: Province.PE,\n  },\n  {\n    comune: 'San Valentino in Abruzzo Citeriore',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Scafa',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Serramonacesca',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Spoltore',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Tocco da Casauria',\n    provincia: Province.PE,\n  },\n  {\n    comune: \"Torre de' Passeri\",\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Turrivalignani',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Vicoli',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Villa Celiera',\n    provincia: Province.PE,\n  },\n  {\n    comune: 'Altino',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Archi',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Ari',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Arielli',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Atessa',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Bomba',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Borrello',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Bucchianico',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Montebello sul Sangro',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Canosa Sannita',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Carpineto Sinello',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Carunchio',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Casacanditella',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Casalanguida',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Casalbordino',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Casalincontrada',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Casoli',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Castel Frentano',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Castelguidone',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Castiglione Messer Marino',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Celenza sul Trigno',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Chieti',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Civitaluparella',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Civitella Messer Raimondo',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Colledimacine',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Colledimezzo',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Crecchio',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Cupello',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Dogliola',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Fara Filiorum Petri',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Fara San Martino',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Filetto',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Fossacesia',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Fraine',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Francavilla al Mare',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Fresagrandinaria',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Frisa',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Furci',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Gamberale',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Gessopalena',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Gissi',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Giuliano Teatino',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Guardiagrele',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Guilmi',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Lama dei Peligni',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Lanciano',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Lentella',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Lettopalena',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Liscia',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Miglianico',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Montazzoli',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Monteferrante',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Montelapiano',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Montenerodomo',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Monteodorisio',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Mozzagrogna',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Orsogna',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Ortona',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Paglieta',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Palena',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Palmoli',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Palombaro',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Pennadomo',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Pennapiedimonte',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Perano',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Pizzoferrato',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Poggiofiorito',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Pollutri',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Pretoro',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Quadri',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Rapino',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Ripa Teatina',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Roccamontepiano',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Rocca San Giovanni',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Roccascalegna',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Roccaspinalveti',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Roio del Sangro',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Rosello',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'San Buono',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'San Giovanni Lipioni',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'San Giovanni Teatino',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'San Martino sulla Marrucina',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'San Salvo',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Santa Maria Imbaro',\n    provincia: Province.CH,\n  },\n  {\n    comune: \"Sant'Eusanio del Sangro\",\n    provincia: Province.CH,\n  },\n  {\n    comune: 'San Vito Chietino',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Scerni',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Schiavi di Abruzzo',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Taranta Peligna',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Tollo',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Torino di Sangro',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Tornareccio',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Torrebruna',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Torrevecchia Teatina',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Torricella Peligna',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Treglio',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Tufillo',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Vacri',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Vasto',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Villalfonsina',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Villamagna',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Villa Santa Maria',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Pietraferrazzana',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Fallo',\n    provincia: Province.CH,\n  },\n  {\n    comune: 'Acquaviva Collecroce',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Baranello',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Bojano',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Bonefro',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Busso',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Campobasso',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Campochiaro',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Campodipietra',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Campolieto',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Campomarino',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Casacalenda',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Casalciprano',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Castelbottaccio',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Castellino del Biferno',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Castelmauro',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Castropignano',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Cercemaggiore',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Cercepiccola',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Civitacampomarano',\n    provincia: Province.CB,\n  },\n  {\n    comune: \"Colle d'Anchise\",\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Colletorto',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Duronia',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Ferrazzano',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Fossalto',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Gambatesa',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Gildone',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Guardialfiera',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Guardiaregia',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Guglionesi',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Jelsi',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Larino',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Limosano',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Lucito',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Lupara',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Macchia Valfortore',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Mafalda',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Matrice',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Mirabello Sannitico',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Molise',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Monacilioni',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Montagano',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Montecilfone',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Montefalcone nel Sannio',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Montelongo',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Montemitro',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Montenero di Bisaccia',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Montorio nei Frentani',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Morrone del Sannio',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Oratino',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Palata',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Petacciato',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Petrella Tifernina',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Pietracatella',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Pietracupa',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Portocannone',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Provvidenti',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Riccia',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Ripabottoni',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Ripalimosani',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Roccavivara',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Rotello',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Salcito',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'San Biase',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'San Felice del Molise',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'San Giacomo degli Schiavoni',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'San Giovanni in Galdo',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'San Giuliano del Sannio',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'San Giuliano di Puglia',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'San Martino in Pensilis',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'San Massimo',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'San Polo Matese',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Santa Croce di Magliano',\n    provincia: Province.CB,\n  },\n  {\n    comune: \"Sant'Angelo Limosano\",\n    provincia: Province.CB,\n  },\n  {\n    comune: \"Sant'Elia a Pianisi\",\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Sepino',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Spinete',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Tavenna',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Termoli',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Torella del Sannio',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Toro',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Trivento',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Tufara',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Ururi',\n    provincia: Province.CB,\n  },\n  {\n    comune: 'Vinchiaturo',\n    provincia: Province.CB,\n  },\n  {\n    comune: \"Acquaviva d'Isernia\",\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Agnone',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Bagnoli del Trigno',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Belmonte del Sannio',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Cantalupo nel Sannio',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Capracotta',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Carovilli',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Carpinone',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Castel del Giudice',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Castelpetroso',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Castelpizzuto',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Castel San Vincenzo',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Castelverrino',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Cerro al Volturno',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Chiauci',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Civitanova del Sannio',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Colli a Volturno',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Conca Casale',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Filignano',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Forlì del Sannio',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Fornelli',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Frosolone',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Isernia',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Longano',\n    provincia: Province.IS,\n  },\n  {\n    comune: \"Macchia d'Isernia\",\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Macchiagodena',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Miranda',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Montaquila',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Montenero Val Cocchiara',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Monteroduni',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Pesche',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Pescolanciano',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Pescopennataro',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Pettoranello del Molise',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Pietrabbondante',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Pizzone',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Poggio Sannita',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Pozzilli',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Rionero Sannitico',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Roccamandolfi',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Roccasicura',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Rocchetta a Volturno',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'San Pietro Avellana',\n    provincia: Province.IS,\n  },\n  {\n    comune: \"Sant'Agapito\",\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Santa Maria del Molise',\n    provincia: Province.IS,\n  },\n  {\n    comune: \"Sant'Angelo del Pesco\",\n    provincia: Province.IS,\n  },\n  {\n    comune: \"Sant'Elena Sannita\",\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Scapoli',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Sessano del Molise',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Sesto Campano',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Vastogirardi',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Venafro',\n    provincia: Province.IS,\n  },\n  {\n    comune: 'Ailano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Alife',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Alvignano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Arienzo',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Aversa',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Baia e Latina',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Bellona',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Caianello',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Caiazzo',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Calvi Risorta',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Camigliano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Cancello ed Arnone',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Capodrise',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Capriati a Volturno',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Capua',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Carinaro',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Carinola',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Casagiove',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Casal di Principe',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Casaluce',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Casapulla',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Caserta',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Castel Campagnano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Castel di Sasso',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Castello del Matese',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Castel Morrone',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Castel Volturno',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Cervino',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Cesa',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Ciorlano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Conca della Campania',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Curti',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Dragoni',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Fontegreca',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Formicola',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Francolise',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Frignano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Gallo Matese',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Galluccio',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Giano Vetusto',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Gioia Sannitica',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Grazzanise',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Gricignano di Aversa',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Letino',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Liberi',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Lusciano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Macerata Campania',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Maddaloni',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Marcianise',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Marzano Appio',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Mignano Monte Lungo',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Mondragone',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Orta di Atella',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Parete',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Pastorano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Piana di Monte Verna',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Piedimonte Matese',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Pietramelara',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Pietravairano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Pignataro Maggiore',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Pontelatone',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Portico di Caserta',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Prata Sannita',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Pratella',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Presenzano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Raviscanina',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Recale',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Riardo',\n    provincia: Province.CE,\n  },\n  {\n    comune: \"Rocca d'Evandro\",\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Roccamonfina',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Roccaromana',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Rocchetta e Croce',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Ruviano',\n    provincia: Province.CE,\n  },\n  {\n    comune: \"San Cipriano d'Aversa\",\n    provincia: Province.CE,\n  },\n  {\n    comune: 'San Felice a Cancello',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'San Gregorio Matese',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'San Marcellino',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'San Nicola la Strada',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'San Pietro Infine',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'San Potito Sannitico',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'San Prisco',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Santa Maria a Vico',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Santa Maria Capua Vetere',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Santa Maria la Fossa',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'San Tammaro',\n    provincia: Province.CE,\n  },\n  {\n    comune: \"Sant'Angelo d'Alife\",\n    provincia: Province.CE,\n  },\n  {\n    comune: \"Sant'Arpino\",\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Sessa Aurunca',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Sparanise',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Succivo',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Teano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Teverola',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Tora e Piccilli',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Trentola Ducenta',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Vairano Patenora',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Valle Agricola',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Valle di Maddaloni',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Villa di Briano',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Villa Literno',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Vitulazio',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Falciano del Massico',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Cellole',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Casapesenna',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'San Marco Evangelista',\n    provincia: Province.CE,\n  },\n  {\n    comune: 'Airola',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Amorosi',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Apice',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Apollosa',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Arpaia',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Arpaise',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Baselice',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Benevento',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Bonea',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Bucciano',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Buonalbergo',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Calvi',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Campolattaro',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Campoli del Monte Taburno',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Casalduni',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Castelfranco in Miscano',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Castelpagano',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Castelpoto',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Castelvenere',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Castelvetere in Val Fortore',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Cautano',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Ceppaloni',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Cerreto Sannita',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Circello',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Colle Sannita',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Cusano Mutri',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Dugenta',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Durazzano',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Faicchio',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Foglianise',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Foiano di Val Fortore',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Forchia',\n    provincia: Province.BN,\n  },\n  {\n    comune: \"Fragneto l'Abate\",\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Fragneto Monforte',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Frasso Telesino',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Ginestra degli Schiavoni',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Guardia Sanframondi',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Limatola',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Melizzano',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Moiano',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Molinara',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Montefalcone di Val Fortore',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Montesarchio',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Morcone',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Paduli',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Pago Veiano',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Pannarano',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Paolisi',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Paupisi',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Pesco Sannita',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Pietraroja',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Pietrelcina',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Ponte',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Pontelandolfo',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Puglianello',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Reino',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Bartolomeo in Galdo',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Giorgio del Sannio',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Giorgio La Molara',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Leucio del Sannio',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Lorenzello',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Lorenzo Maggiore',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Lupo',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Marco dei Cavoti',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Martino Sannita',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Nazzaro',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Nicola Manfredi',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'San Salvatore Telesino',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Santa Croce del Sannio',\n    provincia: Province.BN,\n  },\n  {\n    comune: \"Sant'Agata de' Goti\",\n    provincia: Province.BN,\n  },\n  {\n    comune: \"Sant'Angelo a Cupolo\",\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Sassinoro',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Solopaca',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Telese Terme',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Tocco Caudio',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Torrecuso',\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Vitulano',\n    provincia: Province.BN,\n  },\n  {\n    comune: \"Sant'Arcangelo Trimonte\",\n    provincia: Province.BN,\n  },\n  {\n    comune: 'Acerra',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Afragola',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Agerola',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Anacapri',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Arzano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Bacoli',\n    provincia: Province.NA,\n  },\n  {\n    comune: \"Barano d'Ischia\",\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Boscoreale',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Boscotrecase',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Brusciano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Caivano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Calvizzano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Camposano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Capri',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Carbonara di Nola',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Cardito',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Casalnuovo di Napoli',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Casamarciano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Casamicciola Terme',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Casandrino',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Casavatore',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Casola di Napoli',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Casoria',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Castellammare di Stabia',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Castello di Cisterna',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Cercola',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Cicciano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Cimitile',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Comiziano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Crispano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Forio',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Frattamaggiore',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Frattaminore',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Giugliano in Campania',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Gragnano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Grumo Nevano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Ischia',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Lacco Ameno',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Lettere',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Liveri',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Marano di Napoli',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Mariglianella',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Marigliano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Massa Lubrense',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Melito di Napoli',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Meta',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Monte di Procida',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Mugnano di Napoli',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Napoli',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Nola',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Ottaviano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Palma Campania',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Piano di Sorrento',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Pimonte',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Poggiomarino',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Pollena Trocchia',\n    provincia: Province.NA,\n  },\n  {\n    comune: \"Pomigliano d'Arco\",\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Pompei',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Portici',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Pozzuoli',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Procida',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Qualiano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Quarto',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Ercolano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Roccarainola',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'San Gennaro Vesuviano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'San Giorgio a Cremano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'San Giuseppe Vesuviano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'San Paolo Bel Sito',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'San Sebastiano al Vesuvio',\n    provincia: Province.NA,\n  },\n  {\n    comune: \"Sant'Agnello\",\n    provincia: Province.NA,\n  },\n  {\n    comune: \"Sant'Anastasia\",\n    provincia: Province.NA,\n  },\n  {\n    comune: \"Sant'Antimo\",\n    provincia: Province.NA,\n  },\n  {\n    comune: \"Sant'Antonio Abate\",\n    provincia: Province.NA,\n  },\n  {\n    comune: 'San Vitaliano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Saviano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Scisciano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Serrara Fontana',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Somma Vesuviana',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Sorrento',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Striano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Terzigno',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Torre Annunziata',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Torre del Greco',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Tufino',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Vico Equense',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Villaricca',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Visciano',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Volla',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Santa Maria la Carità',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Trecase',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Massa di Somma',\n    provincia: Province.NA,\n  },\n  {\n    comune: 'Aiello del Sabato',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Altavilla Irpina',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Andretta',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Aquilonia',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Ariano Irpino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Atripalda',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Avella',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Avellino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Bagnoli Irpino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Baiano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Bisaccia',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Bonito',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Cairano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Calabritto',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Calitri',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Candida',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Caposele',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Capriglia Irpina',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Carife',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Casalbore',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Cassano Irpino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Castel Baronia',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Castelfranci',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Castelvetere sul Calore',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Cervinara',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Cesinali',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Chianche',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Chiusano di San Domenico',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Contrada',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Conza della Campania',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Domicella',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Flumeri',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Fontanarosa',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Forino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Frigento',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Gesualdo',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Greci',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Grottaminarda',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Grottolella',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Guardia Lombardi',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Lacedonia',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Lapio',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Lauro',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Lioni',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Luogosano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Manocalzati',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Marzano di Nola',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Melito Irpino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Mercogliano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Mirabella Eclano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Montaguto',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Montecalvo Irpino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Montefalcione',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Monteforte Irpino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Montefredane',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Montefusco',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Montella',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Montemarano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Montemiletto',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Monteverde',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Morra De Sanctis',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Moschiano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Mugnano del Cardinale',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Nusco',\n    provincia: Province.AV,\n  },\n  {\n    comune: \"Ospedaletto d'Alpinolo\",\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Pago del Vallo di Lauro',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Parolise',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Paternopoli',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Petruro Irpino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Pietradefusi',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Pietrastornina',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Prata di Principato Ultra',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Pratola Serra',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Quadrelle',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Quindici',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Roccabascerana',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Rocca San Felice',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Rotondi',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Salza Irpina',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'San Mango sul Calore',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'San Martino Valle Caudina',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'San Michele di Serino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'San Nicola Baronia',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'San Potito Ultra',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'San Sossio Baronia',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Santa Lucia di Serino',\n    provincia: Province.AV,\n  },\n  {\n    comune: \"Sant'Andrea di Conza\",\n    provincia: Province.AV,\n  },\n  {\n    comune: \"Sant'Angelo all'Esca\",\n    provincia: Province.AV,\n  },\n  {\n    comune: \"Sant'Angelo a Scala\",\n    provincia: Province.AV,\n  },\n  {\n    comune: \"Sant'Angelo dei Lombardi\",\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Santa Paolina',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Santo Stefano del Sole',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Savignano Irpino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Scampitella',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Senerchia',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Serino',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Sirignano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Solofra',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Sorbo Serpico',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Sperone',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Sturno',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Summonte',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Taurano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Taurasi',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Teora',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Torella dei Lombardi',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Torre Le Nocelle',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Torrioni',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Trevico',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Tufo',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Vallata',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Vallesaccarda',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Venticano',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Villamaina',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Villanova del Battista',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Volturara Irpina',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Zungoli',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Montoro',\n    provincia: Province.AV,\n  },\n  {\n    comune: 'Acerno',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Agropoli',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Albanella',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Alfano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Altavilla Silentina',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Amalfi',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Angri',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Aquara',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Ascea',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Atena Lucana',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Atrani',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Auletta',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Baronissi',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Battipaglia',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Bellosguardo',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Bracigliano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Buccino',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Buonabitacolo',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Caggiano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Calvanico',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Camerota',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Campagna',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Campora',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Cannalonga',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Capaccio Paestum',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Casalbuono',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Casaletto Spartano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Casal Velino',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Caselle in Pittari',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Castelcivita',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Castellabate',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Castelnuovo Cilento',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Castelnuovo di Conza',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Castel San Giorgio',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Castel San Lorenzo',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Castiglione del Genovesi',\n    provincia: Province.SA,\n  },\n  {\n    comune: \"Cava de' Tirreni\",\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Celle di Bulgheria',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Centola',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Ceraso',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Cetara',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Cicerale',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Colliano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Conca dei Marini',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Controne',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Contursi Terme',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Corbara',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Corleto Monforte',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Cuccaro Vetere',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Eboli',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Felitto',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Fisciano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Furore',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Futani',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Giffoni Sei Casali',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Giffoni Valle Piana',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Gioi',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Giungano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Ispani',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Laureana Cilento',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Laurino',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Laurito',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Laviano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Lustra',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Magliano Vetere',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Maiori',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Mercato San Severino',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Minori',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Moio della Civitella',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Montano Antilia',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Montecorice',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Montecorvino Pugliano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Montecorvino Rovella',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Monteforte Cilento',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Monte San Giacomo',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Montesano sulla Marcellana',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Morigerati',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Nocera Inferiore',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Nocera Superiore',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Novi Velia',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Ogliastro Cilento',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Olevano sul Tusciano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Oliveto Citra',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Omignano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Orria',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Ottati',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Padula',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Pagani',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Palomonte',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Pellezzano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Perdifumo',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Perito',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Pertosa',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Petina',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Piaggine',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Pisciotta',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Polla',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Pollica',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Pontecagnano Faiano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Positano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Postiglione',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Praiano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Prignano Cilento',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Ravello',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Ricigliano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Roccadaspide',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Roccagloriosa',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Roccapiemonte',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Rofrano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Romagnano al Monte',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Roscigno',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Rutino',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Sacco',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Sala Consilina',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Salento',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Salerno',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Salvitelle',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Cipriano Picentino',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Giovanni a Piro',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Gregorio Magno',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Mango Piemonte',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Marzano sul Sarno',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Mauro Cilento',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Mauro la Bruca',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Pietro al Tanagro',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Rufo',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Santa Marina',\n    provincia: Province.SA,\n  },\n  {\n    comune: \"Sant'Angelo a Fasanella\",\n    provincia: Province.SA,\n  },\n  {\n    comune: \"Sant'Arsenio\",\n    provincia: Province.SA,\n  },\n  {\n    comune: \"Sant'Egidio del Monte Albino\",\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Santomenna',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'San Valentino Torio',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Sanza',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Sapri',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Sarno',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Sassano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Scafati',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Scala',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Serramezzana',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Serre',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Sessa Cilento',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Siano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Sicignano degli Alburni',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Stella Cilento',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Stio',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Teggiano',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Torchiara',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Torraca',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Torre Orsaia',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Tortorella',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Tramonti',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Trentinara',\n    provincia: Province.SA,\n  },\n  {\n    comune: \"Valle dell'Angelo\",\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Vallo della Lucania',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Valva',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Vibonati',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Vietri sul Mare',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Bellizzi',\n    provincia: Province.SA,\n  },\n  {\n    comune: 'Accadia',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Alberona',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Anzano di Puglia',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Apricena',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Ascoli Satriano',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Biccari',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Bovino',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Cagnano Varano',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Candela',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Carapelle',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Carlantino',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Carpino',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Casalnuovo Monterotaro',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Casalvecchio di Puglia',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Castelluccio dei Sauri',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Castelluccio Valmaggiore',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Castelnuovo della Daunia',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Celenza Valfortore',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Celle di San Vito',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Cerignola',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Chieuti',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Deliceto',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Faeto',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Foggia',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Ischitella',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Isole Tremiti',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Lesina',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Lucera',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Manfredonia',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Mattinata',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Monteleone di Puglia',\n    provincia: Province.FG,\n  },\n  {\n    comune: \"Monte Sant'Angelo\",\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Motta Montecorvino',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Orsara di Puglia',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Orta Nova',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Panni',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Peschici',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Pietramontecorvino',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Poggio Imperiale',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Rignano Garganico',\n    provincia: Province.FG,\n  },\n  {\n    comune: \"Rocchetta Sant'Antonio\",\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Rodi Garganico',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Roseto Valfortore',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'San Giovanni Rotondo',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'San Marco in Lamis',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'San Marco la Catola',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'San Nicandro Garganico',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'San Paolo di Civitate',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'San Severo',\n    provincia: Province.FG,\n  },\n  {\n    comune: \"Sant'Agata di Puglia\",\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Serracapriola',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Stornara',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Stornarella',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Torremaggiore',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Troia',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Vico del Gargano',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Vieste',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Volturara Appula',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Volturino',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Ordona',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Zapponeta',\n    provincia: Province.FG,\n  },\n  {\n    comune: 'Acquaviva delle Fonti',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Adelfia',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Alberobello',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Altamura',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Bari',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Binetto',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Bitetto',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Bitonto',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Bitritto',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Capurso',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Casamassima',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Cassano delle Murge',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Castellana Grotte',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Cellamare',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Conversano',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Corato',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Gioia del Colle',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Giovinazzo',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Gravina in Puglia',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Grumo Appula',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Locorotondo',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Modugno',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Mola di Bari',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Molfetta',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Monopoli',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Noci',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Noicattaro',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Palo del Colle',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Poggiorsini',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Polignano a Mare',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Putignano',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Rutigliano',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Ruvo di Puglia',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Sammichele di Bari',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Sannicandro di Bari',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Santeramo in Colle',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Terlizzi',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Toritto',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Triggiano',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Turi',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Valenzano',\n    provincia: Province.BA,\n  },\n  {\n    comune: 'Avetrana',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Carosino',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Castellaneta',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Crispiano',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Faggiano',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Fragagnano',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Ginosa',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Grottaglie',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Laterza',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Leporano',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Lizzano',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Manduria',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Martina Franca',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Maruggio',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Massafra',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Monteiasi',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Montemesola',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Monteparano',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Mottola',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Palagianello',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Palagiano',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Pulsano',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Roccaforzata',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'San Giorgio Ionico',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'San Marzano di San Giuseppe',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Sava',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Taranto',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Torricella',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Statte',\n    provincia: Province.TA,\n  },\n  {\n    comune: 'Brindisi',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Carovigno',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Ceglie Messapica',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Cellino San Marco',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Cisternino',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Erchie',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Fasano',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Francavilla Fontana',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Latiano',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Mesagne',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Oria',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Ostuni',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'San Donaci',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'San Michele Salentino',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'San Pancrazio Salentino',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'San Pietro Vernotico',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'San Vito dei Normanni',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Torchiarolo',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Torre Santa Susanna',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Villa Castelli',\n    provincia: Province.BR,\n  },\n  {\n    comune: 'Alessano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Alezio',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Alliste',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Andrano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Aradeo',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Arnesano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Bagnolo del Salento',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Botrugno',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Calimera',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Campi Salentina',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Cannole',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Caprarica di Lecce',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Carmiano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Carpignano Salentino',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Casarano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Castri di Lecce',\n    provincia: Province.LE,\n  },\n  {\n    comune: \"Castrignano de' Greci\",\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Castrignano del Capo',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Cavallino',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Collepasso',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Copertino',\n    provincia: Province.LE,\n  },\n  {\n    comune: \"Corigliano d'Otranto\",\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Corsano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Cursi',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Cutrofiano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Diso',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Gagliano del Capo',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Galatina',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Galatone',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Gallipoli',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Giuggianello',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Giurdignano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Guagnano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Lecce',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Lequile',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Leverano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Lizzanello',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Maglie',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Martano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Martignano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Matino',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Melendugno',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Melissano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Melpignano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Miggiano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Minervino di Lecce',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Monteroni di Lecce',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Montesano Salentino',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Morciano di Leuca',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Muro Leccese',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Nardò',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Neviano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Nociglia',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Novoli',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Ortelle',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Otranto',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Palmariggi',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Parabita',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Patù',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Poggiardo',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Racale',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Ruffano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Salice Salentino',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Salve',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Sanarica',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'San Cesario di Lecce',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'San Donato di Lecce',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Sannicola',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'San Pietro in Lama',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Santa Cesarea Terme',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Scorrano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Seclì',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Sogliano Cavour',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Soleto',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Specchia',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Spongano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Squinzano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Sternatia',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Supersano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Surano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Surbo',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Taurisano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Taviano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Tiggiano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Trepuzzi',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Tricase',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Tuglie',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Ugento',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Uggiano la Chiesa',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Veglie',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Vernole',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Zollino',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'San Cassiano',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Castro',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Porto Cesareo',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Presicce-Acquarica',\n    provincia: Province.LE,\n  },\n  {\n    comune: 'Andria',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'Barletta',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'Bisceglie',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'Canosa di Puglia',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'Margherita di Savoia',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'Minervino Murge',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'San Ferdinando di Puglia',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'Spinazzola',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'Trani',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'Trinitapoli',\n    provincia: Province.BT,\n  },\n  {\n    comune: 'Abriola',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Acerenza',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Albano di Lucania',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Anzi',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Armento',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Atella',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Avigliano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Balvano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Banzi',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Baragiano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Barile',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Bella',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Brienza',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Brindisi Montagna',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Calvello',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Calvera',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Campomaggiore',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Cancellara',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Carbone',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'San Paolo Albanese',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Castelgrande',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Castelluccio Inferiore',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Castelluccio Superiore',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Castelmezzano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Castelsaraceno',\n    provincia: Province.PZ,\n  },\n  {\n    comune: \"Castronuovo di Sant'Andrea\",\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Cersosimo',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Chiaromonte',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Corleto Perticara',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Episcopia',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Fardella',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Filiano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Forenza',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Francavilla in Sinni',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Gallicchio',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Genzano di Lucania',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Grumento Nova',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Guardia Perticara',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Lagonegro',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Latronico',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Laurenzana',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Lauria',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Lavello',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Maratea',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Marsico Nuovo',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Marsicovetere',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Maschito',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Melfi',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Missanello',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Moliterno',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Montemilone',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Montemurro',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Muro Lucano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Nemoli',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Noepoli',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Oppido Lucano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Palazzo San Gervasio',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Pescopagano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Picerno',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Pietragalla',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Pietrapertosa',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Pignola',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Potenza',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Rapolla',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Rapone',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Rionero in Vulture',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Ripacandida',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Rivello',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Roccanova',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Rotonda',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Ruoti',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Ruvo del Monte',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'San Chirico Nuovo',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'San Chirico Raparo',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'San Costantino Albanese',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'San Fele',\n    provincia: Province.PZ,\n  },\n  {\n    comune: \"San Martino d'Agri\",\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'San Severino Lucano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: \"Sant'Angelo Le Fratte\",\n    provincia: Province.PZ,\n  },\n  {\n    comune: \"Sant'Arcangelo\",\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Sarconi',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Sasso di Castalda',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Satriano di Lucania',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Savoia di Lucania',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Senise',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Spinoso',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Teana',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Terranova di Pollino',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Tito',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Tolve',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Tramutola',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Trecchina',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Trivigno',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Vaglio Basilicata',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Venosa',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Vietri di Potenza',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Viggianello',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Viggiano',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Ginestra',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Paterno',\n    provincia: Province.PZ,\n  },\n  {\n    comune: 'Accettura',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Aliano',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Bernalda',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Calciano',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Cirigliano',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Colobraro',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Craco',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Ferrandina',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Garaguso',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Gorgoglione',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Grassano',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Grottole',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Irsina',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Matera',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Miglionico',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Montalbano Jonico',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Montescaglioso',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Nova Siri',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Oliveto Lucano',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Pisticci',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Policoro',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Pomarico',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Rotondella',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Salandra',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'San Giorgio Lucano',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'San Mauro Forte',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Stigliano',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Tricarico',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Tursi',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Valsinni',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Scanzano Jonico',\n    provincia: Province.MT,\n  },\n  {\n    comune: 'Acquaformosa',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Acquappesa',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Acri',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Aiello Calabro',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Aieta',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Albidona',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Alessandria del Carretto',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Altilia',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Altomonte',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Amantea',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Amendolara',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Aprigliano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Belmonte Calabro',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Belsito',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Belvedere Marittimo',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Bianchi',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Bisignano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Bocchigliero',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Bonifati',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Buonvicino',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Calopezzati',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Caloveto',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Campana',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Canna',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cariati',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Carolei',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Carpanzano',\n    provincia: Province.CS,\n  },\n  {\n    comune: \"Cassano all'Ionio\",\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Castiglione Cosentino',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Castrolibero',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Castroregio',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Castrovillari',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Celico',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cellara',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cerchiara di Calabria',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cerisano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cervicati',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cerzeto',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cetraro',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Civita',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cleto',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Colosimi',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cosenza',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Cropalati',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Crosia',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Diamante',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Dipignano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Domanico',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Fagnano Castello',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Falconara Albanese',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Figline Vegliaturo',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Firmo',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Fiumefreddo Bruzio',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Francavilla Marittima',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Frascineto',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Fuscaldo',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Grimaldi',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Grisolia',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Guardia Piemontese',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Lago',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Laino Borgo',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Laino Castello',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Lappano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Lattarico',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Longobardi',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Longobucco',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Lungro',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Luzzi',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Maierà',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Malito',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Malvito',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Mandatoriccio',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Mangone',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Marano Marchesato',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Marano Principato',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Marzi',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Mendicino',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Mongrassano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Montalto Uffugo',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Montegiordano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Morano Calabro',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Mormanno',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Mottafollone',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Nocara',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Oriolo',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Orsomarso',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Paludi',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Panettieri',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Paola',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Papasidero',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Parenti',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Paterno Calabro',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Pedivigliano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Piane Crati',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Pietrafitta',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Pietrapaola',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Plataci',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Praia a Mare',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Rende',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Rocca Imperiale',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Roggiano Gravina',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Rogliano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Rose',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Roseto Capo Spulico',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Rota Greca',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Rovito',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Basile',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Benedetto Ullano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Cosmo Albanese',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Demetrio Corone',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Donato di Ninea',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Fili',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Sangineto',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Giorgio Albanese',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Giovanni in Fiore',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Lorenzo Bellizzi',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Lorenzo del Vallo',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Lucido',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Marco Argentano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Martino di Finita',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Nicola Arcella',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Pietro in Amantea',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Pietro in Guarano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Sosti',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Santa Caterina Albanese',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Santa Domenica Talao',\n    provincia: Province.CS,\n  },\n  {\n    comune: \"Sant'Agata di Esaro\",\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Santa Maria del Cedro',\n    provincia: Province.CS,\n  },\n  {\n    comune: \"Santa Sofia d'Epiro\",\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Santo Stefano di Rogliano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'San Vincenzo La Costa',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Saracena',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Scala Coeli',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Scalea',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Scigliano',\n    provincia: Province.CS,\n  },\n  {\n    comune: \"Serra d'Aiello\",\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Spezzano Albanese',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Spezzano della Sila',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Tarsia',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Terranova da Sibari',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Terravecchia',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Torano Castello',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Tortora',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Trebisacce',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Vaccarizzo Albanese',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Verbicaro',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Villapiana',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Zumpano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Casali del Manco',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Corigliano-Rossano',\n    provincia: Province.CS,\n  },\n  {\n    comune: 'Albi',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Amaroni',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Amato',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Andali',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Argusto',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Badolato',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Belcastro',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Borgia',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Botricello',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Caraffa di Catanzaro',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Cardinale',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Carlopoli',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Catanzaro',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Cenadi',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Centrache',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Cerva',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Chiaravalle Centrale',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Cicala',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Conflenti',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Cortale',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Cropani',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Curinga',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Davoli',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Decollatura',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Falerna',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Feroleto Antico',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Fossato Serralta',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Gagliato',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Gasperina',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Gimigliano',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Girifalco',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Gizzeria',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Guardavalle',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Isca sullo Ionio',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Jacurso',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Magisano',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Maida',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Marcedusa',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Marcellinara',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Martirano',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Martirano Lombardo',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Miglierina',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Montauro',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Montepaone',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Motta Santa Lucia',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Nocera Terinese',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Olivadi',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Palermiti',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Pentone',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Petrizzi',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Petronà',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Pianopoli',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Platania',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'San Floro',\n    provincia: Province.CZ,\n  },\n  {\n    comune: \"San Mango d'Aquino\",\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'San Pietro a Maida',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'San Pietro Apostolo',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'San Sostene',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Santa Caterina dello Ionio',\n    provincia: Province.CZ,\n  },\n  {\n    comune: \"Sant'Andrea Apostolo dello Ionio\",\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'San Vito sullo Ionio',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Satriano',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Sellia',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Sellia Marina',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Serrastretta',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Sersale',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Settingiano',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Simeri Crichi',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Sorbo San Basile',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Soverato',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Soveria Mannelli',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Soveria Simeri',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Squillace',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Stalettì',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Taverna',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Tiriolo',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Torre di Ruggiero',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Vallefiorita',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Zagarise',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Lamezia Terme',\n    provincia: Province.CZ,\n  },\n  {\n    comune: 'Africo',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Agnana Calabra',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Anoia',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Antonimina',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Ardore',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Bagaladi',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Bagnara Calabra',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Benestare',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Bianco',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Bivongi',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Bova',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Bovalino',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Bova Marina',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Brancaleone',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Bruzzano Zeffirio',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Calanna',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Camini',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Campo Calabro',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Candidoni',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Canolo',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Caraffa del Bianco',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Cardeto',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Careri',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Casignana',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Caulonia',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Ciminà',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Cinquefrondi',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Cittanova',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Condofuri',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Cosoleto',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Delianuova',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Feroleto della Chiesa',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Ferruzzano',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Fiumara',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Galatro',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Gerace',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Giffone',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Gioia Tauro',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Gioiosa Ionica',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Grotteria',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Laganadi',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Laureana di Borrello',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Locri',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Mammola',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Marina di Gioiosa Ionica',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Maropati',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Martone',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Melicuccà',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Melicucco',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Melito di Porto Salvo',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Molochio',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Monasterace',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Montebello Jonico',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Motta San Giovanni',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Oppido Mamertina',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Palizzi',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Palmi',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Pazzano',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Placanica',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Platì',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Polistena',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Portigliola',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Reggio di Calabria',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Riace',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Rizziconi',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Roccaforte del Greco',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Roccella Ionica',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Roghudi',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Rosarno',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Samo',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'San Giorgio Morgeto',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'San Giovanni di Gerace',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'San Lorenzo',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'San Luca',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'San Pietro di Caridà',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'San Procopio',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'San Roberto',\n    provincia: Province.RC,\n  },\n  {\n    comune: \"Santa Cristina d'Aspromonte\",\n    provincia: Province.RC,\n  },\n  {\n    comune: \"Sant'Agata del Bianco\",\n    provincia: Province.RC,\n  },\n  {\n    comune: \"Sant'Alessio in Aspromonte\",\n    provincia: Province.RC,\n  },\n  {\n    comune: \"Sant'Eufemia d'Aspromonte\",\n    provincia: Province.RC,\n  },\n  {\n    comune: \"Sant'Ilario dello Ionio\",\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Santo Stefano in Aspromonte',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Scido',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Scilla',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Seminara',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Serrata',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Siderno',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Sinopoli',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Staiti',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Stignano',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Stilo',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Taurianova',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Terranova Sappo Minulio',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Varapodio',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Villa San Giovanni',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'San Ferdinando',\n    provincia: Province.RC,\n  },\n  {\n    comune: 'Belvedere di Spinello',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Caccuri',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Carfizzi',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Casabona',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Castelsilano',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Cerenzia',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Cirò',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Cirò Marina',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Cotronei',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Crotone',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Crucoli',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Cutro',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Isola di Capo Rizzuto',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Melissa',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Mesoraca',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Pallagorio',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Petilia Policastro',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Roccabernarda',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Rocca di Neto',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'San Mauro Marchesato',\n    provincia: Province.KR,\n  },\n  {\n    comune: \"San Nicola dell'Alto\",\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Santa Severina',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Savelli',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Scandale',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Strongoli',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Umbriatico',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Verzino',\n    provincia: Province.KR,\n  },\n  {\n    comune: 'Acquaro',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Arena',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Briatico',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Brognaturo',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Capistrano',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Cessaniti',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Dasà',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Dinami',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Drapia',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Fabrizia',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Filadelfia',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Filandari',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Filogaso',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Francavilla Angitola',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Francica',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Gerocarne',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Ionadi',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Joppolo',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Limbadi',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Maierato',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Mileto',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Mongiana',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Monterosso Calabro',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Nardodipace',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Nicotera',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Parghelia',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Pizzo',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Pizzoni',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Polia',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Ricadi',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Rombiolo',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'San Calogero',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'San Costantino Calabro',\n    provincia: Province.VV,\n  },\n  {\n    comune: \"San Gregorio d'Ippona\",\n    provincia: Province.VV,\n  },\n  {\n    comune: 'San Nicola da Crissa',\n    provincia: Province.VV,\n  },\n  {\n    comune: \"Sant'Onofrio\",\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Serra San Bruno',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Simbario',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Sorianello',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Soriano Calabro',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Spadola',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Spilinga',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Stefanaconi',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Tropea',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Vallelonga',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Vazzano',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Vibo Valentia',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Zaccanopoli',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Zambrone',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Zungri',\n    provincia: Province.VV,\n  },\n  {\n    comune: 'Alcamo',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Buseto Palizzolo',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Calatafimi-Segesta',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Campobello di Mazara',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Castellammare del Golfo',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Castelvetrano',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Custonaci',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Erice',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Favignana',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Gibellina',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Marsala',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Mazara del Vallo',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Paceco',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Pantelleria',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Partanna',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Poggioreale',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Salaparuta',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Salemi',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Santa Ninfa',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'San Vito Lo Capo',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Trapani',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Valderice',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Vita',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Petrosino',\n    provincia: Province.TP,\n  },\n  {\n    comune: 'Alia',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Alimena',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Aliminusa',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Altavilla Milicia',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Altofonte',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Bagheria',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Balestrate',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Baucina',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Belmonte Mezzagno',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Bisacquino',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Bolognetta',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Bompietro',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Borgetto',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Caccamo',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Caltavuturo',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Campofelice di Fitalia',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Campofelice di Roccella',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Campofiorito',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Camporeale',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Capaci',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Carini',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Castelbuono',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Casteldaccia',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Castellana Sicula',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Castronovo di Sicilia',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Cefalà Diana',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Cefalù',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Cerda',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Chiusa Sclafani',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Ciminna',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Cinisi',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Collesano',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Contessa Entellina',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Corleone',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Ficarazzi',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Gangi',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Geraci Siculo',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Giardinello',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Giuliana',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Godrano',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Gratteri',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Isnello',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Isola delle Femmine',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Lascari',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Lercara Friddi',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Marineo',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Mezzojuso',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Misilmeri',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Monreale',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Montelepre',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Montemaggiore Belsito',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Palazzo Adriano',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Palermo',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Partinico',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Petralia Soprana',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Petralia Sottana',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Piana degli Albanesi',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Polizzi Generosa',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Pollina',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Prizzi',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Roccamena',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Roccapalumba',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'San Cipirello',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'San Giuseppe Jato',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'San Mauro Castelverde',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Santa Cristina Gela',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Santa Flavia',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Sciara',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Sclafani Bagni',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Termini Imerese',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Terrasini',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Torretta',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Trabia',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Trappeto',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Ustica',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Valledolmo',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Ventimiglia di Sicilia',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Vicari',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Villabate',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Villafrati',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Scillato',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Blufi',\n    provincia: Province.PA,\n  },\n  {\n    comune: 'Alcara li Fusi',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Alì',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Alì Terme',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Antillo',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Barcellona Pozzo di Gotto',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Basicò',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Brolo',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Capizzi',\n    provincia: Province.ME,\n  },\n  {\n    comune: \"Capo d'Orlando\",\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Capri Leone',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Caronia',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Casalvecchio Siculo',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Castel di Lucio',\n    provincia: Province.ME,\n  },\n  {\n    comune: \"Castell'Umberto\",\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Castelmola',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Castroreale',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Cesarò',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Condrò',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Falcone',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Ficarra',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Fiumedinisi',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Floresta',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Fondachelli-Fantina',\n    provincia: Province.ME,\n  },\n  {\n    comune: \"Forza d'Agrò\",\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Francavilla di Sicilia',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Frazzanò',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Furci Siculo',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Furnari',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Gaggi',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Galati Mamertino',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Gallodoro',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Giardini-Naxos',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Gioiosa Marea',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Graniti',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Gualtieri Sicaminò',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Itala',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Leni',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Letojanni',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Librizzi',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Limina',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Lipari',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Longi',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Malfa',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Malvagna',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Mandanici',\n    provincia: Province.ME,\n  },\n  {\n    comune: \"Mazzarrà Sant'Andrea\",\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Merì',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Messina',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Milazzo',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Militello Rosmarino',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Mirto',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Mistretta',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Moio Alcantara',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Monforte San Giorgio',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Mongiuffi Melia',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Montagnareale',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Montalbano Elicona',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Motta Camastra',\n    provincia: Province.ME,\n  },\n  {\n    comune: \"Motta d'Affermo\",\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Naso',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Nizza di Sicilia',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Novara di Sicilia',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Oliveri',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Pace del Mela',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Pagliara',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Patti',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Pettineo',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Piraino',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Raccuja',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Reitano',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Roccafiorita',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Roccalumera',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Roccavaldina',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Roccella Valdemone',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Rodì Milici',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Rometta',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'San Filippo del Mela',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'San Fratello',\n    provincia: Province.ME,\n  },\n  {\n    comune: \"San Marco d'Alunzio\",\n    provincia: Province.ME,\n  },\n  {\n    comune: 'San Pier Niceto',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'San Piero Patti',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'San Salvatore di Fitalia',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Santa Domenica Vittoria',\n    provincia: Province.ME,\n  },\n  {\n    comune: \"Sant'Agata di Militello\",\n    provincia: Province.ME,\n  },\n  {\n    comune: \"Sant'Alessio Siculo\",\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Santa Lucia del Mela',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Santa Marina Salina',\n    provincia: Province.ME,\n  },\n  {\n    comune: \"Sant'Angelo di Brolo\",\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Santa Teresa di Riva',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'San Teodoro',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Santo Stefano di Camastra',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Saponara',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Savoca',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Scaletta Zanclea',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Sinagra',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Spadafora',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Taormina',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Torregrotta',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Tortorici',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Tripi',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Tusa',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Ucria',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Valdina',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Venetico',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Villafranca Tirrena',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Terme Vigliatore',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Acquedolci',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Torrenova',\n    provincia: Province.ME,\n  },\n  {\n    comune: 'Agrigento',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Alessandria della Rocca',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Aragona',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Bivona',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Burgio',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Calamonaci',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Caltabellotta',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Camastra',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Cammarata',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Campobello di Licata',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Canicattì',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Casteltermini',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Castrofilippo',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Cattolica Eraclea',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Cianciana',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Comitini',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Favara',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Grotte',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Joppolo Giancaxio',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Lampedusa e Linosa',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Licata',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Lucca Sicula',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Menfi',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Montallegro',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Montevago',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Naro',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Palma di Montechiaro',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Porto Empedocle',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Racalmuto',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Raffadali',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Ravanusa',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Realmonte',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Ribera',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Sambuca di Sicilia',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'San Biagio Platani',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'San Giovanni Gemini',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Santa Elisabetta',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Santa Margherita di Belice',\n    provincia: Province.AG,\n  },\n  {\n    comune: \"Sant'Angelo Muxaro\",\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Santo Stefano Quisquina',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Sciacca',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Siculiana',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Villafranca Sicula',\n    provincia: Province.AG,\n  },\n  {\n    comune: 'Acquaviva Platani',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Bompensiere',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Butera',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Caltanissetta',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Campofranco',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Delia',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Gela',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Marianopoli',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Mazzarino',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Milena',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Montedoro',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Mussomeli',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Niscemi',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Resuttano',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Riesi',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'San Cataldo',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Santa Caterina Villarmosa',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Serradifalco',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Sommatino',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Sutera',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Vallelunga Pratameno',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Villalba',\n    provincia: Province.CL,\n  },\n  {\n    comune: 'Agira',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Aidone',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Assoro',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Barrafranca',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Calascibetta',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Catenanuova',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Centuripe',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Cerami',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Enna',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Gagliano Castelferrato',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Leonforte',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Nicosia',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Nissoria',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Piazza Armerina',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Pietraperzia',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Regalbuto',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Sperlinga',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Troina',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Valguarnera Caropepe',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Villarosa',\n    provincia: Province.EN,\n  },\n  {\n    comune: 'Aci Bonaccorsi',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Aci Castello',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Aci Catena',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Acireale',\n    provincia: Province.CT,\n  },\n  {\n    comune: \"Aci Sant'Antonio\",\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Adrano',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Belpasso',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Biancavilla',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Bronte',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Calatabiano',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Caltagirone',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Camporotondo Etneo',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Castel di Iudica',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Castiglione di Sicilia',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Catania',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Fiumefreddo di Sicilia',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Giarre',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Grammichele',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Gravina di Catania',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Licodia Eubea',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Linguaglossa',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Maletto',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Mascali',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Mascalucia',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Militello in Val di Catania',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Milo',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Mineo',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Mirabella Imbaccari',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Misterbianco',\n    provincia: Province.CT,\n  },\n  {\n    comune: \"Motta Sant'Anastasia\",\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Nicolosi',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Palagonia',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Paternò',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Pedara',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Piedimonte Etneo',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Raddusa',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Ramacca',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Randazzo',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Riposto',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'San Cono',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'San Giovanni la Punta',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'San Gregorio di Catania',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'San Michele di Ganzaria',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'San Pietro Clarenza',\n    provincia: Province.CT,\n  },\n  {\n    comune: \"Sant'Agata li Battiati\",\n    provincia: Province.CT,\n  },\n  {\n    comune: \"Sant'Alfio\",\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Santa Maria di Licodia',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Santa Venerina',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Scordia',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Trecastagni',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Tremestieri Etneo',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Valverde',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Viagrande',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Vizzini',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Zafferana Etnea',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Mazzarrone',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Maniace',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Ragalna',\n    provincia: Province.CT,\n  },\n  {\n    comune: 'Acate',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Chiaramonte Gulfi',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Comiso',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Giarratana',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Ispica',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Modica',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Monterosso Almo',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Pozzallo',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Ragusa',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Santa Croce Camerina',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Scicli',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Vittoria',\n    provincia: Province.RG,\n  },\n  {\n    comune: 'Augusta',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Avola',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Buccheri',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Buscemi',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Canicattini Bagni',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Carlentini',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Cassaro',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Ferla',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Floridia',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Francofonte',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Lentini',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Melilli',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Noto',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Pachino',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Palazzolo Acreide',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Rosolini',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Siracusa',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Solarino',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Sortino',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Portopalo di Capo Passero',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Priolo Gargallo',\n    provincia: Province.SR,\n  },\n  {\n    comune: 'Aggius',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Alà dei Sardi',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Alghero',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Anela',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Ardara',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Arzachena',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Banari',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Benetutti',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Berchidda',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Bessude',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Bonnanaro',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Bono',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Bonorva',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Bortigiadas',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Borutta',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Bottidda',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Buddusò',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Bultei',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Bulzi',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Burgos',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Calangianus',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Cargeghe',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Castelsardo',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Cheremule',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Chiaramonti',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Codrongianos',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Cossoine',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Esporlatu',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Florinas',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Giave',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Illorai',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Ittireddu',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Ittiri',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Laerru',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'La Maddalena',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Luogosanto',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Luras',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Mara',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Martis',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Monteleone Rocca Doria',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Monti',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Mores',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Muros',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Nughedu San Nicolò',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Nule',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Nulvi',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Olbia',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Olmedo',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Oschiri',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Osilo',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Ossi',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Ozieri',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Padria',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Palau',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Pattada',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Perfugas',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Ploaghe',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Porto Torres',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Pozzomaggiore',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Putifigari',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Romana',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Aglientu',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Santa Teresa Gallura',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Sassari',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Sedini',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Semestene',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Sennori',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Siligo',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Sorso',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Tempio Pausania',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Thiesi',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Tissi',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Torralba',\n    provincia: Province.SS,\n  },\n  {\n    comune: \"Trinità d'Agultu e Vignola\",\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Tula',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Uri',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Usini',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Villanova Monteleone',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Valledoria',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Telti',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Badesi',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Viddalba',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Golfo Aranci',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Loiri Porto San Paolo',\n    provincia: Province.SS,\n  },\n  {\n    comune: \"Sant'Antonio di Gallura\",\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Tergu',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Santa Maria Coghinas',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Erula',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Stintino',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Padru',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Budoni',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'San Teodoro',\n    provincia: Province.SS,\n  },\n  {\n    comune: 'Aritzo',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Arzana',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Atzara',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Austis',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Bari Sardo',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Baunei',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Belvì',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Birori',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Bitti',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Bolotana',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Borore',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Bortigali',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Desulo',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Dorgali',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Dualchi',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Elini',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Fonni',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Gadoni',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Gairo',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Galtellì',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Gavoi',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Girasole',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Ilbono',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Irgoli',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Jerzu',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Lanusei',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Lei',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Loceri',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Loculi',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Lodè',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Lotzorai',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Lula',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Macomer',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Mamoiada',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Meana Sardo',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Noragugume',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Nuoro',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Oliena',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Ollolai',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Olzai',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Onanì',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Onifai',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Oniferi',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Orani',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Orgosolo',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Orosei',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Orotelli',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Ortueri',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Orune',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Osidda',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Osini',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Ottana',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Ovodda',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Perdasdefogu',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Posada',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Sarule',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Silanus',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Sindia',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Siniscola',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Sorgono',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Talana',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Tertenia',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Teti',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Tiana',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Tonara',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Torpè',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Tortolì',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Triei',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Ulassai',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Urzulei',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Ussassai',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Villagrande Strisaili',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Cardedu',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Lodine',\n    provincia: Province.NU,\n  },\n  {\n    comune: 'Assemini',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Cagliari',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Capoterra',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Decimomannu',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Maracalagonis',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Pula',\n    provincia: Province.CA,\n  },\n  {\n    comune: \"Quartu Sant'Elena\",\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Sarroch',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Selargius',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Sestu',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Settimo San Pietro',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Sinnai',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Uta',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Villa San Pietro',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Quartucciu',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Elmas',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Monserrato',\n    provincia: Province.CA,\n  },\n  {\n    comune: 'Abbasanta',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Aidomaggiore',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Albagiara',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Ales',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Allai',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Arborea',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Ardauli',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Assolo',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Asuni',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Baradili',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Baratili San Pietro',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Baressa',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Bauladu',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Bidonì',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Bonarcado',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Boroneddu',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Busachi',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Cabras',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Cuglieri',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Fordongianus',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Ghilarza',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Gonnoscodina',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Gonnosnò',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Gonnostramatza',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Marrubiu',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Masullas',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Milis',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Mogorella',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Mogoro',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Morgongiori',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Narbolia',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Neoneli',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Norbello',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Nughedu Santa Vittoria',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Nurachi',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Nureci',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Ollastra',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Oristano',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Palmas Arborea',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Pau',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Paulilatino',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Pompu',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Riola Sardo',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Ruinas',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Samugheo',\n    provincia: Province.OR,\n  },\n  {\n    comune: \"San Nicolò d'Arcidano\",\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Santa Giusta',\n    provincia: Province.OR,\n  },\n  {\n    comune: \"Villa Sant'Antonio\",\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Santu Lussurgiu',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'San Vero Milis',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Scano di Montiferro',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Sedilo',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Seneghe',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Senis',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Sennariolo',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Siamaggiore',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Siamanna',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Simala',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Simaxis',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Sini',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Siris',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Solarussa',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Sorradile',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Tadasuni',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Terralba',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Tramatza',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Tresnuraghes',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Ulà Tirso',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Uras',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Usellus',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Villanova Truschedu',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Villaurbana',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Villa Verde',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Zeddiani',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Zerfaliu',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Siapiccia',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Curcuris',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Soddì',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Bosa',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Flussio',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Laconi',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Magomadas',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Modolo',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Montresta',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Sagama',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Suni',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Tinnura',\n    provincia: Province.OR,\n  },\n  {\n    comune: 'Arbus',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Armungia',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Ballao',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Barrali',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Barumini',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Buggerru',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Burcei',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Calasetta',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Carbonia',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Carloforte',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Castiadas',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Collinas',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Decimoputzu',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Dolianova',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Domus de Maria',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Domusnovas',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Donori',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Escalaplano',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Escolca',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Esterzili',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Fluminimaggiore',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Furtei',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Genoni',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Genuri',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Gergei',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Gesico',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Gesturi',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Giba',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Goni',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Gonnesa',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Gonnosfanadiga',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Guamaggiore',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Guasila',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Guspini',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Iglesias',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Isili',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Las Plassas',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Lunamatrona',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Mandas',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Masainas',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Monastir',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Muravera',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Musei',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Narcao',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Nuragus',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Nurallao',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Nuraminis',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Nurri',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Nuxis',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Orroli',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Ortacesus',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Pabillonis',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Pauli Arbarei',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Perdaxius',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Pimentel',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Piscinas',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Portoscuso',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Sadali',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Samassi',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Samatzai',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'San Basilio',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'San Gavino Monreale',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'San Giovanni Suergiu',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'San Nicolò Gerrei',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'San Sperate',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'San Vito',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Sanluri',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Santadi',\n    provincia: Province.SU,\n  },\n  {\n    comune: \"Sant'Andrea Frius\",\n    provincia: Province.SU,\n  },\n  {\n    comune: \"Sant'Anna Arresi\",\n    provincia: Province.SU,\n  },\n  {\n    comune: \"Sant'Antioco\",\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Sardara',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Segariu',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Selegas',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Senorbì',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Serdiana',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Serramanna',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Serrenti',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Serri',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Setzu',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Seui',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Seulo',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Siddi',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Siliqua',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Silius',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Siurgus Donigala',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Soleminis',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Suelli',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Teulada',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Tratalias',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Tuili',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Turri',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Ussana',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Ussaramanna',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Vallermosa',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villacidro',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villamar',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villamassargia',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villanova Tulo',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villanovaforru',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villanovafranca',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villaperuccio',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villaputzu',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villasalto',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villasimius',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villasor',\n    provincia: Province.SU,\n  },\n  {\n    comune: 'Villaspeciosa',\n    provincia: Province.SU,\n  },\n];\n","import * as React from 'react';\nimport { useField } from 'formik';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\ninterface Props {\n  name: string;\n  label: string;\n  labelColor?: string;\n}\n\nexport const SliderField: React.FC<Props> = (props) => {\n  const [field, { error, touched }] = useField({\n    name: props.name,\n  });\n  return (\n    <FormControl error={touched && error !== undefined}>\n      <FormControlLabel\n        control={<Switch data-testid={props.name} {...field} />}\n        label={props.label}\n        style={{ color: props.labelColor }}\n      />\n      <FormHelperText>{error}</FormHelperText>\n    </FormControl>\n  );\n};\n","import * as React from 'react';\nimport { Field, useField } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\ninterface Option {\n  value: string;\n  label: string;\n  firstLetter?: string;\n}\n\nexport const ComboboxField: React.FC<{\n  items: Array<Option>;\n  label: string;\n  name: string;\n  labelTextColor?: string;\n  underlineColor?: string;\n  setFieldValue: (name: string, value: string) => void;\n}> = ({\n  items,\n  label,\n  name,\n  setFieldValue,\n  labelTextColor,\n  underlineColor,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_, { error, touched }] = useField({\n    name: name,\n  });\n\n  return (\n    <Autocomplete\n      data-testid={name}\n      options={items}\n      getOptionLabel={(item: Option) => item.label}\n      fullWidth\n      classes={{\n        inputRoot: underlineColor,\n      }}\n      onChange={(e, option) => {\n        setFieldValue('address.regione', option?.value as string);\n      }}\n      renderInput={(params) => (\n        <Field\n          component={TextField}\n          {...params}\n          label={label}\n          error={error !== undefined}\n          helperText={error}\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password',\n          }}\n          InputLabelProps={{\n            style: { color: labelTextColor },\n          }}\n        />\n      )}\n    />\n  );\n};\n","import * as React from 'react';\nimport { Field, useField, useFormikContext } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { provinceConRegione } from '../../utils/formHelper';\nimport { UserInputForm } from '../UserForm';\n\ninterface Option {\n  value: string;\n  label: string;\n}\n\nexport const ComboboxProvince: React.FC<{\n  label: string;\n  name: string;\n  labelTextColor?: string;\n  underlineColor?: string;\n  setFieldValue: (name: string, value: string) => void;\n}> = ({ label, name, setFieldValue, labelTextColor, underlineColor }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_, { error, touched }] = useField({\n    name: name,\n  });\n  const { values }: { values: UserInputForm } = useFormikContext();\n  const items = provinceConRegione\n    .filter((provincia) => provincia.regione === values.address.regione)\n    .map((provincia) => ({\n      value: provincia.provincia,\n      label: provincia.provincia,\n    }));\n\n  return (\n    <Autocomplete\n      data-testid='combobox-province'\n      key={values.address.regione}\n      getOptionSelected={(option, value) => option.value === value.value}\n      disabled={items.length === 0}\n      options={items}\n      classes={{\n        inputRoot: underlineColor,\n      }}\n      getOptionLabel={(item: Option) => item.value}\n      fullWidth\n      onChange={(e, option) => {\n        setFieldValue(name, option?.value as string);\n      }}\n      renderInput={(params) => (\n        <Field\n          component={TextField}\n          {...params}\n          label={label}\n          error={error !== undefined}\n          helperText={error}\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password',\n          }}\n          InputLabelProps={{\n            style: { color: labelTextColor },\n          }}\n        />\n      )}\n    />\n  );\n};\n","import * as React from 'react';\nimport { Field, useField, useFormikContext } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { comuniConProvincia } from '../../utils/formHelper';\nimport { UserInputForm } from '../UserForm';\n\ninterface Option {\n  value: string;\n  label: string;\n}\n\nexport const ComboboxComuni: React.FC<{\n  label: string;\n  name: string;\n  labelTextColor?: string;\n  underlineColor?: string;\n  setFieldValue: (name: string, value: string) => void;\n}> = ({ label, name, setFieldValue, labelTextColor, underlineColor }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_, { error, touched }] = useField({\n    name: name,\n  });\n  const { values }: { values: UserInputForm } = useFormikContext();\n  const items = comuniConProvincia\n    .filter((comune) => comune.provincia === values.address.provincia)\n    .map((comune) => ({\n      value: comune.comune,\n      label: comune.comune,\n    }));\n\n  return (\n    <Autocomplete\n      key={`${values.address.provincia}${values.address.regione}`}\n      getOptionSelected={(option, value) => option.value === value.value}\n      disabled={items.length === 0}\n      options={items}\n      fullWidth\n      classes={{\n        inputRoot: underlineColor,\n      }}\n      data-testid='combobox-comuni'\n      getOptionLabel={(item: Option) => item.value}\n      onChange={(e, option) => {\n        setFieldValue(name, option?.value as string);\n      }}\n      renderInput={(params) => (\n        <Field\n          component={TextField}\n          {...params}\n          label={label}\n          // variant='outlined'\n          error={error !== undefined}\n          helperText={error}\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password',\n          }}\n          InputLabelProps={{\n            style: { color: labelTextColor },\n          }}\n        />\n      )}\n    />\n  );\n};\n","import { Form, Formik } from 'formik';\nimport * as React from 'react';\nimport { TextField } from '../FormFields/TextField';\nimport { PasswordField } from '../FormFields/PasswordField';\nimport { optionsRegioni } from './data';\nimport { validationSchema } from '../../utils/formHelper';\nimport { SliderField } from '../FormFields/SliderField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport LinkMUI from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { ComboboxField } from '../FormFields/ComboboxField';\nimport { ComboboxProvince } from '../FormFields/ComboboxProvince';\nimport { ComboboxComuni } from '../FormFields/ComboboxComuni';\n// import { AddressForm } from '../AddressForm';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  input: {\n    color: '#6d1331',\n  },\n  underline: {\n    color: '#6d1331',\n    '&:before': {\n      borderBottom: '1px solid #6d1331',\n    },\n    '&&&&:hover:before': {\n      borderBottom: '2px solid #6d1331',\n    },\n    '&:after': {\n      borderBottom: '3px solid #6d1331',\n    },\n    disabled: {},\n    focused: {},\n    error: {},\n  },\n}));\n\ninterface AddressInputForm {\n  via: string;\n  comune: string;\n  provincia: string;\n  regione: string;\n  CAP: string;\n}\n\nconst initialAddress: AddressInputForm = {\n  via: '',\n  comune: '',\n  provincia: '',\n  regione: '',\n  CAP: '12345',\n};\n\nexport interface UserInputForm {\n  email: string;\n  reEmail?: string;\n  password: string;\n  rePassword?: string;\n  firstName: string;\n  lastName: string;\n  address: AddressInputForm;\n  pIva: string;\n  phoneNumber: string;\n  hideContact: boolean;\n}\n\nconst initialValues: UserInputForm = {\n  email: '',\n  reEmail: '',\n  password: '',\n  rePassword: '',\n  firstName: '',\n  lastName: '',\n  address: initialAddress,\n  pIva: '',\n  phoneNumber: '',\n  hideContact: false,\n};\n\nexport const UserForm: React.FC<{\n  onSubmit: (values: UserInputForm) => void;\n}> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ isValid, dirty, setFieldValue }) => {\n        const classes = useStyles();\n        return (\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n              Sign up\n            </Typography>\n            <Form className={classes.form}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    name='firstName'\n                    type='text'\n                    label='Nome'\n                    placeholder='Nome'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    name='lastName'\n                    type='text'\n                    label='Cognome'\n                    placeholder='Cognome'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='email'\n                    type='email'\n                    label='Email'\n                    placeholder='Email address'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='reEmail'\n                    type='email'\n                    label='Reinsert Email'\n                    placeholder='Reinsert Email address'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <PasswordField\n                    name='password'\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <PasswordField\n                    name='rePassword'\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='pIva'\n                    type='text'\n                    label='Partita Iva'\n                    placeholder='Partita Iva'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='phoneNumber'\n                    type='text'\n                    label='Numero di telefono'\n                    placeholder='Numero di telefono'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                {/* <AddressForm setFieldValue={setFieldValue} /> */}\n                <Grid item xs={12}>\n                  <ComboboxField\n                    setFieldValue={setFieldValue}\n                    name='address.regione'\n                    label='Regione'\n                    items={optionsRegioni}\n                    labelTextColor={'#6d1331'}\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <ComboboxProvince\n                    setFieldValue={setFieldValue}\n                    name='address.provincia'\n                    label='Provincia'\n                    labelTextColor={'#6d1331'}\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <ComboboxComuni\n                    setFieldValue={setFieldValue}\n                    name='address.comune'\n                    label='Comune'\n                    labelTextColor={'#6d1331'}\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='address.via'\n                    type='text'\n                    label='Via'\n                    placeholder='Via'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='address.CAP'\n                    type='number'\n                    max='99999'\n                    label='CAP'\n                    placeholder='CAP'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <SliderField\n                    name='hideContact'\n                    label='Nascondi info personali'\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                fullWidth\n                //isLoading={isValidating || isSubmitting}\n                type='submit'\n                disabled={!dirty || !isValid}\n              >\n                Submit\n              </Button>\n\n              <Grid container justify='flex-end'>\n                <Grid item>\n                  <LinkMUI href='#' variant='body2'>\n                    Already have an account? Sign in\n                  </LinkMUI>\n                </Grid>\n              </Grid>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n","import * as React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { UserForm, UserInputForm } from '../components/UserForm';\nimport { useCreateUserMutation, UserInput } from '../generated/graphql';\nimport { isLoggedInVar, notification } from '../cache';\nimport { navigate } from '@reach/router';\nimport _ from 'lodash';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nexport const SignUp: React.FC<RouteComponentProps> = () => {\n  const [createUserMutation] = useCreateUserMutation({\n    onError: (error) =>\n      notification({\n        type: 'error',\n        message: error.message,\n      }),\n    onCompleted: ({ createUser }) => {\n      if (createUser?.errors?.length === 0) {\n        localStorage.setItem(\n          'wineapp-user-token',\n          createUser?.response?.token as string\n        );\n        localStorage.setItem(\n          'wineapp-user-id',\n          createUser?.response?.user._id as string\n        );\n        isLoggedInVar(true);\n        notification({\n          type: 'success',\n          message: 'welcome',\n        });\n        void navigate('/');\n      }\n      if (createUser?.errors?.length) {\n        const errorMessages = createUser.errors.map((error) => error?.text);\n        notification({\n          type: 'error',\n          message: errorMessages.toString(),\n        });\n      }\n    },\n  });\n  const onSubmit = async (values: UserInputForm) => {\n    const userInputValues = _.cloneDeep(values);\n    delete userInputValues.reEmail;\n    delete userInputValues.rePassword;\n    userInputValues.address.CAP = userInputValues.address.CAP.toString();\n    await createUserMutation({\n      variables: {\n        userInput: userInputValues as UserInput,\n      },\n    });\n  };\n  return (\n    <Container component='main' maxWidth='xs'>\n      <UserForm onSubmit={onSubmit} />;\n      <CssBaseline />\n    </Container>\n  );\n};\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { RouteComponentProps } from '@reach/router';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from '@reach/router';\nimport { searchedWine } from '../cache';\nimport { useStyles } from '../utils/styleHook';\n\nexport const Home: React.FC<RouteComponentProps> = () => {\n  const classes = useStyles();\n  searchedWine(undefined);\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography color='primary' component='h3' variant='h4'>\n          Ciao, cosa vuoi fare?\n        </Typography>\n      </div>\n      <Link component={RouterLink} to='/buy' style={{ textDecoration: 'none' }}>\n        <Box\n          className={classes.buyHome}\n          boxShadow={3}\n          p={2}\n          m={2}\n          mt={2}\n          px={2}\n          pt={2}\n          color='white'\n          borderColor='primary.main'\n          bgcolor='primary.main'\n          borderRadius={16}\n        >\n          <Typography color='textSecondary' component='h3' variant='h5'>\n            Comprare!\n          </Typography>\n          <Typography color='textSecondary' component='p' variant='body1'>\n            Dicci che cosa stai cercando e in un attimo ti diremo dove trovarlo.\n          </Typography>\n        </Box>\n      </Link>\n      <Link\n        component={RouterLink}\n        to='/sell'\n        style={{ textDecoration: 'none' }}\n      >\n        <Box\n          className={classes.sellHome}\n          boxShadow={3}\n          p={2}\n          m={2}\n          mt={2}\n          px={2}\n          pt={2}\n          color='primary.main'\n          borderColor='white'\n          bgcolor='white'\n          borderRadius={16}\n        >\n          <Typography component='h3' variant='h5'>\n            Vendere!\n          </Typography>\n          <Typography color='secondary' component='p' variant='body1'>\n            Cerca il giusto acquirente per il tuo prodotto in pochi e semplici\n            passaggi.\n          </Typography>\n        </Box>\n      </Link>\n      {/* Next feature */}\n      {/* <Link component={RouterLink} to='/' style={{ textDecoration: 'none' }}>\n        <Box\n          className={classes.cruiseHome}\n          boxShadow={3}\n          p={2}\n          m={2}\n          mt={2}\n          px={2}\n          pt={2}\n          color='primary.main'\n          borderColor='white'\n          bgcolor='white'\n          borderRadius={16}\n        >\n          <Typography color='textPrimary' component='h3' variant='h5'>\n            Dare un&apos;occhiata!\n          </Typography>\n          <Typography color='secondary' component='p' variant='body1'>\n            Fai un giro tra gli annunci degli altri utenti: potrebbe esserci\n            qualcosa di interessante.\n          </Typography>\n        </Box>\n      </Link> */}\n    </Container>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport * as React from 'react';\nimport { useField } from 'formik';\nimport TextFieldMaterial from '@material-ui/core/TextField';\nimport { InputAdornment } from '@material-ui/core';\n\ninterface Props {\n  name: string;\n  placeholder: string;\n  label: string;\n  type: string;\n  adornment: string;\n  min?: string;\n  max?: string;\n  step?: string;\n  class?: string;\n  inputTextColor?: string;\n  labelTextColor?: string;\n  underlineColor?: string;\n}\nexport const TextFieldAdornment: React.FC<Props> = (props) => {\n  const [field, { error, touched }] = useField({\n    name: props.name,\n    type: props.type,\n  });\n  return (\n    <TextFieldMaterial\n      {...field}\n      fullWidth\n      type={props.type}\n      inputProps={{\n        'aria-label': props.name,\n        min: props.min,\n        max: props.max,\n        step: props.step,\n      }}\n      InputLabelProps={{\n        style: { color: props.labelTextColor },\n      }}\n      className={props.class}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position='end'>{props.adornment}</InputAdornment>\n        ),\n        className: props.inputTextColor,\n        classes: {\n          underline: props.underlineColor,\n        },\n      }}\n      error={error !== undefined && touched}\n      data-testid={props.name}\n      placeholder={props.placeholder}\n      label={props.label}\n      helperText={error}\n    />\n  );\n};\n","import * as React from 'react';\nimport { Field, useField } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface Wine {\n  denominazioneVino: string;\n  regione: [string];\n}\n\ninterface WineCombobox {\n  denominazioneVino: string;\n  regione: string;\n}\n\nconst useStyles = makeStyles({\n  option: {\n    color: '#000',\n  },\n  groupLabel: {\n    color: '#707070',\n  },\n});\n\nexport const Combobox: React.FC<{\n  items: Wine[];\n  label: string;\n  name: string;\n  defaultWine?: string;\n  labelTextColor?: string;\n  underlineColor?: string;\n\n  setFieldValue: (name: string, value: string) => void;\n}> = ({\n  items,\n  label,\n  name,\n  setFieldValue,\n  defaultWine,\n  labelTextColor,\n  underlineColor,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_, { error, touched }] = useField({\n    name: name,\n  });\n  const classes = useStyles();\n\n  const options = items.map((option) => {\n    const regione = option.regione[0];\n    const { denominazioneVino } = option;\n    return {\n      regione,\n      denominazioneVino,\n    };\n  });\n\n  return (\n    <Autocomplete\n      data-testid='combobox-wines'\n      options={options.sort((a, b) => -b.regione.localeCompare(a.regione))}\n      groupBy={(option: WineCombobox) => option.regione}\n      getOptionSelected={(option, value) =>\n        option.denominazioneVino === value.denominazioneVino\n      }\n      defaultValue={\n        defaultWine ? { regione: '', denominazioneVino: defaultWine } : null\n      }\n      classes={{\n        option: classes.option,\n        groupLabel: classes.groupLabel,\n        inputRoot: underlineColor,\n      }}\n      getOptionLabel={(option: WineCombobox) => option.denominazioneVino}\n      fullWidth\n      onChange={(e, option) => {\n        setFieldValue(name, option?.denominazioneVino as string);\n      }}\n      renderInput={(params) => (\n        <Field\n          component={TextField}\n          {...params}\n          label={label}\n          error={touched && error !== undefined}\n          helperText={error}\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password',\n          }}\n          InputLabelProps={{\n            style: { color: labelTextColor },\n          }}\n        />\n      )}\n    />\n  );\n};\n","import { Form, Formik } from 'formik';\nimport * as React from 'react';\nimport * as Yup from 'yup';\nimport { TextFieldAdornment } from '../../FormFields/TextFieldAdornment';\nimport { TextField } from '../../FormFields/TextField';\nimport { Combobox } from '../../FormFields/ComboboxFieldWines';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { TypeAd, useWinesQuery } from '../../../generated/graphql';\nimport { useStylesForms } from '../../../utils/styleHook';\n\nexport interface WineFormQuery {\n  wineName: string;\n  harvest?: number | '';\n  abv?: number | '';\n  price?: number | '';\n  liters?: number | '';\n}\ninterface Wine {\n  denominazioneVino: string;\n  regione: [string];\n}\n\nconst initialValues: WineFormQuery = {\n  wineName: '',\n  harvest: 2015,\n  abv: 13.5,\n  price: 1,\n  liters: 100,\n};\nexport const WineFormQuery: React.FC<{\n  onSubmit: (values: WineFormQuery) => void;\n  adType: TypeAd;\n}> = ({ onSubmit, adType }) => {\n  const classes = useStylesForms();\n  const { data, loading, error } = useWinesQuery();\n  const wineOptions = data?.wines\n    ? data?.wines.map((wine) => ({\n        denominazioneVino: wine.denominazioneVino,\n        regione: wine.regione,\n      }))\n    : null;\n  const today = new Date();\n  const year = today.getFullYear();\n\n  if (loading) {\n    return (\n      <div className={classes.paper} data-testid='loading'>\n        <Skeleton variant='rect' width={'40em'} height={70} />\n        <br />\n        <Skeleton variant='rect' width={'40em'} height={30} />\n        <Skeleton variant='rect' width={'40em'} height={30} />\n        <Skeleton\n          className={classes.form}\n          variant='rect'\n          width={'40em'}\n          height={30}\n        />\n        <Skeleton\n          className={classes.form}\n          variant='rect'\n          width={'40em'}\n          height={30}\n        />\n        <Skeleton\n          className={classes.form}\n          variant='rect'\n          width={'40em'}\n          height={30}\n        />\n      </div>\n    );\n  }\n  if (error) return <div>Error...{error.message}</div>;\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={Yup.object({\n        wineName: Yup.string().required('Required'),\n        harvest: Yup.number()\n          .positive(\"L'anno deve essere positivo\")\n          .moreThan(1900, \"L'anno deve essere maggiore di 1900\")\n          .lessThan(year, `L'anno non può essere maggiore di ${year}`)\n          .required('Required'),\n        abv: Yup.number()\n          .positive('La gradazione alcolica deve essere positiva')\n          .lessThan(22, 'La gradazione alcolica non può essere maggiore di 22')\n          .required('Required'),\n        price: Yup.number()\n          .positive('Il prezzo al litro deve essere positivo')\n          .lessThan(100, 'Questo prezzo è al litro')\n          .required('Required'),\n        liters: Yup.number()\n          .positive('La quantità deve essere positiva')\n          .required('Required'),\n      })}\n      onSubmit={onSubmit}\n    >\n      {({ isValid, dirty, setFieldValue }) => {\n        return (\n          <Form\n            className={adType === TypeAd.Buy ? classes.form : classes.formSell}\n          >\n            <Typography\n              component='h3'\n              variant='h5'\n              color={adType === TypeAd.Buy ? 'textSecondary' : 'primary'}\n            >\n              Dati prodotto\n            </Typography>\n            <br />\n            <Combobox\n              name='wineName'\n              label='Vino'\n              items={wineOptions as Wine[]}\n              setFieldValue={setFieldValue}\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n            />\n            <TextField\n              name='harvest'\n              type='number'\n              label='Vendemmia'\n              min='1900'\n              max={`${year}`}\n              step='1'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              placeholder='Vendemmia anno'\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <TextFieldAdornment\n              name='abv'\n              type='number'\n              label='Gradazione alcolica'\n              min='0'\n              max='22'\n              step='0.5'\n              placeholder='Esempio 13.5 vol'\n              adornment='%'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <TextFieldAdornment\n              name='price'\n              type='number'\n              label='Prezzo massimo al litro'\n              min='0'\n              max='100'\n              step='0.1'\n              placeholder='Esempio 3.5 euro'\n              adornment='€'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <TextFieldAdornment\n              name='liters'\n              type='number'\n              label='Litri richiesti'\n              min='0'\n              max='999999'\n              step='1'\n              placeholder='Esempio 1000 litri'\n              adornment='l'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n\n            <Button\n              className={\n                adType === TypeAd.Buy ? classes.submit : classes.submitSell\n              }\n              //isLoading={isValidating || isSubmitting}\n              type='submit'\n              disabled={!dirty || !isValid}\n            >\n              Submit\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n","import * as React from 'react';\nimport { useField } from 'formik';\nimport InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ninterface Props {\n  name: string;\n  label: string;\n  labelColor: string;\n  textColor: string;\n  underlineColor: string;\n  options: Array<string>;\n}\n\nexport const SelectField: React.FC<Props> = (props) => {\n  const [field, { error, touched }] = useField({\n    name: props.name,\n  });\n  return (\n    <FormControl fullWidth error={error !== undefined && touched}>\n      <InputLabel\n        style={{ color: props.labelColor }}\n        htmlFor={`select-label-${props.name}`}\n      >\n        {props.label}\n      </InputLabel>\n      <Select\n        native\n        className={props.underlineColor}\n        classes={{\n          root: props.underlineColor,\n          icon: props.textColor,\n        }}\n        inputProps={{ id: `select-label-${props.name}`, name: field.name }}\n        {...field}\n      >\n        {props.options.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </Select>\n      <FormHelperText>{error}</FormHelperText>\n    </FormControl>\n  );\n};\n","import { Grid } from '@material-ui/core';\nimport { useFormikContext } from 'formik';\nimport * as React from 'react';\nimport { ComboboxComuni } from '../FormFields/ComboboxComuni';\nimport { ComboboxField } from '../FormFields/ComboboxField';\nimport { ComboboxProvince } from '../FormFields/ComboboxProvince';\nimport { optionsRegioni } from '../UserForm/data';\nimport { WineFormMutation } from '../WineForms/Post/WineFormMutation';\n\nexport const AddressForm: React.FC<{\n  setFieldValue: (\n    field: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: any,\n    shouldValidate?: boolean | undefined\n  ) => void;\n}> = ({ setFieldValue }) => {\n  const { values }: { values: WineFormMutation } = useFormikContext();\n  if (values.isSameAddress === true) {\n    return null;\n  }\n  return (\n    <>\n      <Grid item xs={12}>\n        <ComboboxField\n          setFieldValue={setFieldValue}\n          name='address.regione'\n          label='Regione'\n          items={optionsRegioni}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <ComboboxProvince\n          setFieldValue={setFieldValue}\n          name='address.provincia'\n          label='Provincia'\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <ComboboxComuni\n          setFieldValue={setFieldValue}\n          name='address.comune'\n          label='Comune'\n        />\n      </Grid>\n    </>\n  );\n};\n","import { Form, Formik } from 'formik';\nimport * as React from 'react';\nimport * as Yup from 'yup';\nimport { TextFieldAdornment } from '../../FormFields/TextFieldAdornment';\nimport { TextField } from '../../FormFields/TextField';\nimport { Combobox } from '../../FormFields/ComboboxFieldWines';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Menzione,\n  MetodoProduttivo,\n  TypeAd,\n  useWinesQuery,\n} from '../../../generated/graphql';\nimport { SelectField } from '../../FormFields/SelectField';\nimport { SliderField } from '../../FormFields/SliderField';\nimport { searchedWine } from '../../../cache';\nimport { AddressForm } from '../../AddressForm';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { useStylesForms } from '../../../utils/styleHook';\n\ninterface AddressInputForm {\n  comune: string;\n  provincia: string;\n  regione: string;\n}\n\nconst initialAddress: AddressInputForm = {\n  comune: '',\n  provincia: '',\n  regione: '',\n};\n\nexport interface WineFormMutation {\n  wineName: string;\n  harvest: number | '';\n  abv: number | '';\n  price: number | '';\n  liters: number | '';\n  sottoZona?: string;\n  menzione?: Menzione | '';\n  content: string;\n  metodoProduttivo?: MetodoProduttivo | '';\n  needsFollowUp: boolean;\n  isSameAddress: boolean;\n  address?: AddressInputForm;\n}\ninterface Wine {\n  denominazioneVino: string;\n  regione: [string];\n}\n\nexport const WineFormMutation: React.FC<{\n  onSubmit: (values: WineFormMutation) => void;\n  adType: TypeAd;\n}> = ({ onSubmit, adType }) => {\n  const { data, loading, error } = useWinesQuery();\n  const wineOptions = data?.wines\n    ? data?.wines.map((wine) => ({\n        denominazioneVino: wine.denominazioneVino,\n        regione: wine.regione,\n      }))\n    : null;\n  const classes = useStylesForms();\n  const today = new Date();\n  const year = today.getFullYear();\n  const searchedWineCache = searchedWine();\n  const initialValues: WineFormMutation = {\n    wineName: searchedWineCache?.wineName as string,\n    harvest: searchedWineCache?.harvest as number,\n    abv: searchedWineCache?.abv as number,\n    price: searchedWineCache?.price as number,\n    liters: searchedWineCache?.liters as number,\n    sottoZona: '',\n    menzione: '',\n    metodoProduttivo: '',\n    content: '',\n    needsFollowUp: false,\n    isSameAddress: false,\n    address: initialAddress,\n  };\n\n  if (loading) {\n    return (\n      <div className={classes.paper} data-testid='loading'>\n        <Skeleton variant='rect' width={'40em'} height={70} />\n        <br />\n        <Skeleton variant='rect' width={'40em'} height={30} />\n        <Skeleton variant='rect' width={'40em'} height={30} />\n        <Skeleton\n          className={classes.form}\n          variant='rect'\n          width={'40em'}\n          height={30}\n        />\n        <Skeleton\n          className={classes.form}\n          variant='rect'\n          width={'40em'}\n          height={30}\n        />\n        <Skeleton\n          className={classes.form}\n          variant='rect'\n          width={'40em'}\n          height={30}\n        />\n      </div>\n    );\n  }\n  if (error) return <div>Error...{error.message}</div>;\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={Yup.object({\n        wineName: Yup.string().required('Required'),\n        harvest: Yup.number()\n          .positive(\"L'anno deve essere positivo\")\n          .moreThan(1900, \"L'anno deve essere maggiore di 1900\")\n          .lessThan(year, `L'anno non può essere maggiore di ${year}`)\n          .required('Required'),\n        abv: Yup.number()\n          .positive('La gradazione alcolica deve essere positiva')\n          .lessThan(22, 'La gradazione alcolica non può essere maggiore di 22')\n          .required('Required'),\n        price: Yup.number()\n          .positive('Il prezzo al litro deve essere positivo')\n          .lessThan(100, 'Questo prezzo è al litro')\n          .required('Required'),\n        liters: Yup.number()\n          .positive('La quantità deve essere positiva')\n          .required('Required'),\n        sottoZona: Yup.string(),\n        menzione: Yup.string(),\n        metodoProduttivo: Yup.string(),\n        content: Yup.string().required('Required'),\n        needsFollowUp: Yup.bool().required('Required'),\n        isSameAddress: Yup.bool().required('Required'),\n        address: Yup.object().shape({\n          comune: Yup.string(),\n          provincia: Yup.string(),\n          regione: Yup.string(),\n        }),\n      })}\n      onSubmit={onSubmit}\n    >\n      {({ isValid, dirty, setFieldValue }) => {\n        return (\n          <Form\n            className={adType === TypeAd.Buy ? classes.form : classes.formSell}\n          >\n            <Typography\n              component='h3'\n              variant='h5'\n              color={adType === TypeAd.Buy ? 'textSecondary' : 'primary'}\n            >\n              Dati prodotto\n            </Typography>\n            <Combobox\n              name='wineName'\n              label='Vino'\n              defaultWine={initialValues.wineName}\n              items={wineOptions as Wine[]}\n              setFieldValue={setFieldValue}\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n            />\n            <TextField\n              name='harvest'\n              type='number'\n              label='Vendemmia'\n              min='1900'\n              max={`${year}`}\n              step='1'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              placeholder='Vendemmia anno'\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <TextFieldAdornment\n              name='abv'\n              type='number'\n              label='Gradazione alcolica'\n              min='0'\n              max='22'\n              step='0.5'\n              placeholder='Esempio 13.5 vol'\n              adornment='%'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <TextFieldAdornment\n              name='price'\n              type='number'\n              label='Prezzo richiesto al litro'\n              min='0'\n              max='100'\n              step='0.1'\n              placeholder='Esempio 3.5 euro'\n              adornment='€'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <TextFieldAdornment\n              name='liters'\n              type='number'\n              label='Litri richiesti'\n              min='0'\n              max='999999'\n              step='1'\n              placeholder='Esempio 1000 litri'\n              adornment='l'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <SelectField\n              name='menzione'\n              label='Menzione del vino'\n              options={Object.values(Menzione)}\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              textColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <SelectField\n              name='metodoProduttivo'\n              label='Metodo produttivo del vino'\n              options={Object.values(MetodoProduttivo)}\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              textColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <TextField\n              name='sottoZona'\n              type='text'\n              label='Sotto zona del vino'\n              placeholder='Sotto zona del vino'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <TextField\n              name='content'\n              type='text'\n              multiline={true}\n              label='Descrizione'\n              placeholder='Vino veramente buono'\n              underlineColor={\n                adType === TypeAd.Buy\n                  ? classes.underline\n                  : classes.underlineSell\n              }\n              labelTextColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n              inputTextColor={\n                adType === TypeAd.Buy ? classes.input : classes.inputSell\n              }\n            />\n            <SliderField\n              name='needsFollowUp'\n              label='Aggiornami se nuovi annunci pertinenti'\n              labelColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n            />\n            <SliderField\n              name='isSameAddress'\n              label='Indirizzo uguale a quello usato in registrazione'\n              labelColor={adType === TypeAd.Buy ? '#fff' : '#6d1331'}\n            />\n            <AddressForm setFieldValue={setFieldValue} />\n\n            <Button\n              //isLoading={isValidating || isSubmitting}\n              className={\n                adType === TypeAd.Buy ? classes.submit : classes.submitSell\n              }\n              type='submit'\n              disabled={!dirty || !isValid}\n            >\n              Submit\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport * as React from 'react';\nimport { searchedWine } from '../cache';\nimport { Link, useLocation, navigate } from '@reach/router';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { TypeAd } from '../generated/graphql';\n\nexport const BackButton: React.FC = () => {\n  const searchedWineCache = searchedWine();\n  const { pathname } = useLocation();\n  if (pathname.split('/')[1] === 'annunci' && pathname.split('/')[2]) {\n    return (\n      <Button\n        component={Link}\n        to='/annunci'\n        //variant='contained'\n        color='primary'\n        size='large'\n        startIcon={<ArrowBackIosIcon />}\n      >\n        Annunci\n      </Button>\n    );\n  } else if (searchedWineCache?.typeAd === TypeAd.Buy && pathname !== '/buy') {\n    return (\n      <Button\n        component={Link}\n        to='/buy'\n        //variant='contained'\n        color='primary'\n        size='large'\n        startIcon={<ArrowBackIosIcon />}\n      >\n        Compra\n      </Button>\n    );\n  } else if (\n    searchedWineCache?.typeAd === TypeAd.Sell &&\n    pathname !== '/sell'\n  ) {\n    return (\n      <Button\n        component={Link}\n        to='/sell'\n        //variant='contained'\n        color='primary'\n        size='large'\n        startIcon={<ArrowBackIosIcon />}\n      >\n        Vendi\n      </Button>\n    );\n  } else\n    return (\n      <Button\n        color='primary'\n        size='large'\n        startIcon={<ArrowBackIosIcon />}\n        onClick={() => navigate(-1)}\n      >\n        Torna indietro\n      </Button>\n    );\n};\n","import * as React from 'react';\nimport { RouteComponentProps, useLocation, navigate } from '@reach/router';\nimport { WineFormQuery } from '../components/WineForms/Search/WineFormQuery';\nimport {\n  AdInput,\n  TypeAd,\n  TypeProduct,\n  useCreateAdWineMutation,\n  useWineSearchedLazyQuery,\n  AddressInput,\n} from '../generated/graphql';\nimport { searchedWine, notification, myInfo } from '../cache';\nimport { WineFormMutation } from '../components/WineForms/Post/WineFormMutation';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { updateCacheAd } from '../utils/updateCache';\nimport { BackButton } from '../components/BackButton';\nimport { useStyles } from '../utils/styleHook';\n\nexport const Buy: React.FC<RouteComponentProps> = () => {\n  const me = myInfo();\n  const classes = useStyles();\n  const location = useLocation();\n  const adType = location.pathname === '/buy' ? TypeAd.Buy : TypeAd.Sell;\n  let sameAddress: AddressInput;\n  let differentAddress: AddressInput;\n  const [lazyWines, { data }] = useWineSearchedLazyQuery();\n  React.useEffect(() => {\n    lazyWines();\n  }, []);\n  const [createAdWineMutation] = useCreateAdWineMutation({\n    onError: (error) =>\n      notification({\n        type: 'error',\n        message: `${error.message}`,\n      }),\n    onCompleted: ({ createAd }) => {\n      if (createAd?.errors?.length === 0) {\n        notification({\n          type: 'success',\n          message: 'ad created',\n        });\n        void navigate('/');\n      }\n      if (createAd?.errors?.length) {\n        const errorMessages = createAd.errors.map((error) => error?.text);\n        notification({\n          type: 'error',\n          message: `${errorMessages.toString()}`,\n        });\n      }\n    },\n    update: (cache, response) => {\n      updateCacheAd(cache, response.data?.createAd?.response);\n    },\n  });\n\n  const onSubmitQuery = (values: WineFormQuery) => {\n    searchedWine(undefined);\n    searchedWine({\n      wineName: values.wineName,\n      typeAd: adType,\n      typeProduct: TypeProduct.AdWine,\n      liters: values.liters as number,\n      harvest: values.harvest as number,\n      abv: values.abv as number,\n      price: values.price as number,\n      isPost: false,\n    });\n    void navigate('/annunci');\n  };\n  const onSubmitMutation = (values: WineFormMutation) => {\n    if (values.isSameAddress && me?.address) {\n      sameAddress = {\n        regione: me.address.regione,\n        provincia: me.address.provincia,\n        comune: me.address.comune,\n      };\n    } else {\n      differentAddress = values.address as AddressInput;\n    }\n    const adInput: AdInput = {\n      wineName: values.wineName,\n      typeAd: data?.searchedWine?.typeAd as TypeAd,\n      typeProduct: data?.searchedWine?.typeProduct as TypeProduct,\n      content: values.content,\n      harvest: values.harvest as number,\n      abv: values.abv as number,\n      priceFrom: values.price as number,\n      priceTo: values.price as number,\n      litersFrom: values.liters as number,\n      litersTo: values.liters as number,\n      needsFollowUp: values.needsFollowUp,\n      address: values.isSameAddress ? sameAddress : differentAddress,\n    };\n    void createAdWineMutation({\n      variables: {\n        input: adInput,\n      },\n    });\n    searchedWine(undefined);\n    void navigate('/');\n  };\n  const buyOrSellText = adType === TypeAd.Buy ? 'comprare' : 'vendere';\n  const buyerSellerText = adType === TypeAd.Buy ? 'acquirente' : 'venditore';\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <BackButton />\n      <div className={classes.paper}>\n        <Typography component='h1' variant='h4' color='primary'>\n          Che cosa vuoi {buyOrSellText}?\n        </Typography>\n        <Typography component='p' color='primary'>\n          Inserisci i dati del prodotto che desideri {buyOrSellText}, noi\n          cercheremo per te il giusto {buyerSellerText}.\n        </Typography>\n        {data?.searchedWine?.isPost ? (\n          <WineFormMutation onSubmit={onSubmitMutation} adType={adType} />\n        ) : (\n          <WineFormQuery onSubmit={onSubmitQuery} adType={adType} />\n        )}\n      </div>\n    </Container>\n  );\n};\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { TypeAd } from '../generated/graphql';\n\ninterface BoxProps {\n  width: number;\n  typeAd: TypeAd;\n  children: React.ReactNode;\n  notActive?: boolean;\n}\n\nexport const StyledBox: React.FC<BoxProps> = (props) => {\n  const sellColor = props.notActive ? '#b2b2b2' : 'white';\n  const buyColor = props.notActive ? '#8a425a' : 'primary.main';\n\n  return (\n    <Box\n      boxShadow={3}\n      p={2}\n      m={2}\n      mt={2}\n      px={2}\n      pt={2}\n      width={props.width}\n      color={props.typeAd === TypeAd.Sell ? 'primary.main' : 'white'}\n      borderColor={props.typeAd === TypeAd.Sell ? 'white' : 'primary.main'}\n      bgcolor={props.typeAd === TypeAd.Sell ? sellColor : buyColor}\n      borderRadius={16}\n    >\n      {props.children}\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport { StyledBox } from './StyledBox';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from '@reach/router';\nimport { TypeAd } from '../generated/graphql';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { AdsWineResult } from '../types';\n\nexport const CardWine: React.FC<{ ad: AdsWineResult | null }> = ({ ad }) => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('sm'));\n  const width = matches ? 400 : 250;\n  const isBuy = ad?.typeAd === TypeAd.Buy ? true : false;\n  const pointerEvent = ad?.isActive ? 'auto' : 'none';\n  if (!ad) return null;\n  return (\n    <StyledBox width={width} typeAd={ad.typeAd} notActive={!ad.isActive}>\n      <Link\n        style={{ pointerEvents: pointerEvent, display: 'block' }}\n        component={RouterLink}\n        to={`/annunci/${ad._id}`}\n        underline='none'\n      >\n        <Typography\n          component='h5'\n          variant='h6'\n          color={isBuy ? 'textSecondary' : 'primary'}\n        >\n          {isBuy ? 'Compro' : 'Vendo'} {ad.wineName}{' '}\n          {/* {ad.wine.denominazioneZona} */}\n        </Typography>\n        <Typography\n          align='left'\n          variant='body1'\n          color={isBuy ? 'textSecondary' : 'primary'}\n        >\n          Annata: {ad.harvest}\n          <br />\n          Gradazione: {ad.abv} % Vol\n          <br />\n          Quantità: {ad.litersTo} l\n          <br />\n          Prezzo: {ad.priceFrom} euro al litro\n        </Typography>\n        <br />\n        <Typography\n          align='right'\n          variant='caption'\n          color={isBuy ? 'textSecondary' : 'primary'}\n        >\n          Annuncio pubblicato il {ad.datePosted}\n        </Typography>\n      </Link>\n    </StyledBox>\n  );\n};\n","import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { searchedWine } from '../../cache';\nimport { IFilters, multiFilter } from '../../utils/multiFilter';\n\nexport const PurpleCheckbox = withStyles({\n  root: {\n    color: deepPurple[400],\n    '&$checked': {\n      color: deepPurple[600],\n    },\n  },\n  checked: {},\n})((props: CheckboxProps) => <Checkbox color='default' {...props} />);\n\ninterface FilterProps {\n  setList: React.Dispatch<React.SetStateAction<Array<any> | undefined | null>>;\n  list: Array<any>;\n  filteredList?: Array<any>;\n  setFilteredList: React.Dispatch<\n    React.SetStateAction<Array<any> | undefined | null>\n  >;\n}\n\nexport const Filter: React.FC<FilterProps> = (props) => {\n  const searchedWineCache = searchedWine();\n  const [isShowAll, setIsShowAll] = React.useState<boolean>(false);\n  const [showFilter, setShowFilter] = React.useState<boolean>(false);\n  const [filterAds, setFilterAds] = React.useState<IFilters>({\n    priceTo: (priceTo: number) =>\n      priceTo <= (searchedWineCache?.price as number),\n    abv: (abv: number) =>\n      abv >= (searchedWineCache?.abv as number) - 0.5 ||\n      abv <= (searchedWineCache?.abv as number) + 0.5,\n    harvest: (harvest: number) =>\n      harvest === (searchedWineCache?.harvest as number) ||\n      harvest - 1 === (searchedWineCache?.harvest as number),\n    litersTo: (litersTo: number) =>\n      litersTo >= (searchedWineCache?.liters as number),\n  });\n  React.useEffect(() => {\n    if (props.list.length > 0) {\n      const filtredAds = multiFilter(props.list, filterAds);\n      props.setFilteredList(filtredAds);\n    }\n  }, [filterAds, props.list]);\n  const handleShowAll = () => {\n    if (!isShowAll) {\n      setFilterAds({\n        priceTo: () => true,\n        harvest: () => true,\n        abv: () => true,\n        litersTo: () => true,\n      });\n    } else {\n      setFilterAds({\n        priceTo: (priceTo: number) =>\n          priceTo <= (searchedWineCache?.price as number),\n        abv: (abv: number) =>\n          abv >= (searchedWineCache?.abv as number) - 0.5 ||\n          abv <= (searchedWineCache?.abv as number) + 0.5,\n        harvest: (harvest: number) =>\n          harvest === (searchedWineCache?.harvest as number) ||\n          harvest - 1 === (searchedWineCache?.harvest as number),\n        litersTo: (litersTo: number) =>\n          litersTo >= (searchedWineCache?.liters as number),\n      });\n    }\n    setIsShowAll(!isShowAll);\n  };\n  return (\n    <>\n      <Button\n        onClick={() => setShowFilter(!showFilter)}\n        aria-label='filter'\n        color='primary'\n        size='large'\n        startIcon={<FilterListIcon />}\n      >\n        Filtri\n      </Button>\n      <Collapse in={showFilter}>\n        <Divider />\n        <FormControlLabel\n          control={\n            <PurpleCheckbox\n              checked={isShowAll}\n              onChange={handleShowAll}\n              name='showAll'\n            />\n          }\n          label='Mostra tutti gli annunci per questo vino'\n        />\n      </Collapse>\n    </>\n  );\n};\n","export interface IFilters {\n  [key: string]: (value: any) => boolean;\n}\n\ninterface IArray {\n  [key: string]: any;\n}\n\n// function taken from https://gist.github.com/jherax/f11d669ba286f21b7a2dcff69621eb72\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function multiFilter(\n  array: Array<IArray>,\n  filters: IFilters\n): Array<IArray> {\n  const filterKeys = Object.keys(filters);\n  return array.filter((item) => {\n    // validates all filter criteria\n    return filterKeys.every((key) => {\n      // ignores non-function predicates\n      if (typeof filters[key] !== 'function') return true;\n      return filters[key](item[key]);\n    });\n  });\n}\n","import * as React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    snackbarStyle: {\n      backgroundColor: '#6d1331',\n      '&:hover': {\n        backgroundColor: 'rgb(100, 10, 40)',\n        cursor: 'pointer',\n      },\n    },\n  })\n);\ninterface SnackbarProps {\n  onClick: () => void;\n}\n\nexport const SnackbarAds: React.FC<SnackbarProps> = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      setOpen(false);\n      return;\n    }\n\n    setOpen(false);\n  };\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        color='primary'\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        onClick={props.onClick}\n        ContentProps={{\n          className: classes.snackbarStyle,\n        }}\n        message='Vuoi creare un annuncio?'\n      />\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport * as React from 'react';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { QueryOrderBy } from '../../generated/graphql';\n\ninterface OrderProps {\n  setOrder: React.Dispatch<React.SetStateAction<QueryOrderBy>>;\n  order: QueryOrderBy;\n}\n\nexport const Order: React.FC<OrderProps> = (props) => {\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setOrder(event.target.value as QueryOrderBy);\n  };\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel style={{ color: 'black' }} htmlFor='order'>\n        Ordine risultati\n      </InputLabel>\n      <Select\n        native\n        value={props.order}\n        onChange={handleChange}\n        inputProps={{\n          name: 'order',\n          id: 'order',\n        }}\n      >\n        <option aria-label='None' value='' />\n        <option value={QueryOrderBy.CreatedAtDesc}>Dal piu recente</option>\n        <option value={QueryOrderBy.CreatedAtAsc}>Dal meno recente</option>\n        <option value={QueryOrderBy.PriceDesc}>Dal piu caro</option>\n        <option value={QueryOrderBy.PriceAsc}>Dal meno caro</option>\n      </Select>\n    </FormControl>\n  );\n};\n","import { useLocation } from '@reach/router';\nimport * as React from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useIntersect } from '../utils/useIntersectionHook';\nimport { makeStyles, createStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\ninterface InfiniteScrollProps {\n  children: React.ReactNode;\n  fetchMore: () => void;\n  isVisible: boolean;\n  isLoading: boolean;\n  setIsLoading?: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n  })\n);\n\nexport const InfiniteScroll: React.FC<InfiniteScrollProps> = (props) => {\n  const classes = useStyles();\n  const { pathname } = useLocation();\n  const message = pathname.split('/')[1] === 'messaggi';\n  const [ref, entry] = useIntersect({ threshold: 0 });\n  const [isOk, setIsOk] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    if (entry && entry?.intersectionRatio >= 0.5 && isOk) {\n      void props.fetchMore();\n      props.setIsLoading && props.setIsLoading(true);\n      setIsOk(false);\n    } else if (entry?.intersectionRatio === 0 && !isOk) {\n      setIsOk(true);\n      props.setIsLoading && props.setIsLoading(false);\n    }\n  }, [entry?.intersectionRatio]);\n  if (message) {\n    return (\n      <>\n        {props.isVisible ? (\n          <div className={classes.root} id='page-bottom-boundary' ref={ref}>\n            {' '}\n            <ExpandMoreIcon />\n          </div>\n        ) : null}\n        {props.children}\n      </>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      {props.children}\n      {props.isVisible ? (\n        props.isLoading ? (\n          <CircularProgress />\n        ) : (\n          <div id='page-bottom-boundary' ref={ref} style={{ height: 30 }}>\n            {' '}\n            <ExpandMoreIcon />\n          </div>\n        )\n      ) : null}\n    </div>\n  );\n};\n","import * as React from 'react';\n\nexport const useIntersect = ({\n  root = null,\n  rootMargin = '0px',\n  threshold = 0,\n}): [\n  React.Dispatch<React.SetStateAction<HTMLDivElement | null>>,\n  IntersectionObserverEntry | null\n] => {\n  const [entry, setEntry] = React.useState<IntersectionObserverEntry | null>(\n    null\n  );\n  const [node, setNode] = React.useState<HTMLDivElement | null>(null);\n\n  const observer = React.useRef<IntersectionObserver | null>(null);\n\n  React.useEffect(() => {\n    if (observer.current) {\n      observer.current.disconnect();\n    }\n    observer.current = new window.IntersectionObserver(\n      ([entry]) => setEntry(entry),\n      { root, rootMargin, threshold }\n    );\n\n    const { current: currentObserver } = observer;\n\n    if (node) {\n      currentObserver.observe(node);\n    }\n    return () => currentObserver.disconnect();\n  }, [node, root, rootMargin, threshold]);\n  return [setNode, entry];\n};\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { navigate, RouteComponentProps } from '@reach/router';\nimport {\n  AdsWineQuery,\n  QueryOrderBy,\n  TypeAd,\n  TypeProduct,\n  useAdsWineLazyQuery,\n} from '../generated/graphql';\nimport { DeepExtractType } from 'ts-deep-extract-types';\nimport { notification, searchedWine } from '../cache';\nimport { CardWine } from '../components/CardWine';\nimport { BackButton } from '../components/BackButton';\nimport { Filter } from '../components/FilterAds';\nimport { SnackbarAds } from '../components/Snackbar';\nimport { useTheme } from '@material-ui/core/styles';\nimport { StyledBox } from '../components/StyledBox';\nimport { useMediaQuery } from '@material-ui/core';\nimport { Order } from '../components/FilterAds/Order';\nimport { InfiniteScroll } from '../components/InfiniteScrollFetch';\nimport { AdsWineResult } from '../types';\n\nexport const Ads: React.FC<RouteComponentProps> = () => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('sm'));\n  const width = matches ? 400 : 250;\n  const searchedWineCache = searchedWine();\n  const [ads, setAds] = React.useState<\n    DeepExtractType<AdsWineQuery, ['ads']>['ads']\n  >([]);\n  const [adsFiltered, setAdsFiltered] = React.useState<\n    DeepExtractType<AdsWineQuery, ['ads']>['ads']\n  >([]);\n  const [order, setOrder] = React.useState<QueryOrderBy>(\n    QueryOrderBy.CreatedAtDesc\n  );\n  const [query, result] = useAdsWineLazyQuery({\n    variables: {\n      offset: 0,\n      limit: 4,\n      orderBy: order,\n      wineName: searchedWineCache?.wineName,\n      typeProduct: searchedWineCache?.typeProduct as TypeProduct,\n      typeAd:\n        searchedWineCache?.typeAd === TypeAd.Buy ? TypeAd.Sell : TypeAd.Buy,\n    },\n    onError: (error) => notification({ type: 'error', message: error.message }),\n  });\n  React.useEffect(() => {\n    if (searchedWineCache?.wineName) {\n      query();\n    } else {\n      void navigate('/');\n    }\n  }, [searchedWineCache]);\n  React.useEffect(() => {\n    if (result.data?.ads) {\n      setAds(result.data.ads.ads);\n    }\n  }, [result.data]);\n\n  React.useEffect(() => {\n    if (result.fetchMore && ads && ads.length) {\n      result\n        .fetchMore({\n          variables: { orderBy: order, limit: ads.length },\n        })\n        .catch((e) => console.log(e));\n    }\n  }, [order]);\n\n  const onClick = async () => {\n    if (searchedWineCache === undefined) {\n      return;\n    } else {\n      searchedWine({\n        ...searchedWineCache,\n        isPost: true,\n      });\n      const url = searchedWineCache.typeAd === TypeAd.Buy ? '/buy' : '/sell';\n      await navigate(url);\n    }\n  };\n\n  const defaultText =\n    \"Questi sono gli annunci che abbiamo trovato per te: sono stati pubblicati da utenti interessati all'acquisto.\";\n  const noAdsText =\n    'Non abbiamo trovato nulla che corrisponde ai criteri di ricerca, ma esistono annunci per questo vino, clicca su filtri e mostra tutto per vederli';\n\n  const NoResults = () => (\n    <div onClick={onClick}>\n      Non abbiamo trovato nulla, vuoi creare un annuncio?\n    </div>\n  );\n  if (result.data?.ads && result.data?.ads?.pageCount === 0) {\n    return <NoResults />;\n  }\n  const handleFetchMore = async () => {\n    if (result.fetchMore) {\n      try {\n        await result.fetchMore({\n          variables: { offset: result.data?.ads?.ads?.length, orderBy: order },\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n  if (ads?.length === 0) {\n    return <div>Non hai ancora creato annunci</div>;\n  }\n  if (ads && ads.length && result.data?.ads?.ads?.length !== 0) {\n    return (\n      <Container component='main' maxWidth='xs'>\n        <CssBaseline />\n        <BackButton />\n        <Typography color='primary' component='h3' variant='h5'>\n          La tua ricerca\n        </Typography>\n        <StyledBox typeAd={searchedWineCache?.typeAd as TypeAd} width={width}>\n          <Typography component='h5' variant='h6'>\n            {searchedWineCache?.typeAd === TypeAd.Buy ? `Compro ` : `Vendo`}{' '}\n            {searchedWineCache?.wineName}\n          </Typography>\n          <Typography align='left' variant='body1'>\n            {`Annata: ${searchedWineCache?.harvest as number}`}\n            <br />\n            {`Gradazione: ${searchedWineCache?.abv as number} % Vol`}\n            <br />\n            {`Quantità: ${searchedWineCache?.liters as number} l`}\n            <br />\n            {`Prezzo: ${searchedWineCache?.price as number} euro al litro`}\n          </Typography>\n        </StyledBox>\n        <br />\n        <Typography color='primary' component='h3' variant='h5'>\n          I nostri risultati\n        </Typography>\n        <Typography variant='body2'>\n          {adsFiltered && adsFiltered.length > 0 ? defaultText : noAdsText}\n        </Typography>\n        <Filter setList={setAds} list={ads} setFilteredList={setAdsFiltered} />\n        <Order setOrder={setOrder} order={order} />\n        <br />\n        <InfiniteScroll\n          fetchMore={handleFetchMore}\n          isVisible={ads.length !== result.data?.ads?.pageCount}\n          isLoading={result.loading}\n        >\n          {' '}\n          {adsFiltered &&\n            adsFiltered.map((ad) => (\n              <CardWine key={ad && ad._id} ad={ad as AdsWineResult} />\n            ))}\n        </InfiniteScroll>\n        <SnackbarAds onClick={onClick} />\n      </Container>\n    );\n  }\n  return <Skeleton />;\n};\n","import * as React from 'react';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport _ from 'lodash';\nimport {\n  useSaveAdMutation,\n  MeDocument,\n  AdWine,\n  AdQuery,\n} from '../generated/graphql';\nimport { ICachedMe } from '../utils/updateCache';\n\nexport const FavoriteButton: React.FC<{\n  ad: AdQuery['ad'];\n}> = ({ ad }) => {\n  const [saveAd] = useSaveAdMutation({\n    onError: (error) => console.log(error),\n    update: (cache, response) => {\n      const cachedDataMeLocal: ICachedMe | null = _.cloneDeep(\n        cache.readQuery({\n          query: MeDocument,\n        })\n      );\n      if (cachedDataMeLocal?.me.savedAds && isFav) {\n        const indexAd = cachedDataMeLocal?.me.savedAds.findIndex(\n          (adSaved) => adSaved._id === ad?._id\n        );\n        cachedDataMeLocal?.me.savedAds.splice(indexAd, 1);\n      } else if (cachedDataMeLocal?.me.savedAds) {\n        cachedDataMeLocal?.me.savedAds.push(\n          response.data?.saveAd?.response as AdWine\n        );\n      }\n      cache.writeQuery({ query: MeDocument, data: cachedDataMeLocal });\n    },\n  });\n  const [isFav, setIsFav] = React.useState<boolean>(false);\n  const handleClick = (id: string) => {\n    void saveAd({ variables: { id } });\n    setIsFav(!isFav);\n  };\n  return (\n    <IconButton\n      aria-label='save'\n      onClick={() => handleClick(ad?._id as string)}\n    >\n      {isFav ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n    </IconButton>\n  );\n};\n","import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nexport const NegotiationModal: React.FC<{\n  handleClose: () => void;\n  open: boolean;\n  createNegotiation: () => void;\n}> = ({ handleClose, open, createNegotiation }) => {\n  const handleClick = () => {\n    createNegotiation();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='open-negotiation'\n      >\n        <DialogContent>\n          <Button onClick={handleClick}> Apri la trattativa</Button>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { AdQuery, TypeAd } from '../generated/graphql';\nimport { Button, Grid } from '@material-ui/core';\nimport { FavoriteButton } from '../containers/FavoriteButton';\nimport { NegotiationModal } from './NegotiationModal';\nimport { StyledBox } from './StyledBox';\nimport { useStyles } from '../utils/styleHook';\n\nexport const CardWineDetail: React.FC<{\n  ad: AdQuery['ad'];\n  me: AdQuery['me'];\n  createNegotiation: () => void;\n}> = ({ ad, createNegotiation, me }) => {\n  const classes = useStyles();\n  const isBuy = ad?.typeAd === TypeAd.Buy ? true : false;\n  const [openModal, setOpenModal] = React.useState<boolean>(false);\n  const handleClickOpen = () => {\n    setOpenModal(true);\n  };\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  const ContactOrEdit = () => {\n    if (me?._id === ad?.postedBy._id) {\n      return (\n        <Button className={isBuy ? classes.buyButton : classes.sellButton}>\n          Modifica l annuncio\n        </Button>\n      );\n    } else if (\n      me?.negotiations?.find((negotiation) => negotiation?.ad._id === ad?._id)\n    ) {\n      return <div>negoziazione gia aperta</div>;\n    }\n    if (!ad?.isActive) {\n      return <Typography>Annuncio non piu attivo </Typography>;\n    }\n    return (\n      <>\n        <Button\n          className={isBuy ? classes.buyButton : classes.sellButton}\n          onClick={handleClickOpen}\n        >\n          Contatta il {ad?.typeAd === TypeAd.Buy ? 'compratore' : 'venditore'}\n        </Button>\n        <NegotiationModal\n          handleClose={handleClose}\n          open={openModal}\n          createNegotiation={createNegotiation}\n        />\n      </>\n    );\n  };\n  const adWine = ad?.__typename === 'AdWine' ? ad : null;\n  return (\n    <StyledBox width={1} typeAd={ad?.typeAd as TypeAd}>\n      {ad?.postedBy._id !== me?._id ? <FavoriteButton ad={ad} /> : null}\n\n      <Typography component='h5' variant='h5'>\n        L&apos;utente {ad?.postedBy.firstName} {isBuy ? 'compra' : 'vende'}:\n      </Typography>\n      <Typography align='left' variant='h6'>\n        {adWine?.wineName} {adWine?.wine?.denominazioneZona}\n        <br />\n        Annata: {ad?.harvest}\n        <br />\n        Gradazione: {ad?.abv} % Vol\n        <br />\n        Quantità: {adWine?.litersTo}\n        <br />\n        Prezzo: {ad?.priceFrom} euro al litro\n      </Typography>\n      <br />\n      <Typography align='left' component='h5' variant='h5'>\n        Indirizzo\n      </Typography>\n      <br />\n      <Typography align='left' variant='h6'>\n        Regione: {ad?.address?.regione}\n        <br />\n        Provincia: {ad?.address?.provincia}\n        <br />\n        Comune: {ad?.address?.comune}\n      </Typography>\n      <br />\n      <ContactOrEdit />\n      <Grid container justify='space-between'>\n        <Typography align='left' variant='caption'>\n          Annuncio visualizzato {ad?.numberViews} volte\n        </Typography>\n\n        <Typography align='right' variant='caption'>\n          Negoziazioni attive: {ad?.activeNegotiations}\n        </Typography>\n      </Grid>\n    </StyledBox>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport * as React from 'react';\nimport { notification } from '../cache';\nimport { useUpdateNegotiationMutation } from '../generated/graphql';\nimport { useStyles } from '../utils/styleHook';\n\nexport const CloseNegotiationButton: React.FC<{\n  id: string;\n  isBuy?: boolean;\n}> = ({ id, isBuy }) => {\n  const classes = useStyles();\n  const [closeNegotiation, { loading }] = useUpdateNegotiationMutation({\n    onCompleted: (closedNegotiation) => {\n      if (closedNegotiation.updateNegotiation?.errors?.length) {\n        const errorMessages = closedNegotiation.updateNegotiation?.errors.map(\n          (error) => error?.text\n        );\n        notification({\n          type: 'error',\n          message: `${errorMessages.toString()}`,\n        });\n      } else {\n        notification({\n          message: 'trattativa chiusa con successo',\n          type: 'success',\n        });\n      }\n    },\n\n    onError: (error) => notification({ type: 'error', message: error.message }),\n  });\n\n  const handleCloseNegotiation = async () => {\n    await closeNegotiation({\n      variables: { negotiation: { _id: id, isConcluded: true } },\n    });\n  };\n\n  return (\n    <Button\n      className={isBuy ? classes.buyButton : classes.sellButton}\n      disabled={loading}\n      onClick={handleCloseNegotiation}\n    >\n      Dichiara chiusa la trattativa\n    </Button>\n  );\n};\n","import { LazyQueryResult } from '@apollo/client';\nimport * as React from 'react';\nimport { Exact, NegotiationsForAdQuery } from '../generated/graphql';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { Link } from '@reach/router';\nimport { CloseNegotiationButton } from '../containers/CloseNegotiationButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useStyles } from '../utils/styleHook';\n\nexport const OpenNegotiations: React.FC<{\n  data: LazyQueryResult<\n    NegotiationsForAdQuery,\n    Exact<{\n      ad: string;\n    }>\n  >;\n  showNegotiations: () => void;\n}> = ({ data, showNegotiations }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState<boolean>(false);\n  const handleShowNegotiations = () => {\n    if (!open) {\n      showNegotiations();\n    }\n    setOpen(!open);\n  };\n  if (data.loading) {\n    return <div>loading</div>;\n  }\n  if (data.error) {\n    return <div>error</div>;\n  }\n  return (\n    <>\n      <IconButton onClick={handleShowNegotiations}>\n        {!open ? <ExpandMoreIcon /> : <ExpandLessIcon />}\n      </IconButton>\n      <Collapse in={open}>\n        <List aria-label='negotiations'>\n          {data?.data?.negotiationsForAd?.map((negotiation) => (\n            <div key={negotiation._id}>\n              <ListItem>\n                <div>\n                  <Typography color='primary' component='h3' variant='h5'>\n                    {negotiation.createdBy.firstName}\n                  </Typography>\n                  <br />\n                  <Typography color='secondary' variant='body1'>\n                    aperta il {negotiation.dateCreated}{' '}\n                    {negotiation.dateConcluded\n                      ? `chiusa il ${negotiation.dateConcluded}`\n                      : null}\n                  </Typography>\n\n                  <br />\n                  <Button\n                    className={classes.buyButton}\n                    component={Link}\n                    to={`/messaggi/${negotiation._id}`}\n                  >\n                    Vai alla chat\n                  </Button>\n                  <br />\n                  {!negotiation.isConcluded ? (\n                    <CloseNegotiationButton isBuy={true} id={negotiation._id} />\n                  ) : (\n                    <Button>Lascia una recensione</Button>\n                  )}\n                </div>\n              </ListItem>\n              <Divider />\n            </div>\n          ))}\n        </List>\n      </Collapse>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { useParams } from '@reach/router';\nimport {\n  TypeAd,\n  useAdQuery,\n  useCreateNegotiationMutation,\n  NegotiationInput,\n  useNegotiationsForAdLazyQuery,\n  AdQuery,\n} from '../generated/graphql';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { notification } from '../cache';\nimport { CardWineDetail } from '../components/CardWineDetail';\nimport { Container, CssBaseline, Typography } from '@material-ui/core';\nimport { BackButton } from '../components/BackButton';\nimport { updateCacheNegotiations } from '../utils/updateCache';\nimport { OpenNegotiations } from '../components/OpenNegotiations';\nimport { useStyles } from '../utils/styleHook';\n\nexport const Ad: React.FC<RouteComponentProps> = () => {\n  const [ad, setAd] = React.useState<AdQuery['ad'] | undefined>(undefined);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { id }: { id: string } = useParams();\n  const { data, loading, error } = useAdQuery({\n    variables: {\n      id: id,\n    },\n    onCompleted: (data) => (data?.ad ? setAd(data?.ad) : null),\n  });\n\n  React.useEffect(() => {\n    if (data?.ad) {\n      setAd(data?.ad);\n    }\n  }, [data?.ad?.activeNegotiations]);\n  const [createNegotiation] = useCreateNegotiationMutation({\n    onCompleted: (createdNegotiation) => {\n      if (createdNegotiation.createNegotiation?.errors?.length) {\n        const errorMessages = createdNegotiation.createNegotiation?.errors.map(\n          (error) => error?.text\n        );\n        notification({\n          type: 'error',\n          message: `${errorMessages.toString()}`,\n        });\n      } else {\n        notification({\n          message: 'trattativa creata con successo',\n          type: 'success',\n        });\n      }\n    },\n    onError: (error) =>\n      notification({\n        type: 'error',\n        message: `errore durante creazione trattativa: ${error.message}`,\n      }),\n    update: (cache, response) => {\n      updateCacheNegotiations(\n        cache,\n        response.data?.createNegotiation?.response\n      );\n    },\n  });\n  const [lazyNegotiations, lazyNegResult] = useNegotiationsForAdLazyQuery();\n  const handleShowNegotiations = () => {\n    lazyNegotiations({ variables: { ad: id } });\n  };\n  const openNegotiation = () => {\n    const newNegotiation: NegotiationInput = {\n      forUserAd: ad?.postedBy._id,\n      ad: ad?._id,\n      type: ad?.typeAd,\n    } as NegotiationInput;\n    void createNegotiation({ variables: { negotiation: newNegotiation } });\n  };\n  const classes = useStyles();\n  if (error && !loading) {\n    notification({\n      type: 'error',\n      message: `${error.message}`,\n    });\n    return <div>Errore</div>;\n  }\n\n  const buyerOrSeller =\n    ad?.typeAd === TypeAd.Buy ? \"L'acquirente\" : 'Il venditore';\n  if (ad?._id) {\n    return (\n      <Container component='main' maxWidth='xs'>\n        <CssBaseline />\n        <BackButton />\n        <div className={classes.paper}>\n          <Typography color='primary' component='h3' variant='h5'>\n            Contatta {buyerOrSeller}\n          </Typography>\n          <Typography color='secondary' variant='body1'>\n            Questo è uno degli annunci che abbiamo selezionato per te: verifica\n            anche tu i parametri e decidi se procedere.\n          </Typography>\n        </div>\n        <CardWineDetail\n          ad={ad}\n          createNegotiation={openNegotiation}\n          me={data?.me}\n        />\n        {data?.me?._id === ad.postedBy._id ? (\n          <OpenNegotiations\n            data={lazyNegResult}\n            showNegotiations={handleShowNegotiations}\n          />\n        ) : null}\n      </Container>\n    );\n  }\n  return (\n    <>\n      <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    </>\n  );\n};\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { RouteComponentProps } from '@reach/router';\nimport {\n  QueryOrderBy,\n  useAdsForUserLazyQuery,\n  AdsWineQuery,\n} from '../generated/graphql';\nimport { BackButton } from '../components/BackButton';\nimport { Order } from '../components/FilterAds/Order';\nimport { InfiniteScroll } from '../components/InfiniteScrollFetch';\nimport { myInfo } from '../cache';\nimport { DeepExtractType } from 'ts-deep-extract-types';\nimport { CardWine } from '../components/CardWine';\nimport { AdsWineResult } from '../types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Divider from '@material-ui/core/Divider';\nimport { PurpleCheckbox } from '../components/FilterAds';\n\nexport const MyAds: React.FC<RouteComponentProps> = () => {\n  const me = myInfo();\n  const [active, setActive] = React.useState<true | undefined>(undefined);\n  const [ads, setAds] = React.useState<\n    DeepExtractType<AdsWineQuery, ['ads']>['ads']\n  >([]);\n  const [adsFiltered, setAdsFiltered] = React.useState<\n    DeepExtractType<AdsWineQuery, ['ads']>['ads']\n  >([]);\n  const [order, setOrder] = React.useState<QueryOrderBy>(\n    QueryOrderBy.CreatedAtDesc\n  );\n  const [hideNotActive, setHideNotActive] = React.useState<boolean>(false);\n  const [query, result] = useAdsForUserLazyQuery({\n    variables: {\n      offset: 0,\n      limit: 4,\n      orderBy: QueryOrderBy.CreatedAtDesc,\n      user: me?._id as string,\n      isActive: active,\n    },\n    onError: (error) => console.log(error),\n  });\n  React.useEffect(() => {\n    if (me?._id) {\n      query();\n    }\n  }, [me]);\n  React.useEffect(() => {\n    if (result.data?.adsForUser) {\n      setAds(result.data.adsForUser.ads);\n    }\n  }, [result.data]);\n  React.useEffect(() => {\n    if (ads && ads.length && result.fetchMore) {\n      result\n        .fetchMore({\n          variables: { orderBy: order, limit: ads.length },\n        })\n        .catch((e) => console.log(e));\n    }\n  }, [order]);\n  React.useEffect(() => {\n    setAdsFiltered(ads);\n    if (hideNotActive && ads?.length) {\n      setAdsFiltered(ads?.filter((a) => a?.isActive));\n    }\n  }, [hideNotActive, ads]);\n  const handleChange = () => {\n    setHideNotActive(!hideNotActive);\n    if (hideNotActive) {\n      setActive(undefined);\n      setAdsFiltered(ads);\n    } else {\n      setActive(true);\n    }\n  };\n\n  if (ads?.length === 0) {\n    return <div>Non hai ancora creato annunci</div>;\n  }\n\n  if (ads?.length) {\n    const handleFetchMore = async () => {\n      if (result.fetchMore) {\n        try {\n          await result.fetchMore({\n            variables: {\n              offset: adsFiltered?.length,\n              orderBy: order,\n              isActive: active,\n            },\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n    return (\n      <Container component='main' maxWidth='xs'>\n        <CssBaseline />\n        <BackButton />\n        <br />\n        <Typography color='primary' component='h3' variant='h5'>\n          Gli annunci che hai creato\n        </Typography>\n        <br />\n        <Order setOrder={setOrder} order={order} />\n        <Divider />\n        <FormControlLabel\n          control={\n            <PurpleCheckbox\n              checked={hideNotActive}\n              onChange={handleChange}\n              name='showAll'\n            />\n          }\n          label='Nascondi gli annunci inattivi'\n        />\n        <InfiniteScroll\n          fetchMore={handleFetchMore}\n          isVisible={adsFiltered?.length !== result.data?.adsForUser?.pageCount}\n          isLoading={result.loading}\n        >\n          {' '}\n          {adsFiltered &&\n            adsFiltered.map((ad) => (\n              <CardWine key={ad && ad._id} ad={ad as AdsWineResult} />\n            ))}\n        </InfiniteScroll>\n      </Container>\n    );\n  }\n  return <Skeleton />;\n};\n","import Button from '@material-ui/core/Button';\nimport * as React from 'react';\nimport { notification } from '../cache';\nimport { useCreateReviewMutation, TypeAd } from '../generated/graphql';\nimport {\n  StyledRating,\n  useStyles as useStylesHook,\n  useStylesForms,\n  useStyleRating,\n} from '../utils/styleHook';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst labels: { [index: string]: string } = {\n  0.5: 'Useless',\n  1: 'Useless+',\n  1.5: 'Poor',\n  2: 'Poor+',\n  2.5: 'Ok',\n  3: 'Ok+',\n  3.5: 'Good',\n  4: 'Good+',\n  4.5: 'Excellent',\n  5: 'Excellent+',\n};\n\nexport const CreateReview: React.FC<{\n  idNegotiation: string;\n  idUser: string;\n  type: TypeAd;\n  isBuy?: boolean;\n}> = ({ idUser, idNegotiation, isBuy, type }) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [value, setValue] = React.useState<number | null>(2);\n  const [hover, setHover] = React.useState<number>(-1);\n  const [review, setReview] = React.useState<string>('');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setReview(event.target.value);\n  };\n  const classes = useStylesHook();\n  const classesTextField = useStylesForms();\n  const classesStars = useStyleRating();\n  const [createReview, { loading }] = useCreateReviewMutation({\n    onCompleted: (createdReview) => {\n      if (createdReview.createReview?.errors?.length) {\n        const errorMessages = createdReview.createReview?.errors.map(\n          (error) => error?.text\n        );\n        notification({\n          type: 'error',\n          message: `${errorMessages.toString()}`,\n        });\n      } else {\n        notification({\n          type: 'success',\n          message: 'Recensione creata con successo',\n        });\n      }\n\n      handleClose();\n    },\n\n    onError: (error) => notification({ type: 'error', message: error.message }),\n  });\n  const handleModal = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleCreateReview = () => {\n    void createReview({\n      variables: {\n        review: {\n          forUser: idUser,\n          rating: value as number,\n          negotiation: idNegotiation,\n          content: review,\n          type: type,\n        },\n      },\n    });\n  };\n\n  return (\n    <>\n      <Button\n        className={isBuy ? classes.buyButton : classes.sellButton}\n        disabled={loading}\n        onClick={handleModal}\n      >\n        Lascia una recensione\n      </Button>\n      <div style={{ visibility: 'hidden' }}>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby='form-dialog-title'\n        >\n          <DialogTitle id='form-dialog-title'>\n            Lascia una recensione\n          </DialogTitle>\n\n          <DialogContent>\n            <div className={classesStars.root}>\n              <StyledRating\n                name='hover-feedback'\n                value={value}\n                precision={0.5}\n                onChange={(event, newValue) => {\n                  setValue(newValue);\n                }}\n                onChangeActive={(event, newHover) => {\n                  setHover(newHover);\n                }}\n              />\n              {value !== null && (\n                <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>\n              )}\n            </div>\n            <TextField\n              color='primary'\n              multiline\n              rows={4}\n              value={review}\n              onChange={handleChange}\n              InputLabelProps={{\n                style: { color: '#6d1331' },\n              }}\n              InputProps={{\n                className: classesTextField.inputSell,\n                classes: {\n                  underline: classesTextField.underlineSell,\n                },\n              }}\n              id='outlined-multiline-flexible'\n              label='Recensione'\n              placeholder='Ottima persona con cui....'\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color='primary'>\n              Cancel\n            </Button>\n            <Button onClick={handleCreateReview} color='primary'>\n              Recensisci\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from '@reach/router';\nimport { NegotiationDetailsFragment } from '../generated/graphql';\nimport { TypeAd } from '../generated/graphql';\nimport Button from '@material-ui/core/Button';\nimport { useTheme, useMediaQuery } from '@material-ui/core';\nimport { StyledBox } from './StyledBox';\nimport { CloseNegotiationButton } from '../containers/CloseNegotiationButton';\nimport { useStyles } from '../utils/styleHook';\nimport { Grid } from '@material-ui/core';\nimport { CreateReview } from '../containers/CreateReview';\nimport { myInfo } from '../cache';\n\nexport const CardNegotiation: React.FC<{\n  negotiation: NegotiationDetailsFragment;\n}> = ({ negotiation }) => {\n  const me = myInfo();\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('sm'));\n  const width = matches ? 400 : 250;\n  const [showCloseNeg, setShowCloseNeg] = React.useState<boolean>(true);\n  const isBuy = negotiation.type === TypeAd.Buy ? true : false;\n  const handleClick = () => {\n    setShowCloseNeg(false);\n  };\n  const isReviewed =\n    negotiation.review?.findIndex(\n      (review) => review?.createdBy._id === me?._id\n    ) !== -1;\n  return (\n    <StyledBox width={width} typeAd={negotiation.type}>\n      <Link\n        component={RouterLink}\n        to={`/trattative/${negotiation._id}`}\n        style={{ textDecoration: 'none' }}\n      >\n        <Typography\n          component='h5'\n          variant='h6'\n          color={isBuy ? 'textSecondary' : 'primary'}\n        >\n          {isBuy ? 'Compro' : 'Vendo'}{' '}\n          {negotiation.ad.__typename === 'AdWine' && negotiation.ad.wineName}{' '}\n          {/* {ad.wine.denominazioneZona} */}\n        </Typography>\n        <Typography\n          align='left'\n          variant='body1'\n          color={isBuy ? 'textSecondary' : 'primary'}\n        >\n          Aperta da: cantina {negotiation.createdBy.firstName}\n          <br />\n          Per cantina: {negotiation.forUserAd.firstName}\n          <br />\n          {negotiation.isConcluded ? 'Trattativa conclusa' : null}\n        </Typography>\n        <br />\n        <Typography\n          align='right'\n          variant='caption'\n          color={isBuy ? 'textSecondary' : 'primary'}\n        >\n          Trattativa aperta il {negotiation.dateCreated}\n        </Typography>\n      </Link>\n      <Grid>\n        {negotiation.isConcluded || !showCloseNeg ? (\n          !isReviewed ? (\n            <CreateReview\n              isBuy={isBuy}\n              idNegotiation={negotiation._id}\n              type={negotiation.type}\n              idUser={\n                negotiation.createdBy._id === me?._id\n                  ? negotiation.forUserAd._id\n                  : negotiation.createdBy._id\n              }\n            />\n          ) : null\n        ) : (\n          <div onClick={handleClick}>\n            {' '}\n            <CloseNegotiationButton isBuy={isBuy} id={negotiation._id} />\n          </div>\n        )}\n      </Grid>\n\n      <Button\n        className={isBuy ? classes.buyButton : classes.sellButton}\n        color='primary'\n        component={RouterLink}\n        to={`/messaggi/${negotiation._id}`}\n      >\n        Apri la chat\n      </Button>\n    </StyledBox>\n  );\n};\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { RouteComponentProps } from '@reach/router';\nimport {\n  NegotiationDetailsFragment,\n  NegotiationsQuery,\n  QueryOrderBy,\n  useNegotiationsLazyQuery,\n} from '../generated/graphql';\nimport { CardNegotiation } from '../components/CardNegotiation';\nimport { BackButton } from '../components/BackButton';\nimport { Order } from '../components/FilterAds/Order';\nimport { InfiniteScroll } from '../components/InfiniteScrollFetch';\nimport { DeepExtractType } from 'ts-deep-extract-types';\nimport { notification } from '../cache';\nimport { PurpleCheckbox } from '../components/FilterAds';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Divider from '@material-ui/core/Divider';\n\nexport const Negotiations: React.FC<RouteComponentProps> = () => {\n  const [lazyNegotiations, result] = useNegotiationsLazyQuery({\n    onError: (error) => console.log(error),\n  });\n  const [negotiations, setNegotiations] = React.useState<\n    DeepExtractType<NegotiationsQuery, ['negotiations']>['negotiations']\n  >([]);\n  const [order, setOrder] = React.useState<QueryOrderBy>(\n    QueryOrderBy.CreatedAtDesc\n  );\n  const [isShowAll, setIsShowAll] = React.useState<boolean>(false);\n\n  const handleShowAll = () => {\n    if (isShowAll && result.refetch) {\n      void result.refetch({\n        offset: 0,\n        limit: 4,\n        orderBy: order,\n        isConcluded: false,\n      });\n      setIsShowAll(false);\n    }\n    if (result.fetchMore && !isShowAll) {\n      try {\n        void result.fetchMore({\n          variables: { limit: negotiations?.length, isConcluded: true },\n        });\n        setIsShowAll(true);\n      } catch (e) {\n        notification({\n          type: 'error',\n          message: 'Errore durante il caricamento delle trattative',\n        });\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    void lazyNegotiations({\n      variables: {\n        offset: 0,\n        limit: 4,\n        orderBy: order,\n        isConcluded: false,\n      },\n    });\n  }, []);\n  const isVisible =\n    negotiations?.length !== result.data?.negotiations?.pageCount;\n  React.useEffect(() => {\n    if (result.data?.negotiations?.negotiations?.length) {\n      const negotiationsData = result.data?.negotiations.negotiations;\n      if (!isShowAll) {\n        setNegotiations(negotiationsData?.filter((n) => !n?.isConcluded));\n      } else {\n        setNegotiations(negotiationsData);\n      }\n    }\n  }, [result.data]);\n  React.useEffect(() => {\n    if (result.fetchMore) {\n      result\n        .fetchMore({\n          variables: {\n            orderBy: order,\n            limit: negotiations?.length,\n            isConcluded: isShowAll,\n          },\n        })\n        .catch((e) => console.log(e));\n    }\n  }, [order]);\n  if (negotiations?.length === 0) {\n    return <div>Non hai ancora aperto trattative</div>;\n  }\n  if (\n    negotiations?.length &&\n    result.data?.negotiations?.negotiations?.length !== 0\n  ) {\n    const handleFetchMore = () => {\n      if (result.fetchMore) {\n        try {\n          void result.fetchMore({\n            variables: {\n              offset: result.data?.negotiations?.negotiations?.length,\n              orderBy: order,\n              isConcluded: isShowAll,\n            },\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n\n    return (\n      <Container component='main' maxWidth='xs'>\n        <CssBaseline />\n        <BackButton />\n\n        <br />\n        <Typography color='primary' component='h3' variant='h5'>\n          Le tue trattative attive\n        </Typography>\n        <br />\n        <Order setOrder={setOrder} order={order} />\n        <Divider />\n        <FormControlLabel\n          control={\n            <PurpleCheckbox\n              checked={isShowAll}\n              onChange={handleShowAll}\n              name='showAll'\n            />\n          }\n          label='Mostra anche le trattative chiuse'\n        />\n        <InfiniteScroll\n          fetchMore={handleFetchMore}\n          isVisible={isVisible}\n          isLoading={result.loading}\n        >\n          {negotiations.map((negotiation) => (\n            <CardNegotiation\n              key={negotiation?._id}\n              negotiation={negotiation as NegotiationDetailsFragment}\n            />\n          ))}\n        </InfiniteScroll>\n      </Container>\n    );\n  }\n  if (result.data?.negotiations?.negotiations?.length === 0) {\n    return <div>Non ci sono negoziazioni attive</div>;\n  }\n  return <Skeleton />;\n};\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport * as React from 'react';\nimport { Link, RouteComponentProps, useParams } from '@reach/router';\nimport { useNegotiationQuery } from '../generated/graphql';\nimport { notification } from '../cache';\nimport { Container, CssBaseline } from '@material-ui/core';\nimport { BackButton } from '../components/BackButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CloseNegotiationButton } from '../containers/CloseNegotiationButton';\nimport { useStyles } from '../utils/styleHook';\n\nexport const Negotiation: React.FC<RouteComponentProps> = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { id }: { id: string } = useParams();\n  const classes = useStyles();\n\n  const { data, loading, error } = useNegotiationQuery({ variables: { id } });\n  const adWine =\n    data?.negotiation?.ad.__typename === 'AdWine'\n      ? data?.negotiation?.ad\n      : null;\n  const UserContact = () => {\n    if (adWine?.postedBy.hideContact) {\n      return null;\n    }\n    return (\n      <div>\n        puoi contattare l utente al numero: {adWine?.postedBy.phoneNumber} o\n        alla mail {adWine?.postedBy.email}\n      </div>\n    );\n  };\n  if (error && !loading) {\n    notification({\n      type: 'error',\n      message: `${error.message}`,\n    });\n    return <div>Errore</div>;\n  }\n  if (loading) return <div>loading</div>;\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <BackButton />\n      <div className={classes.paper}>\n        <Typography color='primary' component='h3' variant='h5'>\n          Gestisci la trattativa\n        </Typography>\n        <Typography color='secondary' variant='body1'>\n          Puoi decidere se contattare l utente tramite il nostro portale o\n          usando i suoi contatti\n        </Typography>\n      </div>\n      <UserContact />\n      <Typography color='secondary' variant='body1'>\n        Questa trattativa riguarda l annuncio per {adWine?.wineName}{' '}\n        {adWine?.wine?.denominazioneZona}\n      </Typography>\n      {data?.negotiation?.isConcluded ? null : (\n        <CloseNegotiationButton id={id} />\n      )}\n      <Button\n        className={classes.sellButton}\n        component={Link}\n        to={`/messaggi/${data?.negotiation?._id}`}\n      >\n        Vai alla chat\n      </Button>\n    </Container>\n  );\n};\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport * as React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport Badge from '@material-ui/core/Badge';\nimport { Link as RouterLink } from '@reach/router';\nimport { myInfo } from '../cache';\nimport { MessagesQuery } from '../generated/graphql';\n\nexport const MessageListEl: React.FC<{\n  id: string;\n  messages: MessagesQuery['messages'];\n}> = ({ messages, id }) => {\n  const me = myInfo();\n  if (!messages) return null;\n  const messagesForMe = messages.filter(\n    (message) => message.sentTo._id === me?._id\n  );\n  const messagesFromMe = messages.filter(\n    (message) => message.sentBy._id === me?._id\n  );\n  const unreadMessages = messagesForMe?.filter((message) => !message.isViewed)\n    .length;\n\n  const recipient = messagesForMe.length\n    ? messagesForMe[0].sentBy.firstName\n    : messagesFromMe[0].sentTo.firstName;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const ad = messagesForMe.length\n    ? //@ts-expect-error I know is a adWine\n      (messagesForMe[0].negotiation.ad.wineName as string)\n    : //@ts-expect-error I know is a adWine\n      (messagesFromMe[0].negotiation.ad.wineName as string);\n\n  return (\n    <>\n      <ListItem\n        button\n        // eslint-disable-next-line react/display-name\n        component={React.forwardRef((itemProps, ref) => (\n          //ts ignore because followed the mui docs\n\n          <RouterLink\n            to={`/messaggi/${id}`}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            //@ts-ignore\n            ref={ref}\n            {...itemProps}\n          />\n        ))}\n      >\n        <ListItemIcon>\n          <Badge badgeContent={unreadMessages} color='primary'>\n            <MailOutlineIcon />\n          </Badge>\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            recipient === 'Amministratore'\n              ? 'Amministratore'\n              : `Cantina ${recipient} - ${ad}`\n          }\n        />\n      </ListItem>\n      <Divider />\n    </>\n  );\n};\n","import * as React from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport { useMessagesQuery } from '../generated/graphql';\nimport _ from 'lodash';\nimport { MessageListEl } from '../components/MessageListEl';\nimport { notification } from '../cache';\nimport { RouteComponentProps } from '@reach/router';\nimport { BackButton } from '../components/BackButton';\n\nexport const Messages: React.FC<RouteComponentProps> = () => {\n  const messagesResult = useMessagesQuery({\n    fetchPolicy: 'network-only',\n    onError: (error) => {\n      notification({\n        type: 'error',\n        message: error.message,\n      });\n    },\n  });\n  const messages =\n    messagesResult.data?.messages && messagesResult.data?.messages;\n  const messagesForNegotiationObj = _.groupBy(\n    messages,\n    (message) => message.negotiation._id\n  );\n  const messagesForNegotiation = Object.entries(\n    messagesForNegotiationObj\n  ).sort((a, b) => a[0].localeCompare(b[0]));\n  if (messagesResult.loading) {\n    return <Skeleton />;\n  }\n  if (messagesResult.error) return <div>error</div>;\n  if (!messagesForNegotiation.length) return <div>nno ci sono messaggi</div>;\n  if (!messages) return null;\n  return (\n    <Container component='main' maxWidth='sm'>\n      <CssBaseline />\n      <BackButton />\n      <List>\n        {messagesForNegotiation.map((el) => (\n          <div key={el[0]}>\n            <MessageListEl messages={el[1]} id={el[0]} />\n          </div>\n        ))}\n      </List>\n    </Container>\n  );\n};\n","import { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport { myInfo } from '../../cache';\nimport { MessageDetailsFragment } from '../../generated/graphql';\n\nexport const MessageChat: React.FC<{\n  message: MessageDetailsFragment | null;\n}> = ({ message }) => {\n  if (!message) return null;\n  const me = myInfo();\n  const isMyMessage = message.sentBy._id === me?._id;\n  const borderTopLeft = isMyMessage ? 12 : 0;\n  const borderTopRight = isMyMessage ? 0 : 12;\n  return (\n    <Box\n      display='flex'\n      flexDirection={isMyMessage ? 'row-reverse' : 'row'}\n      p={1}\n      m={1}\n    >\n      <Box\n        p={1}\n        color='white'\n        bgcolor={isMyMessage ? '#6d1331' : '#707070'}\n        style={{\n          borderBottomLeftRadius: 12,\n          borderBottomRightRadius: 12,\n          borderTopRightRadius: borderTopRight,\n          borderTopLeftRadius: borderTopLeft,\n        }}\n      >\n        <Typography variant='body1'>{message.content}</Typography>\n        <Grid container justify='flex-end'>\n          <Typography align='right' variant='caption'>\n            {message.dateSent}\n          </Typography>\n        </Grid>\n      </Box>\n    </Box>\n  );\n};\n","import TextField from '@material-ui/core/TextField';\nimport * as React from 'react';\nimport {\n  MessageInput,\n  MessagesNegotiationQuery,\n} from '../../generated/graphql';\nimport { MessageChat } from './MessageChat';\nimport SendIcon from '@material-ui/icons/Send';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { IconButton } from '@material-ui/core';\nimport { myInfo } from '../../cache';\nimport { InfiniteScroll } from '../InfiniteScrollFetch';\nimport { DeepExtractType } from 'ts-deep-extract-types';\nimport { CloseNegotiationButton } from '../../containers/CloseNegotiationButton';\nimport { CreateReview } from '../../containers/CreateReview';\n\ninterface PropMessages {\n  propsMessage: {\n    isLoading: boolean;\n    messages: DeepExtractType<\n      MessagesNegotiationQuery,\n      ['messagesForNegotiation']\n    >['messages'];\n    isVisible: boolean;\n    handleCreate: (message: MessageInput) => Promise<void>;\n    handleFetchMore: () => Promise<void>;\n  };\n}\n\nexport const Chat: React.FC<PropMessages> = ({ propsMessage }) => {\n  const me = myInfo();\n  const [messageContent, setMessageContent] = React.useState<string>('');\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [isFirstRender, setIsFirstRender] = React.useState<boolean>(true);\n  const divRef = React.useRef<null | HTMLDivElement>(null);\n  setTimeout(() => setIsFirstRender(false), 1000);\n  React.useEffect(() => {\n    if (divRef.current) {\n      if (isLoading) return;\n      divRef.current.scroll({\n        top: document.body.offsetHeight + 1000000,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [propsMessage.messages]);\n  const message = propsMessage.messages ? propsMessage.messages[0] : null;\n  if (!message) {\n    return null;\n  }\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageContent(event.target.value);\n  };\n  const recipient =\n    message.sentBy._id === me?._id ? message.sentTo._id : message.sentBy._id;\n  const handleCreateMessage = () => {\n    const newMessage = {\n      content: messageContent,\n      sentTo: recipient,\n      negotiation: message.negotiation._id,\n    };\n    void propsMessage.handleCreate(newMessage);\n\n    setMessageContent('');\n  };\n  if (!propsMessage.messages) return null;\n  return (\n    <>\n      <div\n        style={{\n          height: '75vh',\n          margin: 0,\n          padding: 0,\n          overflowY: 'scroll',\n        }}\n        ref={divRef}\n      >\n        <InfiniteScroll\n          fetchMore={propsMessage.handleFetchMore}\n          isLoading={isLoading}\n          isVisible={propsMessage.isVisible && !isFirstRender}\n          setIsLoading={setIsLoading}\n        >\n          {propsMessage.messages?.map((message) => (\n            <MessageChat key={message?._id} message={message} />\n          ))}\n        </InfiniteScroll>\n      </div>\n      <hr style={{ borderWidth: 1, borderColor: '#6d1331' }} />\n      <div\n        style={{\n          height: '10vh',\n          backgroundColor: '#fff',\n          paddingTop: 0,\n        }}\n      >\n        {message.negotiation.isConcluded ? (\n          <CreateReview\n            isBuy={true}\n            idNegotiation={message.negotiation._id}\n            idUser={recipient}\n            type={message.negotiation.type}\n          />\n        ) : (\n          <CloseNegotiationButton id={message.negotiation._id} />\n        )}\n        <TextField\n          fullWidth\n          multiline\n          rowsMax={2}\n          variant='outlined'\n          name='content'\n          type='text'\n          placeholder=''\n          label=''\n          value={messageContent}\n          onChange={handleChange}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='end'>\n                <IconButton\n                  disabled={!messageContent}\n                  onClick={handleCreateMessage}\n                >\n                  <SendIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { RouteComponentProps } from '@reach/router';\nimport {\n  MessagesNegotiationQuery,\n  useMessagesNegotiationQuery,\n  useCreateMessageMutation,\n  MessageInput,\n} from '../generated/graphql';\nimport { useParams } from '@reach/router';\nimport { myInfo, notification } from '../cache';\nimport { Chat } from '../components/Chat';\nimport { DeepExtractType } from 'ts-deep-extract-types';\nimport { format } from 'date-fns';\nexport const Message: React.FC<RouteComponentProps> = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { id }: { id: string } = useParams();\n  const me = myInfo();\n  const { data, loading, error, fetchMore } = useMessagesNegotiationQuery({\n    fetchPolicy: 'network-only',\n    variables: { id, offset: 0, limit: 20 },\n  });\n  const [sortedMessage, setSortedMessage] = React.useState<\n    DeepExtractType<\n      MessagesNegotiationQuery,\n      ['messagesForNegotiation']\n    >['messages']\n  >([]);\n  const message = data?.messagesForNegotiation?.messages?.length\n    ? data?.messagesForNegotiation.messages[0]\n    : null;\n  const [createMessage] = useCreateMessageMutation({\n    onError: (error) => notification({ type: 'error', message: error.message }),\n    onCompleted: (createdMessage) => {\n      if (createdMessage.createMessage?.errors?.length) {\n        const errorMessages = createdMessage.createMessage?.errors.map(\n          (error) => error?.text\n        );\n        notification({\n          type: 'error',\n          message: `${errorMessages.toString()}`,\n        });\n      }\n    },\n    // update: (cache, data) => {\n    //   updateCacheMessages(cache, data.data?.createMessage?.response);\n    // },\n  });\n\n  React.useEffect(() => {\n    if (data?.messagesForNegotiation?.messages) {\n      setSortedMessage([...data?.messagesForNegotiation?.messages].reverse());\n    }\n  }, [data?.messagesForNegotiation?.messages]);\n  const handleFetchMore = async () => {\n    if (fetchMore) {\n      try {\n        await fetchMore({\n          variables: {\n            offset: data?.messagesForNegotiation?.messages?.length,\n          },\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n  if (!message) return <div>niente mess ancora</div>;\n\n  const handleCreate = async (message: MessageInput) => {\n    await createMessage({\n      variables: { message },\n    });\n    const newMessage = {\n      ...message,\n      dateSent: format(new Date(), 'dd MMM yy, H:m'),\n      sentBy: { _id: me?._id },\n      _id: Date.now().toString(),\n    };\n    if (sortedMessage?.length) {\n      setSortedMessage([...sortedMessage, newMessage] as DeepExtractType<\n        MessagesNegotiationQuery,\n        ['messagesForNegotiation']\n      >['messages']);\n    }\n  };\n  const propsMessage = {\n    isLoading: loading,\n    messages: sortedMessage,\n    isVisible:\n      data?.messagesForNegotiation?.messages?.length !==\n      data?.messagesForNegotiation?.pageCount,\n    handleCreate,\n    handleFetchMore,\n  };\n  if (!loading && error) {\n    return <div>error</div>;\n  }\n  if (loading || propsMessage.isVisible === undefined) {\n    return <div>loading</div>;\n  }\n  if (!data?.messagesForNegotiation?.messages?.length) {\n    return null;\n  }\n  return (\n    <Container component='main' maxWidth='sm'>\n      <CssBaseline />\n      <Chat propsMessage={propsMessage} />\n    </Container>\n  );\n};\n","import Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { RouteComponentProps } from '@reach/router';\nimport * as React from 'react';\nimport { BackButton } from '../components/BackButton';\nimport { CardWine } from '../components/CardWine';\nimport { useFavoriteQuery } from '../generated/graphql';\nimport { AdsWineResult } from '../types';\n\nexport const SavedAds: React.FC<RouteComponentProps> = () => {\n  const { data, loading, error } = useFavoriteQuery();\n  if (loading) return <div>loading</div>;\n  if (error || !data?.me?.savedAds) return <div>error</div>;\n  if (data?.me?.savedAds.length === 0)\n    return <div>Non hai ancora salvato annunci</div>;\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <BackButton />\n      <br />\n      <Typography color='primary' component='h3' variant='h5'>\n        Gli annunci che hai salvato\n      </Typography>\n      <br />\n      {data?.me?.savedAds.map((ad) => (\n        <CardWine key={ad._id} ad={ad as AdsWineResult} />\n      ))}\n    </Container>\n  );\n};\n","import * as React from 'react';\nimport { StyledBox } from './StyledBox';\nimport Typography from '@material-ui/core/Typography';\nimport { ReviewDetailsFragment, TypeAd } from '../generated/graphql';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { myInfo } from '../cache';\nimport Rating from '@material-ui/lab/Rating';\n\nexport const CardReview: React.FC<{ review: ReviewDetailsFragment | null }> = ({\n  review,\n}) => {\n  const me = myInfo();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('sm'));\n  const width = matches ? 400 : 250;\n  const isBuy = review?.type === TypeAd.Buy ? true : false;\n  const isMyReview = review?.createdBy._id === me?._id ? true : false;\n  if (!review) return null;\n  return (\n    <StyledBox width={width} typeAd={review.type}>\n      <Rating name='read-only' value={review.rating} readOnly precision={0.1} />\n\n      <Typography\n        align='left'\n        variant='h6'\n        color={isBuy ? 'textSecondary' : 'primary'}\n      >\n        {isMyReview\n          ? `Cosa hai detto riguardante la cantina ${review.forUser.firstName}`\n          : `La cantina ${review.createdBy.firstName} dice di te`}\n        :\n      </Typography>\n      <br />\n      <Typography\n        align='left'\n        variant='body1'\n        color={isBuy ? 'textSecondary' : 'primary'}\n      >\n        {review.content}\n      </Typography>\n    </StyledBox>\n  );\n};\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { RouteComponentProps } from '@reach/router';\nimport {\n  QueryOrderBy,\n  useReviewsQuery,\n  ReviewsQuery,\n  ReviewDetailsFragment,\n} from '../generated/graphql';\nimport { BackButton } from '../components/BackButton';\nimport { Order } from '../components/FilterAds/Order';\nimport { InfiniteScroll } from '../components/InfiniteScrollFetch';\nimport { DeepExtractType } from 'ts-deep-extract-types';\nimport { CardReview } from '../components/CardReview';\n\nexport const Reviews: React.FC<RouteComponentProps> = () => {\n  const [reviews, setReviews] = React.useState<\n    DeepExtractType<ReviewsQuery, ['reviews']>['reviews']\n  >([]);\n  const [order, setOrder] = React.useState<QueryOrderBy>(\n    QueryOrderBy.CreatedAtDesc\n  );\n  const { data, error, loading, fetchMore } = useReviewsQuery({\n    variables: {\n      offset: 0,\n      limit: 4,\n      orderBy: QueryOrderBy.CreatedAtDesc,\n    },\n    onError: (error) => console.log(error),\n  });\n  React.useEffect(() => {\n    if (data?.reviews?.reviews) {\n      setReviews(data.reviews.reviews);\n    }\n  }, [data]);\n  React.useEffect(() => {\n    if (reviews && reviews.length && fetchMore) {\n      fetchMore({\n        variables: { orderBy: order, limit: reviews.length },\n      }).catch((e) => console.log(e));\n    }\n  }, [order]);\n  if (reviews?.length === 0) {\n    return <div>Non hai ancora recensioni</div>;\n  }\n  if (reviews?.length) {\n    const handleFetchMore = async () => {\n      if (fetchMore) {\n        try {\n          await fetchMore({\n            variables: {\n              offset: data?.reviews?.reviews?.length,\n              orderBy: order,\n            },\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n    if (error) return <div>error</div>;\n    return (\n      <Container component='main' maxWidth='xs'>\n        <CssBaseline />\n        <BackButton />\n        <br />\n        <Typography color='primary' component='h3' variant='h5'>\n          Le tue recensioni\n        </Typography>\n        <br />\n        <Order setOrder={setOrder} order={order} />\n        <InfiniteScroll\n          fetchMore={handleFetchMore}\n          isVisible={reviews.length !== data?.reviews?.pageCount}\n          isLoading={loading}\n        >\n          {' '}\n          {reviews &&\n            reviews.map((review) => (\n              <CardReview\n                key={review && review._id}\n                review={review as ReviewDetailsFragment}\n              />\n            ))}\n        </InfiniteScroll>\n      </Container>\n    );\n  }\n  return <Skeleton />;\n};\n","import * as React from 'react';\nimport { Router } from '@reach/router';\nimport { Header } from '../components/Navigation';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { SignUp } from './Signup';\n// import { Profile } from './Profile';\nimport { Home } from './Home';\nimport { Buy } from './BuySell';\nimport { Ads } from './Ads';\nimport { Ad } from './Ad';\nimport { MyAds } from './MyAds';\nimport { Negotiations } from './Negotiations';\nimport { Negotiation } from './Negotiation';\nimport { Messages } from './Messages';\nimport { Message } from './Message';\n\nimport { SavedAds } from './SavedAds';\nimport { Reviews } from './Reviews';\n\nexport const Pages: React.FC = () => {\n  return (\n    <>\n      <CssBaseline />\n      <Header />\n      <main>\n        <Router primary={false} component={React.Fragment}>\n          <Home path='/' />\n          {['/buy', '/sell'].map((path) => (\n            <Buy key={path} path={path} />\n          ))}\n          <Ads path='/annunci' />\n          <Ad path='/annunci/:id' />\n          <Messages path='/messaggi' />\n          <Message path='/messaggi/:id' />\n          <MyAds path='/creati' />\n\n          <Negotiations path='/trattative' />\n          <Negotiation path='/trattative/:id' />\n          <Reviews path='/recensioni' />\n          {/* <Profile path='/profilo' /> */}\n          <SavedAds path='/salvati' />\n          <SignUp path='/signup' />\n        </Router>\n      </main>\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport * as React from 'react';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\n\n//import { ColorModeSwitcher } from './ColorModeSwitcher';\nimport { Pages } from './pages';\n//import { Login } from './pages/Login';\n//\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['Montserrat'].join(','),\n  },\n  palette: {\n    primary: {\n      main: '#6d1331',\n      light: '#8a425a5',\n      dark: '#4c0d22',\n    },\n    secondary: {\n      main: '#707070',\n      light: '#8c8c8c',\n      dark: '#4e4e4e',\n    },\n    text: {\n      primary: '#000',\n      secondary: '#fff',\n    },\n  },\n});\n\nexport const App: React.FC = () => (\n  <ThemeProvider theme={theme}>\n    <Pages />\n  </ThemeProvider>\n);\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  split,\n  gql,\n  NormalizedCacheObject,\n} from '@apollo/client';\nimport { setContext } from '@apollo/link-context';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { WebSocketLink } from '@apollo/link-ws';\nimport { cache } from './cache';\n\nexport const typeDefs = gql`\n  enum AlertStatus {\n    success\n    warning\n    info\n    error\n  }\n\n  type WineSearched {\n    typeAd: TypeAd\n    typeProduct: TypeProduct\n    wineName: String\n    harvest: Int\n    abv: Float\n    price: Float\n    liters: Int\n    isPost: Boolean\n  }\n\n  type Notification {\n    type: AlertStatus\n    message: String\n  }\n  extend type Query {\n    isLoggedIn: Boolean!\n    notification: Notification\n    searchedWine: WineSearched\n    myInfo: User\n  }\n`;\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('wineapp-user-token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : null,\n    },\n  };\n});\n\nconst httpLink = new HttpLink({ uri: 'http://localhost:4000/graphql' });\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:4000/graphql`,\n  options: {\n    reconnect: true,\n    connectionParams: {\n      authToken: localStorage.getItem('wineapp-user-token'),\n    },\n  },\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link: splitLink,\n  typeDefs,\n  resolvers: {},\n});\n\nReactDOM.render(\n  // <React.StrictMode>\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}