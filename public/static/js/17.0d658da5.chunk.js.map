{"version":3,"sources":["components/UserForm/index.tsx","pages/Signup.tsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","input","color","underline","borderBottom","disabled","focused","error","initialValues","email","reEmail","password","rePassword","firstName","lastName","address","via","comune","provincia","regione","CAP","pIva","phoneNumber","hideContact","UserForm","onSubmit","validationSchema","isValid","dirty","setFieldValue","classes","className","Avatar","Typography","component","variant","Grid","container","item","xs","sm","TextField","name","type","label","placeholder","underlineColor","labelTextColor","inputTextColor","PasswordField","ComboboxField","items","optionsRegioni","ComboboxProvince","ComboboxComuni","max","SliderField","Button","fullWidth","justify","Link","href","SignUp","useCreateUserMutation","onError","notification","message","onCompleted","createUser","errors","length","localStorage","setItem","response","token","user","_id","isLoggedInVar","navigate","errorMessages","map","text","toString","createUserMutation","values","a","userInputValues","_","cloneDeep","variables","userInput","Container","maxWidth","CssBaseline"],"mappings":"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","file":"static/js/17.0d658da5.chunk.js","sourcesContent":["import { Form, Formik } from 'formik';\nimport * as React from 'react';\nimport { TextField } from '../FormFields/TextField';\nimport { PasswordField } from '../FormFields/PasswordField';\nimport { optionsRegioni } from './data';\nimport { validationSchema } from '../../utils/formHelper';\nimport { SliderField } from '../FormFields/SliderField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport LinkMUI from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { ComboboxField } from '../FormFields/ComboboxField';\nimport { ComboboxProvince } from '../FormFields/ComboboxProvince';\nimport { ComboboxComuni } from '../FormFields/ComboboxComuni';\n// import { AddressForm } from '../AddressForm';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  input: {\n    color: '#6d1331',\n  },\n  underline: {\n    color: '#6d1331',\n    '&:before': {\n      borderBottom: '1px solid #6d1331',\n    },\n    '&&&&:hover:before': {\n      borderBottom: '2px solid #6d1331',\n    },\n    '&:after': {\n      borderBottom: '3px solid #6d1331',\n    },\n    disabled: {},\n    focused: {},\n    error: {},\n  },\n}));\n\ninterface AddressInputForm {\n  via: string;\n  comune: string;\n  provincia: string;\n  regione: string;\n  CAP: string;\n}\n\nconst initialAddress: AddressInputForm = {\n  via: '',\n  comune: '',\n  provincia: '',\n  regione: '',\n  CAP: '12345',\n};\n\nexport interface UserInputForm {\n  email: string;\n  reEmail?: string;\n  password: string;\n  rePassword?: string;\n  firstName: string;\n  lastName: string;\n  address: AddressInputForm;\n  pIva: string;\n  phoneNumber: string;\n  hideContact: boolean;\n}\n\nconst initialValues: UserInputForm = {\n  email: '',\n  reEmail: '',\n  password: '',\n  rePassword: '',\n  firstName: '',\n  lastName: '',\n  address: initialAddress,\n  pIva: '',\n  phoneNumber: '',\n  hideContact: false,\n};\n\nexport const UserForm: React.FC<{\n  onSubmit: (values: UserInputForm) => void;\n}> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ isValid, dirty, setFieldValue }) => {\n        const classes = useStyles();\n        return (\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n              Sign up\n            </Typography>\n            <Form className={classes.form}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    name='firstName'\n                    type='text'\n                    label='Nome'\n                    placeholder='Nome'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    name='lastName'\n                    type='text'\n                    label='Cognome'\n                    placeholder='Cognome'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='email'\n                    type='email'\n                    label='Email'\n                    placeholder='Email address'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='reEmail'\n                    type='email'\n                    label='Reinsert Email'\n                    placeholder='Reinsert Email address'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <PasswordField\n                    name='password'\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <PasswordField\n                    name='rePassword'\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='pIva'\n                    type='text'\n                    label='Partita Iva'\n                    placeholder='Partita Iva'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='phoneNumber'\n                    type='text'\n                    label='Numero di telefono'\n                    placeholder='Numero di telefono'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                {/* <AddressForm setFieldValue={setFieldValue} /> */}\n                <Grid item xs={12}>\n                  <ComboboxField\n                    setFieldValue={setFieldValue}\n                    name='address.regione'\n                    label='Regione'\n                    items={optionsRegioni}\n                    labelTextColor={'#6d1331'}\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <ComboboxProvince\n                    setFieldValue={setFieldValue}\n                    name='address.provincia'\n                    label='Provincia'\n                    labelTextColor={'#6d1331'}\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <ComboboxComuni\n                    setFieldValue={setFieldValue}\n                    name='address.comune'\n                    label='Comune'\n                    labelTextColor={'#6d1331'}\n                    underlineColor={classes.underline}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='address.via'\n                    type='text'\n                    label='Via'\n                    placeholder='Via'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    name='address.CAP'\n                    type='number'\n                    max='99999'\n                    label='CAP'\n                    placeholder='CAP'\n                    underlineColor={classes.underline}\n                    labelTextColor={'#6d1331'}\n                    inputTextColor={classes.input}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <SliderField\n                    name='hideContact'\n                    label='Nascondi info personali'\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                fullWidth\n                //isLoading={isValidating || isSubmitting}\n                type='submit'\n                disabled={!dirty || !isValid}\n              >\n                Submit\n              </Button>\n\n              <Grid container justify='flex-end'>\n                <Grid item>\n                  <LinkMUI href='#' variant='body2'>\n                    Already have an account? Sign in\n                  </LinkMUI>\n                </Grid>\n              </Grid>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n","import * as React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { UserForm, UserInputForm } from '../components/UserForm';\nimport { useCreateUserMutation, UserInput } from '../generated/graphql';\nimport { isLoggedInVar, notification } from '../cache';\nimport { navigate } from '@reach/router';\nimport _ from 'lodash';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst SignUp: React.FC<RouteComponentProps> = () => {\n  const [createUserMutation] = useCreateUserMutation({\n    onError: (error) =>\n      notification({\n        type: 'error',\n        message: error.message,\n      }),\n    onCompleted: ({ createUser }) => {\n      if (createUser?.errors?.length === 0) {\n        localStorage.setItem(\n          'wineapp-user-token',\n          createUser?.response?.token as string\n        );\n        localStorage.setItem(\n          'wineapp-user-id',\n          createUser?.response?.user._id as string\n        );\n        isLoggedInVar(true);\n        notification({\n          type: 'success',\n          message: 'welcome',\n        });\n        void navigate('/');\n      }\n      if (createUser?.errors?.length) {\n        const errorMessages = createUser.errors.map((error) => error?.text);\n        notification({\n          type: 'error',\n          message: errorMessages.toString(),\n        });\n      }\n    },\n  });\n  const onSubmit = async (values: UserInputForm) => {\n    const userInputValues = _.cloneDeep(values);\n    delete userInputValues.reEmail;\n    delete userInputValues.rePassword;\n    userInputValues.address.CAP = userInputValues.address.CAP.toString();\n    await createUserMutation({\n      variables: {\n        userInput: userInputValues as UserInput,\n      },\n    });\n  };\n  return (\n    <Container component='main' maxWidth='xs'>\n      <UserForm onSubmit={onSubmit} />;\n      <CssBaseline />\n    </Container>\n  );\n};\n\nexport default SignUp;\n"],"sourceRoot":""}