{"version":3,"sources":["../node_modules/@material-ui/icons/ExpandMore.js","containers/InfiniteScrollFetch.tsx","utils/useIntersectionHook.tsx","containers/CloseNegotiationButton.tsx","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","containers/CreateReview.tsx","components/ReviewModal/index.tsx","../node_modules/@material-ui/icons/Send.js","components/Chat/MessageChat.tsx","components/Chat/index.tsx","pages/Message.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","createStyles","root","display","flexDirection","alignItems","InfiniteScroll","props","classes","message","useLocation","pathname","split","rootMargin","threshold","entry","setEntry","node","setNode","observer","current","disconnect","window","IntersectionObserver","currentObserver","observe","useIntersect","ref","isOk","setIsOk","intersectionRatio","fetchMore","setIsLoading","isVisible","className","id","children","isLoading","CircularProgress","style","height","CloseNegotiationButton","isBuy","useUpdateNegotiationMutation","onCompleted","closedNegotiation","updateNegotiation","errors","length","errorMessages","map","error","text","notification","type","toString","onError","closeNegotiation","loading","handleCloseNegotiation","a","variables","negotiation","_id","isConcluded","aria-label","buyButton","sellButton","disabled","onClick","DialogTitle","_props$disableTypogra","disableTypography","other","_objectWithoutProperties","_extends","clsx","Typography","component","variant","withStyles","margin","padding","flex","name","CreateReview","review","closeModal","useCreateReviewMutation","createdReview","createReview","Button","color","labels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","CreateReviewModal","idUser","idNegotiation","open","setOpen","setValue","hover","setHover","setReview","useStylesHook","classesTextField","useStylesForms","classesStars","useStyleRating","handleClose","TypeAd","Buy","Dialog","onClose","aria-labelledby","DialogContent","precision","onChange","event","newValue","onChangeActive","newHover","Box","ml","TextField","multiline","rows","helperText","target","InputLabelProps","InputProps","inputSell","underline","underlineSell","label","placeholder","DialogActions","forUser","rating","content","MessageChat","me","myInfo","isMyMessage","sentBy","borderTopLeft","borderTopRight","data-testid","p","m","bgcolor","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","Grid","container","justify","align","dateSent","Chat","propsMessage","messageContent","setMessageContent","isFirstRender","setIsFirstRender","divRef","timerIdRef","setTimeout","timeoutId","clearTimeout","scroll","top","document","body","offsetHeight","left","behavior","messages","recipient","sentTo","overflowY","handleFetchMore","borderWidth","borderColor","backgroundColor","paddingTop","fullWidth","rowsMax","inputProps","endAdornment","InputAdornment","position","IconButton","newMessage","handleCreate","Message","useParams","useMessagesNegotiationQuery","fetchPolicy","offset","limit","data","sortedMessage","setSortedMessage","messagesForNegotiation","useCreateMessageMutation","console","log","createdMessage","messageCreated","createMessage","response","reverse","pageCount","undefined","Loading","Container","maxWidth","CssBaseline"],"mappings":"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","file":"static/js/12.d85f4c33.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import { useLocation } from '@reach/router';\nimport * as React from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useIntersect } from '../utils/useIntersectionHook';\nimport { makeStyles, createStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\ninterface InfiniteScrollProps {\n  children: React.ReactNode;\n  fetchMore: () => void;\n  isVisible: boolean;\n  isLoading: boolean;\n  setIsLoading?: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n  })\n);\n\nexport const InfiniteScroll: React.FC<InfiniteScrollProps> = (props) => {\n  const classes = useStyles();\n  const { pathname } = useLocation();\n  const message = pathname.split('/')[1] === 'messaggi';\n  const [ref, entry] = useIntersect({ threshold: 0 });\n  const [isOk, setIsOk] = React.useState<boolean>(true);\n  React.useEffect(() => {\n    if (entry && entry?.intersectionRatio >= 0.5 && isOk) {\n      void props.fetchMore();\n      props.setIsLoading && props.setIsLoading(true);\n      setIsOk(false);\n    } else if (entry?.intersectionRatio === 0 && !isOk) {\n      setIsOk(true);\n      props.setIsLoading && props.setIsLoading(false);\n    }\n  }, [entry?.intersectionRatio]);\n  if (message) {\n    return (\n      <>\n        {props.isVisible ? (\n          <div className={classes.root} id='page-bottom-boundary' ref={ref}>\n            {' '}\n            <ExpandMoreIcon />\n          </div>\n        ) : null}\n        {props.children}\n      </>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      {props.children}\n      {props.isVisible ? (\n        props.isLoading ? (\n          <CircularProgress />\n        ) : (\n          <div id='page-bottom-boundary' ref={ref} style={{ height: 30 }}>\n            {' '}\n            <ExpandMoreIcon />\n          </div>\n        )\n      ) : null}\n    </div>\n  );\n};\n","import * as React from 'react';\n\nexport const useIntersect = ({\n  root = null,\n  rootMargin = '0px',\n  threshold = 0,\n}): [\n  React.Dispatch<React.SetStateAction<HTMLDivElement | null>>,\n  IntersectionObserverEntry | null\n] => {\n  const [entry, setEntry] = React.useState<IntersectionObserverEntry | null>(\n    null\n  );\n  const [node, setNode] = React.useState<HTMLDivElement | null>(null);\n\n  const observer = React.useRef<IntersectionObserver | null>(null);\n  React.useEffect(() => {\n    if (observer.current) {\n      observer.current.disconnect();\n    }\n    observer.current = new window.IntersectionObserver(\n      ([entry]) => setEntry(entry),\n      { root, rootMargin, threshold }\n    );\n\n    const { current: currentObserver } = observer;\n\n    if (node) {\n      currentObserver.observe(node);\n    }\n    return () => currentObserver.disconnect();\n  }, [node, root, rootMargin, threshold]);\n  return [setNode, entry];\n};\n","import Button from '@material-ui/core/Button';\nimport * as React from 'react';\nimport { notification } from '../cache';\nimport { useUpdateNegotiationMutation } from '../generated/graphql';\nimport { useStyles } from '../utils/styleHook';\n\nexport const CloseNegotiationButton: React.FC<{\n  id: string;\n  isBuy?: boolean;\n}> = ({ id, isBuy }) => {\n  const classes = useStyles();\n  const [closeNegotiation, { loading }] = useUpdateNegotiationMutation({\n    onCompleted: (closedNegotiation) => {\n      if (closedNegotiation.updateNegotiation?.errors?.length) {\n        const errorMessages = closedNegotiation.updateNegotiation?.errors.map(\n          (error) => error?.text\n        );\n        notification({\n          type: 'error',\n          message: `${errorMessages.toString()}`,\n        });\n      } else {\n        notification({\n          message: 'trattativa chiusa con successo',\n          type: 'success',\n        });\n      }\n    },\n\n    onError: (error) => notification({ type: 'error', message: error.message }),\n  });\n\n  const handleCloseNegotiation = async () => {\n    await closeNegotiation({\n      variables: { negotiation: { _id: id, isConcluded: true } },\n    });\n  };\n\n  return (\n    <Button\n      aria-label='close-negotiation'\n      className={isBuy ? classes.buyButton : classes.sellButton}\n      disabled={loading}\n      onClick={handleCloseNegotiation}\n    >\n      Dichiara chiusa la trattativa\n    </Button>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import Button from '@material-ui/core/Button';\nimport * as React from 'react';\nimport { notification } from '../cache';\nimport { useCreateReviewMutation, ReviewInput } from '../generated/graphql';\n\nexport const CreateReview: React.FC<{\n  review: ReviewInput;\n  disabled: boolean;\n  closeModal?: () => void;\n}> = ({ review, disabled, closeModal }) => {\n  const [createReview, { loading }] = useCreateReviewMutation({\n    onCompleted: (createdReview) => {\n      if (createdReview.createReview?.errors?.length) {\n        const errorMessages = createdReview.createReview?.errors.map(\n          (error) => error?.text\n        );\n        notification({\n          type: 'error',\n          message: `${errorMessages.toString()}`,\n        });\n      } else {\n        notification({\n          type: 'success',\n          message: 'Recensione creata con successo',\n        });\n      }\n    },\n\n    onError: (error) => notification({ type: 'error', message: error.message }),\n  });\n\n  const handleCreateReview = () => {\n    closeModal && closeModal();\n    void createReview({\n      variables: {\n        review,\n      },\n    });\n  };\n\n  return (\n    <Button\n      disabled={disabled || loading}\n      aria-label='review'\n      onClick={handleCreateReview}\n      color='primary'\n    >\n      Recensisci\n    </Button>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport * as React from 'react';\nimport { TypeAd } from '../../generated/graphql';\nimport {\n  StyledRating,\n  useStyles as useStylesHook,\n  useStylesForms,\n  useStyleRating,\n} from '../../utils/styleHook';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { CreateReview } from '../../containers/CreateReview';\nconst labels: { [index: string]: string } = {\n  0.5: 'Useless',\n  1: 'Useless+',\n  1.5: 'Poor',\n  2: 'Poor+',\n  2.5: 'Ok',\n  3: 'Ok+',\n  3.5: 'Good',\n  4: 'Good+',\n  4.5: 'Excellent',\n  5: 'Excellent+',\n};\n\nexport const CreateReviewModal: React.FC<{\n  idNegotiation: string;\n  idUser: string;\n  type: TypeAd;\n}> = ({ idUser, idNegotiation, type }) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [value, setValue] = React.useState<number | null>(2);\n  const [hover, setHover] = React.useState<number>(-1);\n  const [review, setReview] = React.useState<string>('');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setReview(event.target.value);\n  };\n  const classes = useStylesHook();\n  const classesTextField = useStylesForms();\n  const classesStars = useStyleRating();\n  const handleModal = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button\n        aria-label='review'\n        className={type === TypeAd.Buy ? classes.buyButton : classes.sellButton}\n        onClick={handleModal}\n      >\n        Lascia una recensione\n      </Button>\n      <div style={{ display: 'none' }}>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby='form-dialog-title'\n        >\n          <DialogTitle id='form-dialog-title'>\n            Recensisci la trattativa\n          </DialogTitle>\n\n          <DialogContent>\n            <div className={classesStars.root}>\n              <StyledRating\n                name='hover-feedback'\n                value={value}\n                precision={0.5}\n                onChange={(event, newValue) => {\n                  setValue(newValue);\n                }}\n                onChangeActive={(event, newHover) => {\n                  setHover(newHover);\n                }}\n              />\n              {value !== null && (\n                <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>\n              )}\n            </div>\n            <TextField\n              color='primary'\n              multiline\n              rows={4}\n              value={review}\n              error={review.length > 0 && review.length <= 5}\n              helperText='Lunghezza minima 5 caratteri'\n              onChange={handleChange}\n              InputLabelProps={{\n                style: { color: '#6d1331' },\n              }}\n              InputProps={{\n                className: classesTextField.inputSell,\n                classes: {\n                  underline: classesTextField.underlineSell,\n                },\n              }}\n              id='outlined-multiline-flexible'\n              label='Recensione'\n              placeholder='Ottima persona con cui....'\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              aria-label='close-modal'\n              onClick={handleClose}\n              color='primary'\n            >\n              Cancel\n            </Button>\n            <CreateReview\n              disabled={review.length <= 5}\n              review={{\n                forUser: idUser,\n                rating: value as number,\n                negotiation: idNegotiation,\n                content: review,\n                type: type,\n              }}\n              closeModal={handleClose}\n            />\n          </DialogActions>\n        </Dialog>\n      </div>\n    </>\n  );\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","import { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport { myInfo } from '../../cache';\nimport { MessageDetailsFragment } from '../../generated/graphql';\n\nexport const MessageChat: React.FC<{\n  message: MessageDetailsFragment | null;\n}> = ({ message }) => {\n  if (!message) return null;\n  const me = myInfo();\n  const isMyMessage = message.sentBy._id === me?._id;\n  const borderTopLeft = isMyMessage ? 12 : 0;\n  const borderTopRight = isMyMessage ? 0 : 12;\n  return (\n    <Box\n      data-testid='message-box'\n      display='flex'\n      flexDirection={isMyMessage ? 'row-reverse' : 'row'}\n      p={1}\n      m={1}\n    >\n      <Box\n        p={1}\n        color='white'\n        bgcolor={isMyMessage ? '#6d1331' : '#707070'}\n        style={{\n          borderBottomLeftRadius: 12,\n          borderBottomRightRadius: 12,\n          borderTopRightRadius: borderTopRight,\n          borderTopLeftRadius: borderTopLeft,\n        }}\n      >\n        <Typography variant='body1'>{message.content}</Typography>\n        <Grid container justify='flex-end'>\n          <Typography align='right' variant='caption'>\n            {message.dateSent}\n          </Typography>\n        </Grid>\n      </Box>\n    </Box>\n  );\n};\n","import TextField from '@material-ui/core/TextField';\nimport * as React from 'react';\nimport {\n  MessageInput,\n  MessagesNegotiationQuery,\n} from '../../generated/graphql';\nimport { MessageChat } from './MessageChat';\nimport SendIcon from '@material-ui/icons/Send';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { IconButton } from '@material-ui/core';\nimport { myInfo } from '../../cache';\nimport { InfiniteScroll } from '../../containers/InfiniteScrollFetch';\nimport { DeepExtractType } from 'ts-deep-extract-types';\nimport { CloseNegotiationButton } from '../../containers/CloseNegotiationButton';\nimport { CreateReviewModal } from '../../components/ReviewModal';\n\ninterface PropMessages {\n  propsMessage: {\n    isLoading: boolean;\n    messages: DeepExtractType<\n      MessagesNegotiationQuery,\n      ['messagesForNegotiation']\n    >['messages'];\n    isVisible: boolean;\n    handleCreate: (message: MessageInput) => Promise<void>;\n    handleFetchMore: () => Promise<void>;\n  };\n}\n\nexport const Chat: React.FC<PropMessages> = ({ propsMessage }) => {\n  const me = myInfo();\n  const [messageContent, setMessageContent] = React.useState<string>('');\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [isFirstRender, setIsFirstRender] = React.useState<boolean>(true);\n  const divRef = React.useRef<null | HTMLDivElement>(null);\n  const timerIdRef = React.useRef<number>();\n  const id = setTimeout(() => {\n    setIsFirstRender(false), 1000;\n    timerIdRef.current = id;\n  });\n  React.useEffect(() => {\n    const timeoutId = timerIdRef.current;\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, []);\n  React.useEffect(() => {\n    if (divRef.current) {\n      if (isLoading) return;\n      divRef.current.scroll({\n        top: document.body.offsetHeight + 1000000,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [propsMessage.messages]);\n  const message = propsMessage.messages ? propsMessage.messages[0] : null;\n  if (!message) {\n    return null;\n  }\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageContent(event.target.value);\n  };\n  const recipient =\n    message.sentBy._id === me?._id ? message.sentTo._id : message.sentBy._id;\n  const handleCreateMessage = () => {\n    const newMessage = {\n      content: messageContent,\n      sentTo: recipient,\n      negotiation: message.negotiation._id,\n    };\n    void propsMessage.handleCreate(newMessage);\n\n    setMessageContent('');\n  };\n  if (!propsMessage.messages) return null;\n  return (\n    <>\n      <div\n        style={{\n          height: '75vh',\n          margin: 0,\n          padding: 0,\n          overflowY: 'scroll',\n        }}\n        ref={divRef}\n      >\n        <InfiniteScroll\n          fetchMore={propsMessage.handleFetchMore}\n          isLoading={isLoading}\n          isVisible={propsMessage.isVisible && !isFirstRender}\n          setIsLoading={setIsLoading}\n        >\n          {propsMessage.messages?.map((message) => (\n            <MessageChat key={message?._id} message={message} />\n          ))}\n        </InfiniteScroll>\n      </div>\n      <hr style={{ borderWidth: 1, borderColor: '#6d1331' }} />\n      <div\n        style={{\n          height: '10vh',\n          backgroundColor: '#fff',\n          paddingTop: 0,\n        }}\n      >\n        {message.negotiation.isConcluded ? (\n          <CreateReviewModal\n            idNegotiation={message.negotiation._id}\n            idUser={recipient}\n            type={message.negotiation.type}\n          />\n        ) : (\n          <CloseNegotiationButton id={message.negotiation._id} />\n        )}\n        <TextField\n          fullWidth\n          multiline\n          rowsMax={2}\n          variant='outlined'\n          name='content'\n          type='text'\n          placeholder=''\n          label=''\n          value={messageContent}\n          onChange={handleChange}\n          inputProps={{ 'aria-label': 'input-message' }}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='end'>\n                <IconButton\n                  aria-label='send'\n                  disabled={!messageContent}\n                  onClick={handleCreateMessage}\n                >\n                  <SendIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n    </>\n  );\n};\n","import * as React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { RouteComponentProps } from '@reach/router';\nimport {\n  MessagesNegotiationQuery,\n  useMessagesNegotiationQuery,\n  useCreateMessageMutation,\n  MessageInput,\n} from '../generated/graphql';\nimport { useParams } from '@reach/router';\nimport { notification } from '../cache';\nimport { Chat } from '../components/Chat';\nimport { DeepExtractType } from 'ts-deep-extract-types';\nimport { Loading } from '../components/Loading';\n\nconst Message: React.FC<RouteComponentProps> = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { id }: { id: string } = useParams();\n  const { data, loading, error, fetchMore } = useMessagesNegotiationQuery({\n    fetchPolicy: 'network-only',\n    variables: { id, offset: 0, limit: 20 },\n  });\n  const [sortedMessage, setSortedMessage] = React.useState<\n    DeepExtractType<\n      MessagesNegotiationQuery,\n      ['messagesForNegotiation']\n    >['messages']\n  >([]);\n  const message = data?.messagesForNegotiation?.messages?.length\n    ? data?.messagesForNegotiation.messages[0]\n    : null;\n  const [createMessage] = useCreateMessageMutation({\n    onError: (error) => {\n      console.log(error);\n      notification({ type: 'error', message: error.message });\n    },\n    onCompleted: (createdMessage) => {\n      const messageCreated = createdMessage?.createMessage?.response;\n\n      if (createdMessage.createMessage?.errors?.length) {\n        const errorMessages = createdMessage.createMessage?.errors.map(\n          (error) => error?.text\n        );\n        notification({\n          type: 'error',\n          message: `${errorMessages.toString()}`,\n        });\n        return;\n      }\n\n      if (sortedMessage?.length) {\n        setSortedMessage([...sortedMessage, messageCreated] as DeepExtractType<\n          MessagesNegotiationQuery,\n          ['messagesForNegotiation']\n        >['messages']);\n      }\n    },\n    // update: (cache, data) => {\n    //   updateCacheMessages(cache, data.data?.createMessage?.response);\n    // },\n  });\n  React.useEffect(() => {\n    if (data?.messagesForNegotiation?.messages) {\n      setSortedMessage([...data?.messagesForNegotiation?.messages].reverse());\n    }\n  }, [data?.messagesForNegotiation?.messages]);\n  const handleFetchMore = async () => {\n    if (fetchMore) {\n      try {\n        await fetchMore({\n          variables: {\n            offset: data?.messagesForNegotiation?.messages?.length,\n          },\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n  const handleCreate = async (message: MessageInput) => {\n    await createMessage({\n      variables: { message },\n    });\n  };\n  const propsMessage = {\n    isLoading: loading,\n    messages: sortedMessage,\n    isVisible:\n      data?.messagesForNegotiation?.messages?.length !==\n      data?.messagesForNegotiation?.pageCount,\n    handleCreate,\n    handleFetchMore,\n  };\n  if (loading || propsMessage.isVisible === undefined) {\n    return <Loading />;\n  }\n  if (error) {\n    return <div>error</div>;\n  }\n  if (!message) return <div>niente mess ancora</div>;\n\n  if (!data?.messagesForNegotiation?.messages?.length) {\n    return null;\n  }\n  return (\n    <Container component='main' maxWidth='sm'>\n      <CssBaseline />\n      <Chat propsMessage={propsMessage} />\n    </Container>\n  );\n};\n\nexport default Message;\n"],"sourceRoot":""}